* Rule Distribution

#+begin_src R :session rule-distribution :results graphics file :file t2-hist.png
library(tidyverse)

read.csv("t2-distribution.csv") %>%
  ggplot(aes(x = cost)) + geom_histogram(binwidth = 1)

#+end_src

#+RESULTS:
[[file:t2-hist.png]]

* Experiments
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

** Ablation 1 configuration.

#+begin_src json :results file silent :file experiments/conf.json
{
    "compile_command": "cargo build --release --manifest-path src/dios-egraphs/Cargo.toml",
    "base_command": "src/dios-egraphs/target/release/dios-egraphs",
    "extra": "--timeout 180",
    "benchmarks": ["q-prod", "2d-conv", "mat-mul"],
    "input_template": "{}-out/spec.rkt",
    "timeout": 240,
    "percent_cpus": 0.5,
    "parameters": [	
	{
	    "name": "handwritten",
	    "flag": "--handwritten",
	    "args": []
	},
	{
	    "name": "rules",
	    "flag": "--rules",
	    "args": ["t2.json"]
	},
	{
	    "name": "cost-filter",
	    "flag": "--cost-filter",
	    "args": [-10.0, 0.0, 1.0, 10.0]
	},
	{
	    "name": "no-dup-vars",
	    "flag": "--no-dup-vars",
	    "args": []
	},
	{
	    "name": "sub-prog",
	    "flag": "--sub-prog",
	    "args": []
	},
	{
	    "name": "split-phase",
	    "flag": "--split-phase",
	    "args": []
	}
    ]
}
#+end_src

** Ablation 2 configuration (longer timeout).

#+begin_src json :results file silent :file experiments/conf2.json
{
    "compile_command": "cargo build --release --manifest-path src/dios-egraphs/Cargo.toml",
    "base_command": "src/dios-egraphs/target/release/dios-egraphs",
    "extra": "--timeout 3900",
    "benchmarks": ["q-prod", "2d-conv", "mat-mul"],
    "input_template": "{}-out/spec.rkt",
    "timeout": 4000,
    "percent_cpus": 0.5,
    "parameters": [	
	{
	    "name": "handwritten",
	    "flag": "--handwritten",
	    "args": []
	},
	{
	    "name": "rules",
	    "flag": "--rules",
	    "args": ["t2.json"]
	},
	{
	    "name": "cost-filter",
	    "flag": "--cost-filter",
	    "args": [-10.0, 0.0, 1.0, 10.0]
	},
	{
	    "name": "no-dup-vars",
	    "flag": "--no-dup-vars",
	    "args": []
	},
	{
	    "name": "sub-prog",
	    "flag": "--sub-prog",
	    "args": []
	},
	{
	    "name": "split-phase",
	    "flag": "--split-phase",
	    "args": []
	}
    ]
}
#+end_src

* Extract data

#+begin_src sh :dir (magit-toplevel)
cd experiments
./extract.py conf2.json feb9-exp1 feb9-1.csv
#+end_src

#+RESULTS:

* Data exploration
:PROPERTIES:
:header-args: :session graphics :colnames yes
:END:

#+begin_src R :results none
library(tidyverse)

data <- read.csv("feb9-1.csv")
#+end_src

#+begin_src R :results value
data %>%
  filter(handwritten == "False") %>%
  filter(rules == "t2.json") %>%
  ## filter(cost.filter >= 0) %>%
  ## filter(no.dup.vars == "True") %>%
  filter(sub.prog == "True") %>%
  filter(split.phase == "True") %>%
  filter(bench == "q-prod") %>%
  ## filter(variable == "impr_cost" | variable == "cost" | variable == "time") %>%
  select(id, cost.filter, no.dup.vars, sub.prog, split.phase, variable, value)
#+end_src

#+RESULTS:
|  id | cost.filter | no.dup.vars | sub.prog | split.phase | variable  |               value |
|-----+-------------+-------------+----------+-------------+-----------+---------------------|
| 240 |         -10 | True        | True     | True        | time      |          Timed out. |
| 240 |         -10 | True        | True     | True        | cost      |                -1.0 |
| 240 |         -10 | True        | True     | True        | phase_1_n |                     |
| 240 |         -10 | True        | True     | True        | phase_2_n |                     |
| 240 |         -10 | True        | True     | True        | impr_cost |                     |
| 252 |         -10 | False       | True     | True        | time      |   247.1159701347351 |
| 252 |         -10 | False       | True     | True        | cost      |             596.965 |
| 252 |         -10 | False       | True     | True        | phase_1_n |                   6 |
| 252 |         -10 | False       | True     | True        | phase_2_n |                1242 |
| 252 |         -10 | False       | True     | True        | impr_cost | 0.19799999999997908 |
| 264 |           0 | True        | True     | True        | time      |          Timed out. |
| 264 |           0 | True        | True     | True        | cost      |                -1.0 |
| 264 |           0 | True        | True     | True        | phase_1_n |                   8 |
| 264 |           0 | True        | True     | True        | phase_2_n |                2699 |
| 264 |           0 | True        | True     | True        | impr_cost |                     |
| 276 |           0 | False       | True     | True        | time      |          Timed out. |
| 276 |           0 | False       | True     | True        | cost      |                -1.0 |
| 276 |           0 | False       | True     | True        | phase_1_n |                   8 |
| 276 |           0 | False       | True     | True        | phase_2_n |              257554 |
| 276 |           0 | False       | True     | True        | impr_cost |                     |
| 288 |           1 | True        | True     | True        | time      |   3907.579300403595 |
| 288 |           1 | True        | True     | True        | cost      |              62.454 |
| 288 |           1 | True        | True     | True        | phase_1_n |                   8 |
| 288 |           1 | True        | True     | True        | phase_2_n |                2860 |
| 288 |           1 | True        | True     | True        | impr_cost |  12.144000000000013 |
| 300 |           1 | False       | True     | True        | time      |  3978.5280747413635 |
| 300 |           1 | False       | True     | True        | cost      |  61.846000000000004 |
| 300 |           1 | False       | True     | True        | phase_1_n |                   8 |
| 300 |           1 | False       | True     | True        | phase_2_n |              259826 |
| 300 |           1 | False       | True     | True        | impr_cost |   11.74600000000001 |
| 312 |          10 | True        | True     | True        | time      |   3912.639219760895 |
| 312 |          10 | True        | True     | True        | cost      |              62.454 |
| 312 |          10 | True        | True     | True        | phase_1_n |                   8 |
| 312 |          10 | True        | True     | True        | phase_2_n |                2922 |
| 312 |          10 | True        | True     | True        | impr_cost |  12.144000000000013 |
| 324 |          10 | False       | True     | True        | time      |  3907.8842482566833 |
| 324 |          10 | False       | True     | True        | cost      |  58.846000000000004 |
| 324 |          10 | False       | True     | True        | phase_1_n |                   8 |
| 324 |          10 | False       | True     | True        | phase_2_n |              260987 |
| 324 |          10 | False       | True     | True        | impr_cost |               15.75 |
| 336 |             | True        | True     | True        | time      |   244.3377125263214 |
| 336 |             | True        | True     | True        | cost      |             597.163 |
| 336 |             | True        | True     | True        | phase_1_n |                   6 |
| 336 |             | True        | True     | True        | phase_2_n |                   0 |
| 336 |             | True        | True     | True        | impr_cost |                 0.0 |
| 348 |             | False       | True     | True        | time      |  244.28918313980103 |
| 348 |             | False       | True     | True        | cost      |             597.163 |
| 348 |             | False       | True     | True        | phase_1_n |                   6 |
| 348 |             | False       | True     | True        | phase_2_n |                   0 |
| 348 |             | False       | True     | True        | impr_cost |                 0.0 |

#+begin_src R :reuslts value
data %>%
  filter(handwritten == "True") %>%
  filter(rules == "") %>%
  ## filter(cost.filter == "") %>%
  filter(no.dup.vars == "False") %>%
  filter(sub.prog == "False") %>%
  ## filter(split.phase == "False") %>%
  filter(bench == "q-prod") %>%
  ## filter(variable == "cost") %>%
  select(id, bench, cost.filter, split.phase, variable, value)
#+end_src

#+RESULTS:
|  id | bench  | cost.filter | split.phase | variable  |                value |
|-----+--------+-------------+-------------+-----------+----------------------|
| 138 | q-prod |         -10 | True        | time      |    85.56243920326233 |
| 138 | q-prod |         -10 | True        | cost      |   54.526999999999994 |
| 138 | q-prod |         -10 | True        | phase_1_n |                   30 |
| 138 | q-prod |         -10 | True        | phase_2_n |                    5 |
| 138 | q-prod |         -10 | True        | impr_cost |                  0.0 |
| 141 | q-prod |         -10 | False       | time      |     85.2362539768219 |
| 141 | q-prod |         -10 | False       | cost      |   54.526999999999994 |
| 141 | q-prod |         -10 | False       | phase_1_n |                   30 |
| 141 | q-prod |         -10 | False       | phase_2_n |                      |
| 141 | q-prod |         -10 | False       | impr_cost |                      |
| 162 | q-prod |           0 | True        | time      |  0.23753094673156738 |
| 162 | q-prod |           0 | True        | cost      |              176.625 |
| 162 | q-prod |           0 | True        | phase_1_n |                   16 |
| 162 | q-prod |           0 | True        | phase_2_n |                   19 |
| 162 | q-prod |           0 | True        | impr_cost |   129.46100000000007 |
| 165 | q-prod |           0 | False       | time      | 0.011564970016479492 |
| 165 | q-prod |           0 | False       | cost      |   306.08600000000007 |
| 165 | q-prod |           0 | False       | phase_1_n |                   16 |
| 165 | q-prod |           0 | False       | phase_2_n |                      |
| 165 | q-prod |           0 | False       | impr_cost |                      |
| 186 | q-prod |           1 | True        | time      |  0.24418187141418457 |
| 186 | q-prod |           1 | True        | cost      |              175.625 |
| 186 | q-prod |           1 | True        | phase_1_n |                   13 |
| 186 | q-prod |           1 | True        | phase_2_n |                   22 |
| 186 | q-prod |           1 | True        | impr_cost |   130.46100000000007 |
| 189 | q-prod |           1 | False       | time      | 0.011434078216552734 |
| 189 | q-prod |           1 | False       | cost      |   306.08600000000007 |
| 189 | q-prod |           1 | False       | phase_1_n |                   13 |
| 189 | q-prod |           1 | False       | phase_2_n |                      |
| 189 | q-prod |           1 | False       | impr_cost |                      |
| 210 | q-prod |          10 | True        | time      |   0.2769045829772949 |
| 210 | q-prod |          10 | True        | cost      |              175.625 |
| 210 | q-prod |          10 | True        | phase_1_n |                    7 |
| 210 | q-prod |          10 | True        | phase_2_n |                   28 |
| 210 | q-prod |          10 | True        | impr_cost |   130.46100000000007 |
| 213 | q-prod |          10 | False       | time      |  0.01136016845703125 |
| 213 | q-prod |          10 | False       | cost      |   306.08600000000007 |
| 213 | q-prod |          10 | False       | phase_1_n |                    7 |
| 213 | q-prod |          10 | False       | phase_2_n |                      |
| 213 | q-prod |          10 | False       | impr_cost |                      |
| 234 | q-prod |             | True        | time      |    85.38703632354736 |
| 234 | q-prod |             | True        | cost      |   54.526999999999994 |
| 234 | q-prod |             | True        | phase_1_n |                   30 |
| 234 | q-prod |             | True        | phase_2_n |                    0 |
| 234 | q-prod |             | True        | impr_cost |                  0.0 |
| 237 | q-prod |             | False       | time      |    85.02903485298157 |
| 237 | q-prod |             | False       | cost      |   54.526999999999994 |
| 237 | q-prod |             | False       | phase_1_n |                   30 |
| 237 | q-prod |             | False       | phase_2_n |                      |
| 237 | q-prod |             | False       | impr_cost |                      |

* Looking at rules
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

#+begin_src shell :results output text
cargo run --release --manifest-path src/dios-egraphs/Cargo.toml \
       q-prod-out/spec.rkt \
	  --rules t2.json \
	  --cost-filter 0 \
	  --no-dup-vars \
	  --dump-rules \
	  --dry-run 2>&1
#+end_src

#+NAME: r0
#+RESULTS:
#+begin_example
Retained 645 rules
[ruler_2_lr-rev] (VecAdd (VecAdd ?a ?b) (VecMul ?c ?d)) => (VecMAC (VecAdd ?a ?b) ?c ?d)
[ruler_3_lr-rev] (VecAdd (VecMul ?a ?b) (VecMul ?c ?d)) => (VecMAC (VecMul ?a ?b) ?c ?d)
[ruler_4_lr-rev] (VecAdd (VecAdd ?a ?b) (VecMul ?c ?d)) => (VecAdd ?a (VecMAC ?b ?c ?d))
[ruler_13_lr-rev] (Vec (* ?a ?c) (* ?b ?d)) => (VecMul (Vec ?a ?b) (Vec ?c ?d))
[ruler_14_lr-rev] (Vec (+ ?a ?c) (+ ?b ?d)) => (VecAdd (Vec ?a ?b) (Vec ?c ?d))
[ruler_75157_lr-rev] (Vec (+ ?a ?d) (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 1))
[ruler_75158_lr-rev] (Vec (+ ?a ?c) (+ ?b ?d)) => (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 1 ?d))
[ruler_75159_lr-rev] (Vec (+ ?a ?d) (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 1))
[ruler_75160_lr-rev] (Vec (+ ?a ?c) (+ ?d ?b)) => (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 1 ?d))
[ruler_75161_lr] (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 1 ?d)) => (VecAdd (Vec ?a ?b) (Vec ?c ?d))
[ruler_75162_lr-rev] (Vec ?a (+ ?b (* ?c ?d))) => (VecMAC (Vec ?a ?b) (Vec ?b ?c) (Vec 0 ?d))
[ruler_75163_lr-rev] (Vec (+ ?a (* ?c ?d)) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c ?a) (Vec ?d 0))
[ruler_75166_lr] (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 0)) => (VecMul (Vec ?b ?a) (Vec ?d 1))
[ruler_75167_lr] (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 0)) => (VecMul (Vec ?d ?a) (Vec ?b 1))
[ruler_75168_lr] (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 0)) => (VecMul (Vec ?b 1) (Vec ?d ?a))
[ruler_75169_lr] (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 0)) => (VecMul (Vec ?d 1) (Vec ?b ?a))
[ruler_75170_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?d)) => (VecMul (Vec ?c ?a) (Vec ?b 1))
[ruler_75171_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?d)) => (VecMul (Vec ?c 1) (Vec ?b ?a))
[ruler_75172_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?d)) => (VecMul (Vec ?b ?a) (Vec ?c 1))
[ruler_75173_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?d)) => (VecMul (Vec ?b 1) (Vec ?c ?a))
[ruler_75174_lr] (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?d)) => (VecMul (Vec 1 ?c) (Vec ?a ?d))
[ruler_75175_lr] (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?d)) => (VecMul (Vec ?a ?c) (Vec 1 ?d))
[ruler_75176_lr] (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?d)) => (VecMul (Vec ?a ?d) (Vec 1 ?c))
[ruler_75177_lr] (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?d)) => (VecMul (Vec 1 ?d) (Vec ?a ?c))
[ruler_75178_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?d)) => (VecMul (Vec 1 ?b) (Vec ?a ?d))
[ruler_75179_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?d)) => (VecMul (Vec ?a ?b) (Vec 1 ?d))
[ruler_75180_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?d)) => (VecMul (Vec ?a ?d) (Vec 1 ?b))
[ruler_75181_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?d)) => (VecMul (Vec 1 ?d) (Vec ?a ?b))
[ruler_75182_lr] (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 0 ?d)) => (VecAdd (Vec ?a 0) (Vec 0 ?b))
[ruler_75183_lr] (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 0)) => (VecAdd (Vec ?a 0) (Vec 0 ?b))
[ruler_75184_lr-rev] (Vec (* ?d ?b) (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 1))
[ruler_75185_lr-rev] (Vec (* ?b ?c) (+ ?a ?d)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c ?d))
[ruler_75186_lr-rev] (Vec (* ?b ?d) (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 1))
[ruler_75187_lr-rev] (Vec (* ?c ?b) (+ ?a ?d)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c ?d))
[ruler_75188_lr-rev] (Vec (+ ?b ?a) (* ?c ?d)) => (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 1 ?d))
[ruler_75189_lr-rev] (Vec (+ ?c ?a) (* ?b ?d)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c ?d))
[ruler_75190_lr-rev] (Vec (+ ?b ?a) (* ?d ?c)) => (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 1 ?d))
[ruler_75191_lr-rev] (Vec (+ ?c ?a) (* ?d ?b)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c ?d))
[ruler_75192_lr-rev] (Vec (* ?c ?b) (+ ?d ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c ?d))
[ruler_75193_lr-rev] (Vec (* ?b ?c) (+ ?d ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c ?d))
[ruler_75194_lr-rev] (Vec (* ?d ?b) (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 1))
[ruler_75195_lr-rev] (Vec (* ?b ?d) (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 1))
[ruler_75718_lr] (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?d)) => (VecAdd (Vec ?c ?b) (Vec ?a 0))
[ruler_75719_lr] (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?d)) => (VecAdd (Vec ?a ?b) (Vec ?c 0))
[ruler_75720_lr] (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?d)) => (VecAdd (Vec ?a 0) (Vec ?c ?b))
[ruler_75721_lr] (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 0)) => (VecAdd (Vec ?d ?b) (Vec ?a 0))
[ruler_75722_lr] (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 0)) => (VecAdd (Vec ?a ?b) (Vec ?d 0))
[ruler_75723_lr] (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 0)) => (VecAdd (Vec ?a 0) (Vec ?d ?b))
[ruler_75724_lr] (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?d)) => (VecAdd (Vec ?c 0) (Vec ?a ?b))
[ruler_75725_lr] (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 0)) => (VecAdd (Vec ?d 0) (Vec ?a ?b))
[ruler_75726_lr] (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 1)) => (VecAdd (Vec 0 ?c) (Vec ?a ?b))
[ruler_75727_lr] (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 1)) => (VecAdd (Vec 0 ?b) (Vec ?a ?c))
[ruler_75728_lr] (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?d)) => (VecAdd (Vec 0 ?d) (Vec ?a ?b))
[ruler_75729_lr] (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?d)) => (VecAdd (Vec 0 ?b) (Vec ?a ?d))
[ruler_75730_lr] (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 1)) => (VecAdd (Vec ?a ?b) (Vec 0 ?c))
[ruler_75731_lr] (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?d)) => (VecAdd (Vec ?a ?b) (Vec 0 ?d))
[ruler_75732_lr] (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 1)) => (VecAdd (Vec ?a ?c) (Vec 0 ?b))
[ruler_75733_lr] (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?d)) => (VecAdd (Vec ?a ?d) (Vec 0 ?b))
[ruler_76358_lr-rev] (VecAdd ?a (VecMul ?b ?c)) => (VecMAC ?a ?b ?c)
[ruler_118802_lr-rev] (Vec ?b (* ?c ?a)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_118803_lr-rev] (Vec ?a (* ?c ?b)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_118804_lr-rev] (Vec ?a (* ?b ?c)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_118805_lr-rev] (Vec ?b (* ?a ?c)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_118806_lr-rev] (Vec (* ?a ?b) ?c) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_118807_lr-rev] (Vec (* ?c ?a) ?b) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_118808_lr-rev] (Vec (* ?a ?c) ?b) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_118809_lr-rev] (Vec (* ?b ?a) ?c) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_118810_lr-rev] (Vec (+ ?a ?c) ?b) => (VecAdd (Vec ?a ?b) (Vec ?c 0))
[ruler_118811_lr-rev] (Vec (+ ?a ?b) ?c) => (VecAdd (Vec ?a 0) (Vec ?b ?c))
[ruler_118812_lr-rev] (Vec (+ ?c ?a) ?b) => (VecAdd (Vec ?a ?b) (Vec ?c 0))
[ruler_118813_lr-rev] (Vec (+ ?b ?a) ?c) => (VecAdd (Vec ?a 0) (Vec ?b ?c))
[ruler_118814_lr-rev] (Vec ?a (+ ?c ?b)) => (VecAdd (Vec ?a ?b) (Vec 0 ?c))
[ruler_118815_lr-rev] (Vec ?b (+ ?c ?a)) => (VecAdd (Vec 0 ?a) (Vec ?b ?c))
[ruler_118816_lr-rev] (Vec ?a (+ ?b ?c)) => (VecAdd (Vec ?a ?b) (Vec 0 ?c))
[ruler_118817_lr-rev] (Vec ?b (+ ?a ?c)) => (VecAdd (Vec 0 ?a) (Vec ?b ?c))
[ruler_118846_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?c 0))
[ruler_118847_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c 0))
[ruler_118848_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?c))
[ruler_118849_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?b) (Vec ?c 0))
[ruler_118850_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?a) (Vec ?c 0))
[ruler_118851_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?a) (Vec ?c 0))
[ruler_118852_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c 0))
[ruler_118853_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?c 0))
[ruler_118854_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?c))
[ruler_118855_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?a))
[ruler_118856_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?b) (Vec ?c 0))
[ruler_118857_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?b))
[ruler_118858_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?b))
[ruler_118859_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?a))
[ruler_118860_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 0 ?c))
[ruler_118861_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?a ?c))
[ruler_118862_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?c))
[ruler_118863_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec ?a ?b) (Vec 0 ?c))
[ruler_118864_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec ?b ?b) (Vec 0 ?c))
[ruler_118865_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?b ?c))
[ruler_118866_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?b))
[ruler_118867_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 0 ?c))
[ruler_118868_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec ?b ?b) (Vec 0 ?c))
[ruler_118869_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?c))
[ruler_118870_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?b ?c))
[ruler_118871_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?a ?c))
[ruler_118872_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?b))
[ruler_118873_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec ?a ?b) (Vec 0 ?c))
[ruler_118952_lr] (* (* ?a ?b) (* ?c 0)) => (* ?a (* ?c 0))
[ruler_118953_lr] (Vec (* ?a 0) (Vec ?b ?c)) => (Vec 0 (Vec ?b ?c))
[ruler_118954_lr] (Vec (Vec ?a ?b) (* ?c 0)) => (Vec (Vec ?a ?b) 0)
[ruler_118955_lr] (Vec (* ?a 0) (* ?b ?c)) => (Vec 0 (* ?b ?c))
[ruler_118956_lr] (Vec (* ?a ?b) (* ?c 0)) => (Vec (* ?a ?b) 0)
[ruler_118957_lr] (* (+ ?a ?b) (* 0 ?c)) => (* (+ ?a ?c) 0)
[ruler_118958_lr] (* (* 0 ?a) (+ ?b ?c)) => (* ?a (* ?b 0))
[ruler_118959_lr] (* (+ ?a ?b) (* 0 ?c)) => (* 0 (* ?b ?a))
[ruler_118960_lr] (* (* ?a ?b) (* ?c 0)) => (* (+ ?a ?b) 0)
[ruler_118963_lr] (Vec (+ ?a ?b) (* ?c 0)) => (Vec (+ ?a ?b) 0)
[ruler_118964_lr] (Vec (* ?a 0) (+ ?b ?c)) => (Vec 0 (+ ?b ?c))
[ruler_119056_lr-rev] (Vec (+ ?a ?c) (+ 1 ?b)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119057_lr-rev] (Vec (+ ?b ?a) (+ 1 ?c)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119058_lr-rev] (Vec (+ ?c ?a) (+ 1 ?b)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119059_lr-rev] (Vec (+ ?a ?b) (+ 1 ?c)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119068_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?b ?c) (Vec 0 ?b))
[ruler_119069_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?b ?c) (Vec 0 ?b))
[ruler_119070_lr-rev] (Vec (* ?b 0) (* ?a ?c)) => (VecMul (Vec 0 ?a) (Vec ?b ?c))
[ruler_119072_lr-rev] (Vec (* 0 ?b) (* ?a ?c)) => (VecMul (Vec 0 ?a) (Vec ?b ?c))
[ruler_119074_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?c ?b) (Vec 0 ?c))
[ruler_119075_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec 0 ?b))
[ruler_119076_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec 0 ?c))
[ruler_119077_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec ?c ?b))
[ruler_119078_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec ?b ?b))
[ruler_119079_lr-rev] (Vec (* 0 ?a) (* ?c ?b)) => (VecMul (Vec ?a ?b) (Vec 0 ?c))
[ruler_119080_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?b ?b) (Vec 0 ?c))
[ruler_119082_lr-rev] (Vec (* 0 ?b) (* ?c ?a)) => (VecMul (Vec 0 ?a) (Vec ?b ?c))
[ruler_119086_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?c ?c) (Vec 0 ?b))
[ruler_119087_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?c ?b) (Vec 0 ?c))
[ruler_119088_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec 0 ?b))
[ruler_119089_lr-rev] (Vec (* ?b 0) (* ?c ?a)) => (VecMul (Vec 0 ?a) (Vec ?b ?c))
[ruler_119090_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec 0 ?c))
[ruler_119091_lr-rev] (Vec (* ?a 0) (* ?c ?b)) => (VecMul (Vec ?a ?b) (Vec 0 ?c))
[ruler_119092_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec ?c ?b))
[ruler_119093_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec ?b ?c))
[ruler_119094_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec ?b ?b))
[ruler_119095_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?b ?b) (Vec 0 ?c))
[ruler_119096_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec ?c ?c))
[ruler_119097_lr-rev] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?a ?b) (Vec 0 ?c))
[ruler_119098_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?c ?c) (Vec 0 ?b))
[ruler_119099_lr-rev] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?a ?b) (Vec 0 ?c))
[ruler_119102_lr-rev] (Vec (+ 1 ?a) (+ ?c ?b)) => (VecAdd (Vec ?a ?b) (Vec 1 ?c))
[ruler_119103_lr-rev] (Vec (+ 1 ?a) (+ ?b ?c)) => (VecAdd (Vec ?a ?b) (Vec 1 ?c))
[ruler_119104_lr-rev] (Vec (+ 1 ?b) (+ ?a ?c)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119105_lr-rev] (Vec (+ 1 ?b) (+ ?c ?a)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119107_lr-rev] (Vec (+ ?a 1) (+ ?b ?c)) => (VecAdd (Vec ?a ?b) (Vec 1 ?c))
[ruler_119108_lr-rev] (Vec (+ ?b 1) (+ ?a ?c)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119109_lr-rev] (Vec (+ ?b 1) (+ ?c ?a)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119110_lr-rev] (Vec (+ ?a 1) (+ ?c ?b)) => (VecAdd (Vec ?a ?b) (Vec 1 ?c))
[ruler_119118_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 0) (Vec ?a ?b))
[ruler_119119_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b ?b) (Vec ?a 0))
[ruler_119120_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b ?b))
[ruler_119121_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b ?a))
[ruler_119122_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 0) (Vec ?a 0))
[ruler_119123_lr-rev] (Vec (* ?a ?c) (* ?b 0)) => (VecMul (Vec ?a ?b) (Vec ?c 0))
[ruler_119124_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 0) (Vec ?a ?a))
[ruler_119125_lr-rev] (Vec (* ?c ?a) (* ?b 0)) => (VecMul (Vec ?a ?b) (Vec ?c 0))
[ruler_119126_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a ?b) (Vec ?b 0))
[ruler_119127_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a ?a) (Vec ?b 0))
[ruler_119128_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a ?b) (Vec ?b 0))
[ruler_119129_lr-rev] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b ?c))
[ruler_119133_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b 0))
[ruler_119134_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b ?a) (Vec ?a 0))
[ruler_119135_lr-rev] (Vec (* ?b ?a) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b ?c))
[ruler_119143_lr-rev] (Vec (* ?a ?c) (* 0 ?b)) => (VecMul (Vec ?a ?b) (Vec ?c 0))
[ruler_119144_lr-rev] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b ?c))
[ruler_119145_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 0) (Vec ?a 0))
[ruler_119146_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b ?a))
[ruler_119147_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 0) (Vec ?a ?a))
[ruler_119148_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b ?a) (Vec ?a 0))
[ruler_119149_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b ?b) (Vec ?a 0))
[ruler_119151_lr-rev] (Vec (* ?c ?a) (* 0 ?b)) => (VecMul (Vec ?a ?b) (Vec ?c 0))
[ruler_119156_lr-rev] (Vec (* ?b ?a) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b ?c))
[ruler_119158_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b 0))
[ruler_119159_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 0) (Vec ?a ?b))
[ruler_119160_lr-rev] (Vec (+ ?a ?b) (+ ?c 1)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119161_lr-rev] (Vec (+ ?a ?c) (+ ?b 1)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119162_lr-rev] (Vec (+ ?b ?a) (+ ?c 1)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119163_lr-rev] (Vec (+ ?c ?a) (+ ?b 1)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119166_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_119167_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecAdd (Vec ?b 0) (Vec ?a 0))
[ruler_119168_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecAdd (Vec 0 ?b) (Vec 0 ?c))
[ruler_119169_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecAdd (Vec 0 ?c) (Vec 0 ?b))
[ruler_119170_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecAdd (Vec 0 ?b) (Vec 0 ?c))
[ruler_119171_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecAdd (Vec 0 ?c) (Vec 0 ?b))
[ruler_119172_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecAdd (Vec ?b 0) (Vec ?a 0))
[ruler_119173_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_119178_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 0)) => (Vec ?c ?a)
[ruler_119179_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 1 ?c)) => (Vec ?b ?a)
[ruler_119180_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (Vec ?a 0)
[ruler_119181_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (Vec ?a 0)
[ruler_119182_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 0 ?c)) => (Vec ?a ?c)
[ruler_119183_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 1)) => (Vec ?a ?b)
[ruler_119184_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (Vec 0 ?a)
[ruler_119185_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (Vec 0 ?a)
[ruler_119186_lr-rev] (Vec ?b (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c))
[ruler_119187_lr-rev] (Vec ?c (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1))
[ruler_119194_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?c 1))
[ruler_119195_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec ?a 1) (Vec 0 ?c))
[ruler_119196_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?c))
[ruler_119197_lr-rev] (Vec ?c (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1))
[ruler_119198_lr-rev] (Vec ?b (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c))
[ruler_119199_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec ?b 1) (Vec 0 ?c))
[ruler_119200_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?b 1))
[ruler_119201_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?a 1))
[ruler_119204_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c 1))
[ruler_119205_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c 0))
[ruler_119206_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c 1))
[ruler_119207_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c 0))
[ruler_119208_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 0 ?c))
[ruler_119209_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 0 ?c))
[ruler_119210_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 1 ?c))
[ruler_119211_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 1 ?c))
[ruler_119212_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?b) (Vec ?c 0))
[ruler_119213_lr-rev] (Vec (+ ?b ?a) ?c) => (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c))
[ruler_119214_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?b))
[ruler_119215_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1))
[ruler_119216_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?c 0))
[ruler_119217_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?a) (Vec ?c 0))
[ruler_119218_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?a))
[ruler_119219_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?c))
[ruler_119224_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?a) (Vec ?c 0))
[ruler_119225_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?a))
[ruler_119226_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?b) (Vec ?c 0))
[ruler_119227_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?c))
[ruler_119228_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?c 0))
[ruler_119229_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?b))
[ruler_119230_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?c))
[ruler_119231_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec ?a 1) (Vec 0 ?c))
[ruler_119232_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?c 1))
[ruler_119233_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?b 1))
[ruler_119234_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec ?b 1) (Vec 0 ?c))
[ruler_119235_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?a 1))
[ruler_119260_lr-rev] (Vec (+ ?c ?a) (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1))
[ruler_119261_lr-rev] (Vec (+ ?b ?a) (+ ?c 1)) => (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c))
[ruler_119262_lr] (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec 1 ?a) (Vec ?c ?b))
[ruler_119263_lr] (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119264_lr-rev] (Vec (+ 1 ?c) (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1))
[ruler_119265_lr-rev] (Vec (+ 1 ?b) (+ ?a ?c)) => (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c))
[ruler_119266_lr] (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec 1 ?b) (Vec ?c ?a))
[ruler_119267_lr] (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec 1 ?c) (Vec ?b ?a))
[ruler_119268_lr-rev] (Vec (+ ?c 1) (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1))
[ruler_119269_lr-rev] (Vec (+ ?b 1) (+ ?a ?c)) => (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c))
[ruler_119270_lr] (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?b) (Vec 1 ?a))
[ruler_119271_lr] (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?c) (Vec 1 ?a))
[ruler_119272_lr] (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?a) (Vec 1 ?b))
[ruler_119273_lr] (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?a) (Vec 1 ?c))
[ruler_119305_lr-rev] (VecMAC (Vec 0 ?b) (Vec ?c 0) (Vec ?a 0)) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_119312_lr-rev] (VecMAC (Vec 0 ?c) (Vec ?b 0) (Vec ?a 0)) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_119313_lr-rev] (VecMAC (Vec 0 ?b) (Vec ?a 0) (Vec ?c 0)) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_119314_lr-rev] (VecMAC (Vec 0 ?c) (Vec ?a 0) (Vec ?b 0)) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_119332_lr-rev] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 0 ?c)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_119333_lr-rev] (VecMAC (Vec ?a 0) (Vec 0 ?c) (Vec 0 ?b)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_119336_lr-rev] (VecMAC (Vec ?b 0) (Vec 0 ?a) (Vec 0 ?c)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_119338_lr-rev] (VecMAC (Vec ?b 0) (Vec 0 ?c) (Vec 0 ?a)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_119386_lr-rev] (Vec (+ ?a ?c) (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1))
[ruler_119387_lr] (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a 1) (Vec ?c ?b))
[ruler_119388_lr] (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119389_lr] (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c 1) (Vec ?a ?b))
[ruler_119390_lr-rev] (Vec (+ ?a ?b) (+ ?c 1)) => (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c))
[ruler_119391_lr] (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119392_lr] (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?a ?c) (Vec ?b 1))
[ruler_119393_lr] (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b 1) (Vec ?a ?c))
[ruler_119394_lr] (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?b) (Vec ?a 1))
[ruler_119395_lr] (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?c) (Vec ?a 1))
[ruler_121429_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec 1 ?c))
[ruler_121430_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec 1 ?c))
[ruler_121431_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec 1 ?b))
[ruler_121432_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 1 ?c) (Vec 0 ?b))
[ruler_121433_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec 1 ?b))
[ruler_121434_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 1 ?c) (Vec 0 ?b))
[ruler_121435_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 1 ?b) (Vec 0 ?c))
[ruler_121436_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 1 ?b) (Vec 0 ?c))
[ruler_121437_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b 1))
[ruler_121438_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 0) (Vec ?a 1))
[ruler_121439_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 1) (Vec ?a 0))
[ruler_121440_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 1) (Vec ?b 0))
[ruler_121441_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 0) (Vec ?a 1))
[ruler_121442_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b 1))
[ruler_121443_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 1) (Vec ?a 0))
[ruler_121444_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 1) (Vec ?b 0))
[ruler_121445_lr] (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?c 0)) => (Vec ?a 1)
[ruler_121446_lr] (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 0 ?c)) => (Vec ?a 1)
[ruler_121447_lr] (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 0)) => (Vec 1 ?a)
[ruler_121448_lr] (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 0 ?c)) => (Vec 1 ?a)
[ruler_121467_lr] (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a 0) (Vec ?c ?b))
[ruler_121468_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?a 0) (Vec ?b ?c))
[ruler_121469_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?b) (Vec 0 ?a))
[ruler_121470_lr] (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?c) (Vec 0 ?a))
[ruler_121473_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?a) (Vec ?c ?b))
[ruler_121474_lr] (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec 0 ?a) (Vec ?b ?c))
[ruler_121487_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec ?c ?a))
[ruler_121488_lr] (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec 0 ?c) (Vec ?b ?a))
[ruler_121489_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?a) (Vec 0 ?b))
[ruler_121490_lr] (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?a) (Vec 0 ?c))
[ruler_121491_lr] (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?a) (Vec 0 ?c))
[ruler_121492_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?a) (Vec 0 ?b))
[ruler_121493_lr] (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?c) (Vec 0 ?a))
[ruler_121494_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec 0 ?a))
[ruler_121495_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec ?a 0))
[ruler_121496_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_121497_lr] (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 0) (Vec ?a 0))
[ruler_121498_lr] (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?a 0) (Vec ?c 0))
[ruler_121503_lr-rev] (VecMAC (Vec 0 ?b) (Vec ?c 0) (Vec ?a 1)) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_121504_lr-rev] (VecMAC (Vec 0 ?b) (Vec ?a 1) (Vec ?c 0)) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_121505_lr-rev] (VecMAC (Vec 0 ?c) (Vec ?b 0) (Vec ?a 1)) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_121506_lr-rev] (VecMAC (Vec 0 ?b) (Vec ?a 0) (Vec ?c 1)) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_121507_lr-rev] (VecMAC (Vec 0 ?c) (Vec ?a 0) (Vec ?b 1)) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_121508_lr-rev] (VecMAC (Vec 0 ?c) (Vec ?a 1) (Vec ?b 0)) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_121509_lr-rev] (VecMAC (Vec 0 ?b) (Vec ?c 1) (Vec ?a 0)) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_121510_lr-rev] (VecMAC (Vec 0 ?c) (Vec ?b 1) (Vec ?a 0)) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_121511_lr-rev] (VecMAC (Vec ?a 0) (Vec 1 ?c) (Vec 0 ?b)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_121512_lr-rev] (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 0 ?c)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_121513_lr-rev] (VecMAC (Vec ?b 0) (Vec 1 ?c) (Vec 0 ?a)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_121514_lr-rev] (VecMAC (Vec ?b 0) (Vec 1 ?a) (Vec 0 ?c)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_121515_lr-rev] (VecMAC (Vec ?b 0) (Vec 0 ?a) (Vec 1 ?c)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_121516_lr-rev] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 1 ?c)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_121517_lr-rev] (VecMAC (Vec ?a 0) (Vec 0 ?c) (Vec 1 ?b)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_121518_lr-rev] (VecMAC (Vec ?b 0) (Vec 0 ?c) (Vec 1 ?a)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_121519_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?c) (Vec ?a 0))
[ruler_121520_lr] (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?b) (Vec ?a 0))
[ruler_121521_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec ?a ?c))
[ruler_121522_lr] (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c 0) (Vec ?a ?b))
[ruler_121523_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?a ?c) (Vec ?b 0))
[ruler_121524_lr] (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a ?b) (Vec ?c 0))
[ruler_121525_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecMul (Vec 1 ?a) (Vec ?c 1))
[ruler_121526_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 0) (Vec 0 ?a))
[ruler_121527_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecMul (Vec ?c 1) (Vec 1 ?a))
[ruler_121528_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecMul (Vec 1 ?a) (Vec ?b 1))
[ruler_121529_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec 0 ?a))
[ruler_121530_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecMul (Vec ?b 1) (Vec 1 ?a))
[ruler_121597_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?a 0) (Vec 1 ?c))
[ruler_121598_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 1 ?a) (Vec ?a 0))
[ruler_121599_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?a 0) (Vec 1 ?a))
[ruler_121600_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?a 0) (Vec 1 ?b))
[ruler_121601_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?a 0) (Vec 1 ?c))
[ruler_121602_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 1 ?a) (Vec ?a 0))
[ruler_121603_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?a 0) (Vec 1 ?a))
[ruler_121604_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?a 0) (Vec 1 ?b))
[ruler_121605_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 1 ?c) (Vec ?a 0))
[ruler_121606_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 1 ?c) (Vec ?a 0))
[ruler_121607_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 1 ?b) (Vec ?a 0))
[ruler_121608_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 1 ?b) (Vec ?a 0))
[ruler_121609_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?c) (Vec ?a 0))
[ruler_121610_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 0 ?c)) => (VecMul (Vec 1 ?c) (Vec ?a 1))
[ruler_121611_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 0 ?c)) => (VecMul (Vec ?a 1) (Vec 1 ?c))
[ruler_121612_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec ?a 0))
[ruler_121613_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 1)) => (VecMul (Vec 1 ?b) (Vec ?a 1))
[ruler_121614_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 1)) => (VecMul (Vec ?a 1) (Vec 1 ?b))
[ruler_121615_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?c 1) (Vec 0 ?a))
[ruler_121616_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?b 1) (Vec 0 ?a))
[ruler_121617_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 0 ?a) (Vec ?c 1))
[ruler_121618_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 0 ?a) (Vec ?b 1))
[ruler_121619_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 0 ?a) (Vec ?a 1))
[ruler_121620_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?c 1) (Vec 0 ?a))
[ruler_121621_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?b 1) (Vec 0 ?a))
[ruler_121622_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 0 ?a) (Vec ?c 1))
[ruler_121623_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 0 ?a) (Vec ?b 1))
[ruler_121624_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 0 ?a) (Vec ?a 1))
[ruler_121629_lr-rev] (Vec (* ?b ?c) (+ 1 ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c 1))
[ruler_121630_lr-rev] (Vec (* ?c ?b) (+ 1 ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c 1))
[ruler_121631_lr-rev] (Vec (+ ?a 1) (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 1 ?c))
[ruler_121632_lr-rev] (Vec (+ ?a 1) (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 1 ?c))
[ruler_121635_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec 0 ?c) (Vec ?c 1))
[ruler_121636_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec ?c 1) (Vec 0 ?c))
[ruler_121637_lr-rev] (Vec (* 0 ?c) (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1))
[ruler_121640_lr-rev] (Vec (* 0 ?b) (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c))
[ruler_121643_lr-rev] (Vec (* ?b 0) (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c))
[ruler_121644_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec 0 ?c) (Vec ?c 1))
[ruler_121645_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec ?c 1) (Vec 0 ?c))
[ruler_121646_lr-rev] (Vec (* ?c 0) (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1))
[ruler_121647_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec ?b 1) (Vec 0 ?c))
[ruler_121648_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec ?b 1) (Vec 0 ?c))
[ruler_121649_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec 0 ?c) (Vec ?b 1))
[ruler_121650_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec 0 ?c) (Vec ?b 1))
[ruler_121653_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec ?b 1) (Vec 0 ?b))
[ruler_121654_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec ?c 1) (Vec 0 ?b))
[ruler_121655_lr-rev] (Vec (* ?c 0) (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1))
[ruler_121656_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec 0 ?b) (Vec ?b 1))
[ruler_121657_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec 0 ?b) (Vec ?c 1))
[ruler_121658_lr-rev] (Vec (* ?b 0) (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c))
[ruler_121663_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec ?b 1) (Vec 0 ?b))
[ruler_121664_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec ?c 1) (Vec 0 ?b))
[ruler_121665_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec 0 ?b) (Vec ?b 1))
[ruler_121666_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec 0 ?b) (Vec ?c 1))
[ruler_121667_lr-rev] (Vec (* 0 ?b) (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c))
[ruler_121668_lr-rev] (Vec (* 0 ?c) (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1))
[ruler_121670_lr-rev] (Vec (+ ?b ?a) (* 0 ?c)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?c))
[ruler_121671_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecMAC (Vec ?b 0) (Vec 1 ?a) (Vec ?a 0))
[ruler_121672_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecMAC (Vec ?b 0) (Vec ?a 0) (Vec 1 ?b))
[ruler_121673_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecMAC (Vec ?b 0) (Vec ?a 0) (Vec 1 ?a))
[ruler_121674_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecMAC (Vec ?b 0) (Vec 1 ?b) (Vec ?a 0))
[ruler_121675_lr-rev] (Vec (+ ?b ?a) (* ?c 0)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?c))
[ruler_121676_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecMAC (Vec ?b 0) (Vec 1 ?a) (Vec ?a 0))
[ruler_121677_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecMAC (Vec ?b 0) (Vec ?a 0) (Vec 1 ?b))
[ruler_121678_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecMAC (Vec ?b 0) (Vec ?a 0) (Vec 1 ?a))
[ruler_121679_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecMAC (Vec ?b 0) (Vec 1 ?b) (Vec ?a 0))
[ruler_121680_lr-rev] (Vec (+ ?c ?a) (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 0))
[ruler_121682_lr-rev] (Vec (+ ?c ?a) (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 0))
[ruler_122725_lr] (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec ?a 1) (Vec 0 ?c))
[ruler_122726_lr] (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a 1) (Vec 0 ?b))
[ruler_122727_lr] (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?c) (Vec ?a 1))
[ruler_122728_lr] (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec ?a 1))
[ruler_122729_lr] (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec 1 ?a) (Vec ?c 0))
[ruler_122730_lr] (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec 1 ?a) (Vec ?b 0))
[ruler_122731_lr] (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 1 ?a) (Vec 0 ?c))
[ruler_122732_lr] (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 1 ?a) (Vec 0 ?b))
[ruler_122733_lr] (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?a) (Vec 1 ?b))
[ruler_122734_lr] (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 1 ?b) (Vec 0 ?a))
[ruler_122735_lr] (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec 1 ?a))
[ruler_122736_lr] (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?a) (Vec 1 ?c))
[ruler_122737_lr] (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 1 ?c) (Vec 0 ?a))
[ruler_122738_lr] (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?c) (Vec 1 ?a))
[ruler_122739_lr] (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?a 0) (Vec ?c 1))
[ruler_122740_lr] (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 0) (Vec ?a 1))
[ruler_122741_lr] (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?a 0) (Vec ?b 1))
[ruler_122742_lr] (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec ?a 1))
[ruler_122743_lr] (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?a 1) (Vec ?c 0))
[ruler_122744_lr] (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?a 1) (Vec ?b 0))
[ruler_122745_lr] (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 1) (Vec ?a 0))
[ruler_122746_lr] (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 1) (Vec ?a 0))
[ruler_122747_lr] (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 0) (Vec 1 ?a))
[ruler_122748_lr] (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec 1 ?a))
[ruler_129349_lr] (VecAdd (Vec ?a 0) (Vec 0 ?b)) => (Vec ?a ?b)
[ruler_129350_lr] (VecAdd (Vec 0 ?a) (Vec ?b 0)) => (Vec ?b ?a)
[ruler_129351_lr] (VecMul (Vec 1 ?a) (Vec ?b 1)) => (Vec ?b ?a)
[ruler_129352_lr] (VecMul (Vec ?a 1) (Vec 1 ?b)) => (Vec ?a ?b)
[ruler_129516_lr] (* ?a (* ?b 0)) => 0
[ruler_129517_lr] (* ?a (* ?b 0)) => (* 0 ?a)
[ruler_129518_lr] (* ?a (* ?b 0)) => (* ?b 0)
[ruler_129519_lr] (Vec ?a (* ?b 0)) => (Vec ?a 0)
[ruler_129520_lr] (Vec (* ?a 0) ?b) => (Vec 0 ?b)
[ruler_129526_lr] (Vec (Vec ?a 0) (* ?b 0)) => (Vec (Vec ?a 0) 0)
[ruler_129527_lr] (Vec (* ?a 0) (Vec 0 ?b)) => (Vec 0 (Vec 0 ?b))
[ruler_129533_lr] (Vec (* ?a 0) (Vec ?b 0)) => (Vec 0 (Vec ?b 0))
[ruler_129535_lr] (Vec (Vec 0 ?a) (* ?b 0)) => (Vec (Vec 0 ?a) 0)
[ruler_129539_lr] (Vec (* 0 ?a) (* ?b 0)) => (Vec 0 (* ?b 0))
[ruler_129540_lr] (Vec (* 0 ?a) (* ?b 0)) => (Vec (* 0 ?a) 0)
[ruler_129541_lr] (Vec (* 0 ?a) (* ?b 0)) => (Vec 0 (* 0 ?a))
[ruler_129542_lr] (Vec (* 0 ?a) (* 0 ?b)) => (Vec 0 (* 0 ?b))
[ruler_129543_lr] (Vec (* 0 ?a) (* 0 ?b)) => (Vec (* 0 ?a) 0)
[ruler_129544_lr] (Vec (* 0 ?a) (* 0 ?b)) => (Vec (* 0 ?b) 0)
[ruler_129545_lr] (Vec (* 0 ?a) (* 0 ?b)) => (Vec 0 (* 0 ?a))
[ruler_129546_lr] (Vec (* 0 ?a) (* ?b 0)) => (Vec (* ?b 0) 0)
[ruler_129547_lr] (Vec (* ?a 0) (* 0 ?b)) => (Vec (* 0 ?b) 0)
[ruler_129548_lr] (Vec (* ?a 0) (* 0 ?b)) => (Vec 0 (* ?a 0))
[ruler_129549_lr] (Vec (* ?a 0) (* 0 ?b)) => (Vec 0 (* 0 ?b))
[ruler_129550_lr] (Vec (* ?a 0) (* 0 ?b)) => (Vec (* ?a 0) 0)
[ruler_129561_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec ?a ?b) (Vec 0 ?a))
[ruler_129562_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec ?a ?b) (Vec 0 ?a))
[ruler_129563_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 0 ?a) (Vec 0 ?b))
[ruler_129564_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 0 ?a) (Vec 0 ?b))
[ruler_129565_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 0 ?a) (Vec ?a ?b))
[ruler_129566_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 0 ?a) (Vec ?a ?b))
[ruler_129567_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 0 ?a) (Vec ?b ?b))
[ruler_129568_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 0 ?a) (Vec ?b ?b))
[ruler_129569_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec ?a ?a) (Vec 0 ?b))
[ruler_129570_lr-rev] (Vec 1 (* ?b ?a)) => (VecMul (Vec 1 ?a) (Vec 1 ?b))
[ruler_129571_lr-rev] (Vec 1 (* ?a ?b)) => (VecMul (Vec 1 ?a) (Vec 1 ?b))
[ruler_129573_lr-rev] (Vec (* ?b ?a) 1) => (VecMul (Vec ?a 1) (Vec ?b 1))
[ruler_129574_lr-rev] (Vec (* ?a ?b) 1) => (VecMul (Vec ?a 1) (Vec ?b 1))
[ruler_129595_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a ?b) (Vec ?b 0))
[ruler_129596_lr-rev] (Vec 0 (+ ?a ?b)) => (VecAdd (Vec 0 ?a) (Vec 0 ?b))
[ruler_129599_lr-rev] (Vec 0 (+ ?b ?a)) => (VecAdd (Vec 0 ?a) (Vec 0 ?b))
[ruler_129600_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 0) (Vec ?b ?b))
[ruler_129601_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 0) (Vec ?b 0))
[ruler_129602_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 0) (Vec ?b ?a))
[ruler_129603_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 0) (Vec ?b ?b))
[ruler_129604_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a ?a) (Vec ?b 0))
[ruler_129605_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a ?b) (Vec ?b 0))
[ruler_129606_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a ?a) (Vec ?b 0))
[ruler_129607_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 0) (Vec ?b 0))
[ruler_129608_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 0) (Vec ?b ?a))
[ruler_129609_lr-rev] (Vec (+ ?b ?a) 0) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_129611_lr-rev] (Vec (+ ?a ?b) 0) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_129613_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec ?a ?a) (Vec 0 ?b))
[ruler_129784_lr-rev] (Vec (+ 1 ?a) (+ ?b 1)) => (VecAdd (Vec ?a 1) (Vec 1 ?b))
[ruler_129785_lr-rev] (Vec (+ 1 ?b) (+ ?a 1)) => (VecAdd (Vec 1 ?a) (Vec ?b 1))
[ruler_129799_lr-rev] (Vec (+ ?b 1) (+ 1 ?a)) => (VecAdd (Vec 1 ?a) (Vec ?b 1))
[ruler_129800_lr-rev] (Vec (+ ?a 1) (+ 1 ?b)) => (VecAdd (Vec ?a 1) (Vec 1 ?b))
[ruler_129896_lr] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec ?b 0) (Vec 0 ?b))
[ruler_129897_lr] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec 0 ?b) (Vec ?b 0))
[ruler_129898_lr-rev] (Vec (* 0 ?b) (* ?a 0)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129899_lr-rev] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129900_lr-rev] (Vec (* 0 ?b) (* ?a 0)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129901_lr-rev] (Vec (* 0 ?b) (* 0 ?a)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129902_lr] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_129903_lr] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_129904_lr] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec 0 ?b) (Vec ?b 0))
[ruler_129907_lr-rev] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129909_lr-rev] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129910_lr-rev] (Vec (* 0 ?b) (* 0 ?a)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129911_lr] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec ?b 0) (Vec 0 ?b))
[ruler_129912_lr] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_129913_lr] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_129914_lr-rev] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129920_lr-rev] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129921_lr-rev] (Vec (* ?b 0) (* 0 ?a)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129922_lr] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_129923_lr] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_129924_lr] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec 0 ?b) (Vec ?b 0))
[ruler_129925_lr] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec ?b 0) (Vec 0 ?b))
[ruler_129926_lr-rev] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129927_lr-rev] (Vec (* ?b 0) (* 0 ?a)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129979_lr-rev] (Vec (+ ?a 1) (+ ?b 1)) => (VecAdd (Vec ?a 1) (Vec 1 ?b))
[ruler_129980_lr-rev] (Vec (+ ?b 1) (+ ?a 1)) => (VecAdd (Vec 1 ?a) (Vec ?b 1))
[ruler_130089_lr] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?a) (Vec ?a 0))
[ruler_130090_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?b))
[ruler_130091_lr] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec ?a 0) (Vec 0 ?a))
[ruler_130092_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?a))
[ruler_130093_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?b 0))
[ruler_130094_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec ?a 0) (Vec 0 ?b))
[ruler_130095_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?b))
[ruler_130096_lr] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 0 ?a) (Vec ?a 0))
[ruler_130097_lr] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec ?a 0) (Vec 0 ?a))
[ruler_130098_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 0 ?a) (Vec ?b 0))
[ruler_130099_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?a))
[ruler_130100_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec ?a 0) (Vec 0 ?b))
[ruler_130104_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?a 0))
[ruler_130105_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?b 0))
[ruler_130107_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?a 0))
[ruler_130109_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?a) (Vec ?b 0))
[ruler_130111_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?a) (Vec ?b 0))
[ruler_130113_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?a))
[ruler_130114_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?b 0))
[ruler_130116_lr] (Vec (* 0 ?a) ?b) => (VecMAC (Vec 0 ?b) (Vec ?b 0) (Vec 0 ?b))
[ruler_130117_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?b))
[ruler_130119_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?b 0))
[ruler_130120_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?a) (Vec ?b 0))
[ruler_130121_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec ?a 0) (Vec 0 ?b))
[ruler_130122_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?b))
[ruler_130123_lr] (Vec (* ?a 0) ?b) => (VecMAC (Vec 0 ?b) (Vec ?b 0) (Vec 0 ?b))
[ruler_130125_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?a))
[ruler_130126_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?a 0))
[ruler_130128_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?a 0))
[ruler_130129_lr] (Vec (* 0 ?a) ?b) => (VecMAC (Vec 0 ?b) (Vec 0 ?b) (Vec ?b 0))
[ruler_130130_lr] (Vec (* ?a 0) ?b) => (VecMAC (Vec 0 ?b) (Vec 0 ?b) (Vec ?b 0))
[ruler_130131_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?a 0) (Vec 0 ?b))
[ruler_131295_lr] (VecMul (Vec 1 ?a) (Vec ?b 0)) => (Vec ?b 0)
[ruler_131296_lr] (VecMul (Vec ?a 0) (Vec 1 ?b)) => (Vec ?a 0)
[ruler_131297_lr] (VecMul (Vec ?a 1) (Vec 0 ?b)) => (Vec 0 ?b)
[ruler_131298_lr] (VecMul (Vec 0 ?a) (Vec ?b 1)) => (Vec 0 ?a)
[ruler_131299_lr-rev] (Vec ?a (+ 1 ?b)) => (VecAdd (Vec ?a 1) (Vec 0 ?b))
[ruler_131300_lr-rev] (Vec ?b (+ 1 ?a)) => (VecAdd (Vec 0 ?a) (Vec ?b 1))
[ruler_131303_lr-rev] (Vec (+ 1 ?b) ?a) => (VecAdd (Vec 1 ?a) (Vec ?b 0))
[ruler_131304_lr-rev] (Vec (+ 1 ?a) ?b) => (VecAdd (Vec ?a 0) (Vec 1 ?b))
[ruler_131305_lr-rev] (Vec ?b (+ ?a 1)) => (VecAdd (Vec 0 ?a) (Vec ?b 1))
[ruler_131306_lr-rev] (Vec ?a (+ ?b 1)) => (VecAdd (Vec ?a 1) (Vec 0 ?b))
[ruler_131307_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 0 ?a) (Vec 1 ?b))
[ruler_131308_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 0 ?a) (Vec 1 ?b))
[ruler_131309_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 1 ?a) (Vec 0 ?b))
[ruler_131310_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 1 ?a) (Vec 0 ?b))
[ruler_131311_lr-rev] (Vec (+ ?b 1) ?a) => (VecAdd (Vec 1 ?a) (Vec ?b 0))
[ruler_131312_lr] (Vec (* ?a 0) ?b) => (VecMul (Vec ?b 1) (Vec 0 ?b))
[ruler_131313_lr] (Vec (* 0 ?a) ?b) => (VecMul (Vec ?b 1) (Vec 0 ?b))
[ruler_131314_lr-rev] (Vec 1 (+ ?a ?b)) => (VecAdd (Vec 1 ?a) (Vec 0 ?b))
[ruler_131315_lr-rev] (Vec 1 (+ ?a ?b)) => (VecAdd (Vec 0 ?a) (Vec 1 ?b))
[ruler_131316_lr-rev] (Vec 1 (+ ?b ?a)) => (VecAdd (Vec 1 ?a) (Vec 0 ?b))
[ruler_131317_lr-rev] (Vec 1 (+ ?b ?a)) => (VecAdd (Vec 0 ?a) (Vec 1 ?b))
[ruler_131318_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 0) (Vec ?b 1))
[ruler_131319_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 0) (Vec ?b 1))
[ruler_131320_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 1) (Vec ?b 0))
[ruler_131321_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 1) (Vec ?b 0))
[ruler_131322_lr-rev] (Vec ?a (* ?b 0)) => (VecMul (Vec ?a 0) (Vec 1 ?b))
[ruler_131323_lr-rev] (Vec (+ ?b ?a) 1) => (VecAdd (Vec ?a 0) (Vec ?b 1))
[ruler_131324_lr-rev] (Vec (+ ?a ?b) 1) => (VecAdd (Vec ?a 0) (Vec ?b 1))
[ruler_131325_lr-rev] (Vec (+ ?b ?a) 1) => (VecAdd (Vec ?a 1) (Vec ?b 0))
[ruler_131326_lr-rev] (Vec (+ ?a ?b) 1) => (VecAdd (Vec ?a 1) (Vec ?b 0))
[ruler_131327_lr] (Vec ?a (* ?b 0)) => (VecMul (Vec 1 ?a) (Vec ?a 0))
[ruler_131328_lr] (Vec ?a (* ?b 0)) => (VecMul (Vec ?a 0) (Vec 1 ?a))
[ruler_131329_lr-rev] (Vec ?b (* ?a 0)) => (VecMul (Vec 1 ?a) (Vec ?b 0))
[ruler_131333_lr] (Vec ?a (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 1 ?a))
[ruler_131334_lr-rev] (Vec ?b (* 0 ?a)) => (VecMul (Vec 1 ?a) (Vec ?b 0))
[ruler_131335_lr] (Vec ?a (* 0 ?b)) => (VecMul (Vec 1 ?a) (Vec ?a 0))
[ruler_131337_lr-rev] (Vec ?a (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 1 ?b))
[ruler_131338_lr-rev] (Vec (+ ?a 1) ?b) => (VecAdd (Vec ?a 0) (Vec 1 ?b))
[ruler_131339_lr-rev] (Vec (* 0 ?a) ?b) => (VecMul (Vec ?a 1) (Vec 0 ?b))
[ruler_131341_lr-rev] (Vec (* ?a 0) ?b) => (VecMul (Vec ?a 1) (Vec 0 ?b))
[ruler_131342_lr-rev] (Vec (* ?b 0) ?a) => (VecMul (Vec 0 ?a) (Vec ?b 1))
[ruler_131343_lr-rev] (Vec (* 0 ?b) ?a) => (VecMul (Vec 0 ?a) (Vec ?b 1))
[ruler_131345_lr] (Vec (* 0 ?a) ?b) => (VecMul (Vec 0 ?b) (Vec ?b 1))
[ruler_131346_lr] (Vec (* ?a 0) ?b) => (VecMul (Vec 0 ?b) (Vec ?b 1))
[ruler_131446_lr-rev] (Vec (+ 1 ?b) ?a) => (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?a))
[ruler_131447_lr-rev] (Vec (+ 1 ?b) ?a) => (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?b 0))
[ruler_131448_lr-rev] (Vec (+ 1 ?b) ?a) => (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?b))
[ruler_131449_lr-rev] (Vec (+ 1 ?b) ?a) => (VecMAC (Vec 1 ?a) (Vec 1 ?a) (Vec ?b 0))
[ruler_131450_lr-rev] (Vec (+ ?a ?b) 1) => (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?b 0))
[ruler_131451_lr-rev] (Vec (+ ?a ?b) 1) => (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?b))
[ruler_131452_lr-rev] (Vec (+ ?a ?b) 1) => (VecMAC (Vec ?a 1) (Vec 1 ?a) (Vec ?b 0))
[ruler_131453_lr-rev] (Vec (+ ?a ?b) 1) => (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?a))
[ruler_131454_lr-rev] (Vec 0 (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?b 1))
[ruler_131455_lr-rev] (Vec 0 (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?b))
[ruler_131456_lr-rev] (Vec 0 (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec ?a 1) (Vec 0 ?b))
[ruler_131457_lr-rev] (Vec 0 (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?a 1))
[ruler_131464_lr-rev] (Vec ?a (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?b 1))
[ruler_131465_lr-rev] (Vec ?a (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?a 1))
[ruler_131466_lr-rev] (Vec ?a (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 0 ?b))
[ruler_131467_lr-rev] (Vec ?a (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec ?a 1) (Vec 0 ?b))
[ruler_131472_lr-rev] (Vec 0 (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?b))
[ruler_131473_lr-rev] (Vec 0 (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec ?a 1) (Vec 0 ?b))
[ruler_131474_lr-rev] (Vec 0 (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?b 1))
[ruler_131475_lr-rev] (Vec 0 (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?a 1))
[ruler_131476_lr-rev] (Vec (+ ?b ?a) 0) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?b 0))
[ruler_131477_lr-rev] (Vec (+ ?b ?a) 0) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?a))
[ruler_131478_lr-rev] (Vec (+ ?b ?a) 0) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?b))
[ruler_131479_lr-rev] (Vec (+ ?b ?a) 0) => (VecMAC (Vec ?a 0) (Vec 1 ?a) (Vec ?b 0))
[ruler_131480_lr-rev] (Vec 1 (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?a 1))
[ruler_131481_lr-rev] (Vec 1 (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?b 1))
[ruler_131482_lr-rev] (Vec 1 (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?b))
[ruler_131483_lr-rev] (Vec 1 (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec ?a 1) (Vec 0 ?b))
[ruler_131486_lr-rev] (Vec (+ ?b ?a) 1) => (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?b))
[ruler_131487_lr-rev] (Vec (+ ?b ?a) 1) => (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?b 0))
[ruler_131488_lr-rev] (Vec (+ ?b ?a) 1) => (VecMAC (Vec ?a 1) (Vec 1 ?a) (Vec ?b 0))
[ruler_131489_lr-rev] (Vec (+ ?b ?a) 1) => (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?a))
[ruler_131490_lr-rev] (Vec (+ ?b 1) ?a) => (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?a))
[ruler_131491_lr-rev] (Vec (+ ?b 1) ?a) => (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?b))
[ruler_131492_lr-rev] (Vec (+ ?b 1) ?a) => (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?b 0))
[ruler_131493_lr-rev] (Vec (+ ?b 1) ?a) => (VecMAC (Vec 1 ?a) (Vec 1 ?a) (Vec ?b 0))
[ruler_132456_lr] (Vec (* ?a 0) (Vec ?b 1)) => (Vec 0 (Vec ?b 1))
[ruler_132457_lr] (Vec (Vec ?a 1) (* ?b 0)) => (Vec (Vec ?a 1) 0)
[ruler_132458_lr] (Vec (* ?a 0) (Vec 1 ?b)) => (Vec 0 (Vec 1 ?b))
[ruler_132459_lr] (Vec (Vec 1 ?a) (* ?b 0)) => (Vec (Vec 1 ?a) 0)
[ruler_132460_lr] (Vec (* ?a 0) (+ 1 ?b)) => (Vec 0 (+ 1 ?b))
[ruler_132461_lr] (Vec (+ 1 ?a) (* ?b 0)) => (Vec (+ 1 ?a) 0)
[ruler_132462_lr] (Vec (+ ?a 1) (* ?b 0)) => (Vec (+ ?a 1) 0)
[ruler_132463_lr] (Vec (+ ?a 1) (* 0 ?b)) => (Vec (+ ?a 1) 0)
[ruler_132464_lr] (Vec (* ?a 0) (+ ?b 1)) => (Vec 0 (+ ?b 1))
[ruler_132465_lr] (Vec (* 0 ?a) (+ ?b 1)) => (Vec 0 (+ ?b 1))
[ruler_133594_lr-rev] (* ?a 1) => ?a
[ruler_133595_lr-rev] (+ ?a 0) => ?a
[ruler_133657_lr-rev] (Vec 0 (* ?a 0)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_133658_lr-rev] (Vec 0 (* ?a 0)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_133659_lr-rev] (Vec (* ?a 0) 0) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_133660_lr-rev] (Vec (* ?a 0) 0) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_133661_lr-rev] (Vec 0 (* 0 ?a)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_133662_lr-rev] (Vec (* 0 ?a) 0) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_133663_lr-rev] (Vec 0 (* 0 ?a)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_133664_lr-rev] (Vec (* 0 ?a) 0) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[vec-neg] (Vec (neg ?a) (neg ?b)) => (VecNeg (Vec ?a ?b))
[vec-neg0-l] (Vec 0 (neg ?b)) => (VecNeg (Vec 0 ?b))
[vec-neg0-r] (Vec (neg ?a) 0) => (VecNeg (Vec ?a 0))
[litvec] <opaque>
#+end_example

#+begin_src shell :results output text
cargo run --release --manifest-path src/dios-egraphs/Cargo.toml \
       q-prod-out/spec.rkt \
	  --rules t2.json \
	  --cost-filter 1 \
	  --no-dup-vars \
	  --dump-rules \
	  --dry-run 2>&1
#+end_src

#+NAME: r1
#+RESULTS:
#+begin_example
Retained 484 rules
[ruler_13_lr-rev] (Vec (* ?a ?c) (* ?b ?d)) => (VecMul (Vec ?a ?b) (Vec ?c ?d))
[ruler_14_lr-rev] (Vec (+ ?a ?c) (+ ?b ?d)) => (VecAdd (Vec ?a ?b) (Vec ?c ?d))
[ruler_75157_lr-rev] (Vec (+ ?a ?d) (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 1))
[ruler_75158_lr-rev] (Vec (+ ?a ?c) (+ ?b ?d)) => (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 1 ?d))
[ruler_75159_lr-rev] (Vec (+ ?a ?d) (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 1))
[ruler_75160_lr-rev] (Vec (+ ?a ?c) (+ ?d ?b)) => (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 1 ?d))
[ruler_75162_lr-rev] (Vec ?a (+ ?b (* ?c ?d))) => (VecMAC (Vec ?a ?b) (Vec ?b ?c) (Vec 0 ?d))
[ruler_75163_lr-rev] (Vec (+ ?a (* ?c ?d)) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c ?a) (Vec ?d 0))
[ruler_75184_lr-rev] (Vec (* ?d ?b) (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 1))
[ruler_75185_lr-rev] (Vec (* ?b ?c) (+ ?a ?d)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c ?d))
[ruler_75186_lr-rev] (Vec (* ?b ?d) (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 1))
[ruler_75187_lr-rev] (Vec (* ?c ?b) (+ ?a ?d)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c ?d))
[ruler_75188_lr-rev] (Vec (+ ?b ?a) (* ?c ?d)) => (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 1 ?d))
[ruler_75189_lr-rev] (Vec (+ ?c ?a) (* ?b ?d)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c ?d))
[ruler_75190_lr-rev] (Vec (+ ?b ?a) (* ?d ?c)) => (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 1 ?d))
[ruler_75191_lr-rev] (Vec (+ ?c ?a) (* ?d ?b)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c ?d))
[ruler_75192_lr-rev] (Vec (* ?c ?b) (+ ?d ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c ?d))
[ruler_75193_lr-rev] (Vec (* ?b ?c) (+ ?d ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c ?d))
[ruler_75194_lr-rev] (Vec (* ?d ?b) (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 1))
[ruler_75195_lr-rev] (Vec (* ?b ?d) (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 1))
[ruler_118802_lr-rev] (Vec ?b (* ?c ?a)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_118803_lr-rev] (Vec ?a (* ?c ?b)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_118804_lr-rev] (Vec ?a (* ?b ?c)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))
[ruler_118805_lr-rev] (Vec ?b (* ?a ?c)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))
[ruler_118806_lr-rev] (Vec (* ?a ?b) ?c) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_118807_lr-rev] (Vec (* ?c ?a) ?b) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_118808_lr-rev] (Vec (* ?a ?c) ?b) => (VecMul (Vec ?a ?b) (Vec ?c 1))
[ruler_118809_lr-rev] (Vec (* ?b ?a) ?c) => (VecMul (Vec ?a 1) (Vec ?b ?c))
[ruler_118810_lr-rev] (Vec (+ ?a ?c) ?b) => (VecAdd (Vec ?a ?b) (Vec ?c 0))
[ruler_118811_lr-rev] (Vec (+ ?a ?b) ?c) => (VecAdd (Vec ?a 0) (Vec ?b ?c))
[ruler_118812_lr-rev] (Vec (+ ?c ?a) ?b) => (VecAdd (Vec ?a ?b) (Vec ?c 0))
[ruler_118813_lr-rev] (Vec (+ ?b ?a) ?c) => (VecAdd (Vec ?a 0) (Vec ?b ?c))
[ruler_118814_lr-rev] (Vec ?a (+ ?c ?b)) => (VecAdd (Vec ?a ?b) (Vec 0 ?c))
[ruler_118815_lr-rev] (Vec ?b (+ ?c ?a)) => (VecAdd (Vec 0 ?a) (Vec ?b ?c))
[ruler_118816_lr-rev] (Vec ?a (+ ?b ?c)) => (VecAdd (Vec ?a ?b) (Vec 0 ?c))
[ruler_118817_lr-rev] (Vec ?b (+ ?a ?c)) => (VecAdd (Vec 0 ?a) (Vec ?b ?c))
[ruler_118846_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?c 0))
[ruler_118847_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c 0))
[ruler_118848_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?c))
[ruler_118849_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?b) (Vec ?c 0))
[ruler_118850_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?a) (Vec ?c 0))
[ruler_118851_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?a) (Vec ?c 0))
[ruler_118852_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c 0))
[ruler_118853_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?c 0))
[ruler_118854_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?c))
[ruler_118855_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?a))
[ruler_118856_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b ?b) (Vec ?c 0))
[ruler_118857_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?b))
[ruler_118858_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?b))
[ruler_118859_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?a))
[ruler_118860_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 0 ?c))
[ruler_118861_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?a ?c))
[ruler_118862_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?c))
[ruler_118863_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec ?a ?b) (Vec 0 ?c))
[ruler_118864_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec ?b ?b) (Vec 0 ?c))
[ruler_118865_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?b ?c))
[ruler_118866_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?b))
[ruler_118867_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 0 ?c))
[ruler_118868_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec ?b ?b) (Vec 0 ?c))
[ruler_118869_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?c))
[ruler_118870_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?b ?c))
[ruler_118871_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?a ?c))
[ruler_118872_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?b))
[ruler_118873_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec ?a ?b) (Vec 0 ?c))
[ruler_118952_lr] (* (* ?a ?b) (* ?c 0)) => (* ?a (* ?c 0))
[ruler_118953_lr] (Vec (* ?a 0) (Vec ?b ?c)) => (Vec 0 (Vec ?b ?c))
[ruler_118954_lr] (Vec (Vec ?a ?b) (* ?c 0)) => (Vec (Vec ?a ?b) 0)
[ruler_118955_lr] (Vec (* ?a 0) (* ?b ?c)) => (Vec 0 (* ?b ?c))
[ruler_118956_lr] (Vec (* ?a ?b) (* ?c 0)) => (Vec (* ?a ?b) 0)
[ruler_118957_lr] (* (+ ?a ?b) (* 0 ?c)) => (* (+ ?a ?c) 0)
[ruler_118958_lr] (* (* 0 ?a) (+ ?b ?c)) => (* ?a (* ?b 0))
[ruler_118959_lr] (* (+ ?a ?b) (* 0 ?c)) => (* 0 (* ?b ?a))
[ruler_118960_lr] (* (* ?a ?b) (* ?c 0)) => (* (+ ?a ?b) 0)
[ruler_118963_lr] (Vec (+ ?a ?b) (* ?c 0)) => (Vec (+ ?a ?b) 0)
[ruler_118964_lr] (Vec (* ?a 0) (+ ?b ?c)) => (Vec 0 (+ ?b ?c))
[ruler_119056_lr-rev] (Vec (+ ?a ?c) (+ 1 ?b)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119057_lr-rev] (Vec (+ ?b ?a) (+ 1 ?c)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119058_lr-rev] (Vec (+ ?c ?a) (+ 1 ?b)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119059_lr-rev] (Vec (+ ?a ?b) (+ 1 ?c)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119068_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?b ?c) (Vec 0 ?b))
[ruler_119069_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?b ?c) (Vec 0 ?b))
[ruler_119070_lr-rev] (Vec (* ?b 0) (* ?a ?c)) => (VecMul (Vec 0 ?a) (Vec ?b ?c))
[ruler_119072_lr-rev] (Vec (* 0 ?b) (* ?a ?c)) => (VecMul (Vec 0 ?a) (Vec ?b ?c))
[ruler_119074_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?c ?b) (Vec 0 ?c))
[ruler_119075_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec 0 ?b))
[ruler_119076_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec 0 ?c))
[ruler_119077_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec ?c ?b))
[ruler_119078_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec ?b ?b))
[ruler_119079_lr-rev] (Vec (* 0 ?a) (* ?c ?b)) => (VecMul (Vec ?a ?b) (Vec 0 ?c))
[ruler_119080_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?b ?b) (Vec 0 ?c))
[ruler_119082_lr-rev] (Vec (* 0 ?b) (* ?c ?a)) => (VecMul (Vec 0 ?a) (Vec ?b ?c))
[ruler_119086_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?c ?c) (Vec 0 ?b))
[ruler_119087_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?c ?b) (Vec 0 ?c))
[ruler_119088_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec 0 ?b))
[ruler_119089_lr-rev] (Vec (* ?b 0) (* ?c ?a)) => (VecMul (Vec 0 ?a) (Vec ?b ?c))
[ruler_119090_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec 0 ?c))
[ruler_119091_lr-rev] (Vec (* ?a 0) (* ?c ?b)) => (VecMul (Vec ?a ?b) (Vec 0 ?c))
[ruler_119092_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec ?c ?b))
[ruler_119093_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec ?b ?c))
[ruler_119094_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec ?b ?b))
[ruler_119095_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?b ?b) (Vec 0 ?c))
[ruler_119096_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec ?c ?c))
[ruler_119097_lr-rev] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?a ?b) (Vec 0 ?c))
[ruler_119098_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec ?c ?c) (Vec 0 ?b))
[ruler_119099_lr-rev] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec ?a ?b) (Vec 0 ?c))
[ruler_119102_lr-rev] (Vec (+ 1 ?a) (+ ?c ?b)) => (VecAdd (Vec ?a ?b) (Vec 1 ?c))
[ruler_119103_lr-rev] (Vec (+ 1 ?a) (+ ?b ?c)) => (VecAdd (Vec ?a ?b) (Vec 1 ?c))
[ruler_119104_lr-rev] (Vec (+ 1 ?b) (+ ?a ?c)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119105_lr-rev] (Vec (+ 1 ?b) (+ ?c ?a)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119107_lr-rev] (Vec (+ ?a 1) (+ ?b ?c)) => (VecAdd (Vec ?a ?b) (Vec 1 ?c))
[ruler_119108_lr-rev] (Vec (+ ?b 1) (+ ?a ?c)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119109_lr-rev] (Vec (+ ?b 1) (+ ?c ?a)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))
[ruler_119110_lr-rev] (Vec (+ ?a 1) (+ ?c ?b)) => (VecAdd (Vec ?a ?b) (Vec 1 ?c))
[ruler_119118_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 0) (Vec ?a ?b))
[ruler_119119_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b ?b) (Vec ?a 0))
[ruler_119120_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b ?b))
[ruler_119121_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b ?a))
[ruler_119122_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 0) (Vec ?a 0))
[ruler_119123_lr-rev] (Vec (* ?a ?c) (* ?b 0)) => (VecMul (Vec ?a ?b) (Vec ?c 0))
[ruler_119124_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 0) (Vec ?a ?a))
[ruler_119125_lr-rev] (Vec (* ?c ?a) (* ?b 0)) => (VecMul (Vec ?a ?b) (Vec ?c 0))
[ruler_119126_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a ?b) (Vec ?b 0))
[ruler_119127_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a ?a) (Vec ?b 0))
[ruler_119128_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a ?b) (Vec ?b 0))
[ruler_119129_lr-rev] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b ?c))
[ruler_119133_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b 0))
[ruler_119134_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b ?a) (Vec ?a 0))
[ruler_119135_lr-rev] (Vec (* ?b ?a) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b ?c))
[ruler_119143_lr-rev] (Vec (* ?a ?c) (* 0 ?b)) => (VecMul (Vec ?a ?b) (Vec ?c 0))
[ruler_119144_lr-rev] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b ?c))
[ruler_119145_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 0) (Vec ?a 0))
[ruler_119146_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b ?a))
[ruler_119147_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 0) (Vec ?a ?a))
[ruler_119148_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b ?a) (Vec ?a 0))
[ruler_119149_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b ?b) (Vec ?a 0))
[ruler_119151_lr-rev] (Vec (* ?c ?a) (* 0 ?b)) => (VecMul (Vec ?a ?b) (Vec ?c 0))
[ruler_119156_lr-rev] (Vec (* ?b ?a) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b ?c))
[ruler_119158_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b 0))
[ruler_119159_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 0) (Vec ?a ?b))
[ruler_119160_lr-rev] (Vec (+ ?a ?b) (+ ?c 1)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119161_lr-rev] (Vec (+ ?a ?c) (+ ?b 1)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119162_lr-rev] (Vec (+ ?b ?a) (+ ?c 1)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))
[ruler_119163_lr-rev] (Vec (+ ?c ?a) (+ ?b 1)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))
[ruler_119166_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_119167_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecAdd (Vec ?b 0) (Vec ?a 0))
[ruler_119168_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecAdd (Vec 0 ?b) (Vec 0 ?c))
[ruler_119169_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecAdd (Vec 0 ?c) (Vec 0 ?b))
[ruler_119170_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecAdd (Vec 0 ?b) (Vec 0 ?c))
[ruler_119171_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecAdd (Vec 0 ?c) (Vec 0 ?b))
[ruler_119172_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecAdd (Vec ?b 0) (Vec ?a 0))
[ruler_119173_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_119178_lr] (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 0)) => (Vec ?c ?a)
[ruler_119179_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 1 ?c)) => (Vec ?b ?a)
[ruler_119180_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (Vec ?a 0)
[ruler_119181_lr] (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (Vec ?a 0)
[ruler_119182_lr] (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 0 ?c)) => (Vec ?a ?c)
[ruler_119183_lr] (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 1)) => (Vec ?a ?b)
[ruler_119184_lr] (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (Vec 0 ?a)
[ruler_119185_lr] (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (Vec 0 ?a)
[ruler_119186_lr-rev] (Vec ?b (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c))
[ruler_119187_lr-rev] (Vec ?c (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1))
[ruler_119194_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?c 1))
[ruler_119195_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec ?a 1) (Vec 0 ?c))
[ruler_119196_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?c))
[ruler_119197_lr-rev] (Vec ?c (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1))
[ruler_119198_lr-rev] (Vec ?b (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c))
[ruler_119199_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec ?b 1) (Vec 0 ?c))
[ruler_119200_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?b 1))
[ruler_119201_lr-rev] (Vec ?a (+ ?b ?c)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?a 1))
[ruler_119204_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c 1))
[ruler_119205_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c 0))
[ruler_119206_lr-rev] (Vec (* ?c ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c 1))
[ruler_119207_lr-rev] (Vec (* ?b ?c) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c 0))
[ruler_119208_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 0 ?c))
[ruler_119209_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 0 ?c))
[ruler_119210_lr-rev] (Vec ?a (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 1 ?c))
[ruler_119211_lr-rev] (Vec ?a (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 1 ?c))
[ruler_119212_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?b) (Vec ?c 0))
[ruler_119213_lr-rev] (Vec (+ ?b ?a) ?c) => (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c))
[ruler_119214_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?b))
[ruler_119215_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1))
[ruler_119216_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?c 0))
[ruler_119217_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?a) (Vec ?c 0))
[ruler_119218_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?a))
[ruler_119219_lr-rev] (Vec (+ ?a ?c) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?c))
[ruler_119224_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?a) (Vec ?c 0))
[ruler_119225_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?a))
[ruler_119226_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?b) (Vec ?c 0))
[ruler_119227_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?c))
[ruler_119228_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?c 0))
[ruler_119229_lr-rev] (Vec (+ ?c ?a) ?b) => (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?b))
[ruler_119230_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?c))
[ruler_119231_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec ?a 1) (Vec 0 ?c))
[ruler_119232_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?c 1))
[ruler_119233_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?b 1))
[ruler_119234_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec ?b 1) (Vec 0 ?c))
[ruler_119235_lr-rev] (Vec ?a (+ ?c ?b)) => (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?a 1))
[ruler_119260_lr-rev] (Vec (+ ?c ?a) (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1))
[ruler_119261_lr-rev] (Vec (+ ?b ?a) (+ ?c 1)) => (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c))
[ruler_119264_lr-rev] (Vec (+ 1 ?c) (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1))
[ruler_119265_lr-rev] (Vec (+ 1 ?b) (+ ?a ?c)) => (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c))
[ruler_119268_lr-rev] (Vec (+ ?c 1) (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1))
[ruler_119269_lr-rev] (Vec (+ ?b 1) (+ ?a ?c)) => (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c))
[ruler_119386_lr-rev] (Vec (+ ?a ?c) (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1))
[ruler_119390_lr-rev] (Vec (+ ?a ?b) (+ ?c 1)) => (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c))
[ruler_121429_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec 1 ?c))
[ruler_121430_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?b) (Vec 1 ?c))
[ruler_121431_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec 1 ?b))
[ruler_121432_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 1 ?c) (Vec 0 ?b))
[ruler_121433_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 0 ?c) (Vec 1 ?b))
[ruler_121434_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 1 ?c) (Vec 0 ?b))
[ruler_121435_lr] (Vec (* 0 ?a) (* ?b ?c)) => (VecMul (Vec 1 ?b) (Vec 0 ?c))
[ruler_121436_lr] (Vec (* ?a 0) (* ?b ?c)) => (VecMul (Vec 1 ?b) (Vec 0 ?c))
[ruler_121437_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 0) (Vec ?b 1))
[ruler_121438_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 0) (Vec ?a 1))
[ruler_121439_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?b 1) (Vec ?a 0))
[ruler_121440_lr] (Vec (* ?a ?b) (* ?c 0)) => (VecMul (Vec ?a 1) (Vec ?b 0))
[ruler_121441_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 0) (Vec ?a 1))
[ruler_121442_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 0) (Vec ?b 1))
[ruler_121443_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?b 1) (Vec ?a 0))
[ruler_121444_lr] (Vec (* ?a ?b) (* 0 ?c)) => (VecMul (Vec ?a 1) (Vec ?b 0))
[ruler_121445_lr] (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?c 0)) => (Vec ?a 1)
[ruler_121446_lr] (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 0 ?c)) => (Vec ?a 1)
[ruler_121447_lr] (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 0)) => (Vec 1 ?a)
[ruler_121448_lr] (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 0 ?c)) => (Vec 1 ?a)
[ruler_121629_lr-rev] (Vec (* ?b ?c) (+ 1 ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c 1))
[ruler_121630_lr-rev] (Vec (* ?c ?b) (+ 1 ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec ?c 1))
[ruler_121631_lr-rev] (Vec (+ ?a 1) (* ?c ?b)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 1 ?c))
[ruler_121632_lr-rev] (Vec (+ ?a 1) (* ?b ?c)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 1 ?c))
[ruler_121635_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec 0 ?c) (Vec ?c 1))
[ruler_121636_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec ?c 1) (Vec 0 ?c))
[ruler_121637_lr-rev] (Vec (* 0 ?c) (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1))
[ruler_121640_lr-rev] (Vec (* 0 ?b) (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c))
[ruler_121643_lr-rev] (Vec (* ?b 0) (+ ?a ?c)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c))
[ruler_121644_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec 0 ?c) (Vec ?c 1))
[ruler_121645_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec ?c 1) (Vec 0 ?c))
[ruler_121646_lr-rev] (Vec (* ?c 0) (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1))
[ruler_121647_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec ?b 1) (Vec 0 ?c))
[ruler_121648_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec ?b 1) (Vec 0 ?c))
[ruler_121649_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec 0 ?c) (Vec ?b 1))
[ruler_121650_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?b) (Vec 0 ?c) (Vec ?b 1))
[ruler_121653_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec ?b 1) (Vec 0 ?b))
[ruler_121654_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec ?c 1) (Vec 0 ?b))
[ruler_121655_lr-rev] (Vec (* ?c 0) (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1))
[ruler_121656_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec 0 ?b) (Vec ?b 1))
[ruler_121657_lr] (Vec (* ?a 0) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec 0 ?b) (Vec ?c 1))
[ruler_121658_lr-rev] (Vec (* ?b 0) (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c))
[ruler_121663_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec ?b 1) (Vec 0 ?b))
[ruler_121664_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec ?c 1) (Vec 0 ?b))
[ruler_121665_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec 0 ?b) (Vec ?b 1))
[ruler_121666_lr] (Vec (* 0 ?a) (+ ?b ?c)) => (VecMAC (Vec 0 ?c) (Vec 0 ?b) (Vec ?c 1))
[ruler_121667_lr-rev] (Vec (* 0 ?b) (+ ?c ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c))
[ruler_121668_lr-rev] (Vec (* 0 ?c) (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1))
[ruler_121670_lr-rev] (Vec (+ ?b ?a) (* 0 ?c)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?c))
[ruler_121671_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecMAC (Vec ?b 0) (Vec 1 ?a) (Vec ?a 0))
[ruler_121672_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecMAC (Vec ?b 0) (Vec ?a 0) (Vec 1 ?b))
[ruler_121673_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecMAC (Vec ?b 0) (Vec ?a 0) (Vec 1 ?a))
[ruler_121674_lr] (Vec (+ ?a ?b) (* 0 ?c)) => (VecMAC (Vec ?b 0) (Vec 1 ?b) (Vec ?a 0))
[ruler_121675_lr-rev] (Vec (+ ?b ?a) (* ?c 0)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?c))
[ruler_121676_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecMAC (Vec ?b 0) (Vec 1 ?a) (Vec ?a 0))
[ruler_121677_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecMAC (Vec ?b 0) (Vec ?a 0) (Vec 1 ?b))
[ruler_121678_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecMAC (Vec ?b 0) (Vec ?a 0) (Vec 1 ?a))
[ruler_121679_lr] (Vec (+ ?a ?b) (* ?c 0)) => (VecMAC (Vec ?b 0) (Vec 1 ?b) (Vec ?a 0))
[ruler_121680_lr-rev] (Vec (+ ?c ?a) (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 0))
[ruler_121682_lr-rev] (Vec (+ ?c ?a) (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 0))
[ruler_129349_lr] (VecAdd (Vec ?a 0) (Vec 0 ?b)) => (Vec ?a ?b)
[ruler_129350_lr] (VecAdd (Vec 0 ?a) (Vec ?b 0)) => (Vec ?b ?a)
[ruler_129351_lr] (VecMul (Vec 1 ?a) (Vec ?b 1)) => (Vec ?b ?a)
[ruler_129352_lr] (VecMul (Vec ?a 1) (Vec 1 ?b)) => (Vec ?a ?b)
[ruler_129516_lr] (* ?a (* ?b 0)) => 0
[ruler_129517_lr] (* ?a (* ?b 0)) => (* 0 ?a)
[ruler_129518_lr] (* ?a (* ?b 0)) => (* ?b 0)
[ruler_129519_lr] (Vec ?a (* ?b 0)) => (Vec ?a 0)
[ruler_129520_lr] (Vec (* ?a 0) ?b) => (Vec 0 ?b)
[ruler_129526_lr] (Vec (Vec ?a 0) (* ?b 0)) => (Vec (Vec ?a 0) 0)
[ruler_129527_lr] (Vec (* ?a 0) (Vec 0 ?b)) => (Vec 0 (Vec 0 ?b))
[ruler_129533_lr] (Vec (* ?a 0) (Vec ?b 0)) => (Vec 0 (Vec ?b 0))
[ruler_129535_lr] (Vec (Vec 0 ?a) (* ?b 0)) => (Vec (Vec 0 ?a) 0)
[ruler_129539_lr] (Vec (* 0 ?a) (* ?b 0)) => (Vec 0 (* ?b 0))
[ruler_129540_lr] (Vec (* 0 ?a) (* ?b 0)) => (Vec (* 0 ?a) 0)
[ruler_129541_lr] (Vec (* 0 ?a) (* ?b 0)) => (Vec 0 (* 0 ?a))
[ruler_129542_lr] (Vec (* 0 ?a) (* 0 ?b)) => (Vec 0 (* 0 ?b))
[ruler_129543_lr] (Vec (* 0 ?a) (* 0 ?b)) => (Vec (* 0 ?a) 0)
[ruler_129544_lr] (Vec (* 0 ?a) (* 0 ?b)) => (Vec (* 0 ?b) 0)
[ruler_129545_lr] (Vec (* 0 ?a) (* 0 ?b)) => (Vec 0 (* 0 ?a))
[ruler_129546_lr] (Vec (* 0 ?a) (* ?b 0)) => (Vec (* ?b 0) 0)
[ruler_129547_lr] (Vec (* ?a 0) (* 0 ?b)) => (Vec (* 0 ?b) 0)
[ruler_129548_lr] (Vec (* ?a 0) (* 0 ?b)) => (Vec 0 (* ?a 0))
[ruler_129549_lr] (Vec (* ?a 0) (* 0 ?b)) => (Vec 0 (* 0 ?b))
[ruler_129550_lr] (Vec (* ?a 0) (* 0 ?b)) => (Vec (* ?a 0) 0)
[ruler_129561_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec ?a ?b) (Vec 0 ?a))
[ruler_129562_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec ?a ?b) (Vec 0 ?a))
[ruler_129563_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 0 ?a) (Vec 0 ?b))
[ruler_129564_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 0 ?a) (Vec 0 ?b))
[ruler_129565_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 0 ?a) (Vec ?a ?b))
[ruler_129566_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 0 ?a) (Vec ?a ?b))
[ruler_129567_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 0 ?a) (Vec ?b ?b))
[ruler_129568_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 0 ?a) (Vec ?b ?b))
[ruler_129569_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec ?a ?a) (Vec 0 ?b))
[ruler_129570_lr-rev] (Vec 1 (* ?b ?a)) => (VecMul (Vec 1 ?a) (Vec 1 ?b))
[ruler_129571_lr-rev] (Vec 1 (* ?a ?b)) => (VecMul (Vec 1 ?a) (Vec 1 ?b))
[ruler_129573_lr-rev] (Vec (* ?b ?a) 1) => (VecMul (Vec ?a 1) (Vec ?b 1))
[ruler_129574_lr-rev] (Vec (* ?a ?b) 1) => (VecMul (Vec ?a 1) (Vec ?b 1))
[ruler_129595_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a ?b) (Vec ?b 0))
[ruler_129596_lr-rev] (Vec 0 (+ ?a ?b)) => (VecAdd (Vec 0 ?a) (Vec 0 ?b))
[ruler_129599_lr-rev] (Vec 0 (+ ?b ?a)) => (VecAdd (Vec 0 ?a) (Vec 0 ?b))
[ruler_129600_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 0) (Vec ?b ?b))
[ruler_129601_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 0) (Vec ?b 0))
[ruler_129602_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 0) (Vec ?b ?a))
[ruler_129603_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 0) (Vec ?b ?b))
[ruler_129604_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a ?a) (Vec ?b 0))
[ruler_129605_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a ?b) (Vec ?b 0))
[ruler_129606_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a ?a) (Vec ?b 0))
[ruler_129607_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 0) (Vec ?b 0))
[ruler_129608_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 0) (Vec ?b ?a))
[ruler_129609_lr-rev] (Vec (+ ?b ?a) 0) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_129611_lr-rev] (Vec (+ ?a ?b) 0) => (VecAdd (Vec ?a 0) (Vec ?b 0))
[ruler_129613_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec ?a ?a) (Vec 0 ?b))
[ruler_129784_lr-rev] (Vec (+ 1 ?a) (+ ?b 1)) => (VecAdd (Vec ?a 1) (Vec 1 ?b))
[ruler_129785_lr-rev] (Vec (+ 1 ?b) (+ ?a 1)) => (VecAdd (Vec 1 ?a) (Vec ?b 1))
[ruler_129799_lr-rev] (Vec (+ ?b 1) (+ 1 ?a)) => (VecAdd (Vec 1 ?a) (Vec ?b 1))
[ruler_129800_lr-rev] (Vec (+ ?a 1) (+ 1 ?b)) => (VecAdd (Vec ?a 1) (Vec 1 ?b))
[ruler_129896_lr] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec ?b 0) (Vec 0 ?b))
[ruler_129897_lr] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec 0 ?b) (Vec ?b 0))
[ruler_129898_lr-rev] (Vec (* 0 ?b) (* ?a 0)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129899_lr-rev] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129900_lr-rev] (Vec (* 0 ?b) (* ?a 0)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129901_lr-rev] (Vec (* 0 ?b) (* 0 ?a)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129902_lr] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_129903_lr] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_129904_lr] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec 0 ?b) (Vec ?b 0))
[ruler_129907_lr-rev] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129909_lr-rev] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129910_lr-rev] (Vec (* 0 ?b) (* 0 ?a)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129911_lr] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec ?b 0) (Vec 0 ?b))
[ruler_129912_lr] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_129913_lr] (Vec (* 0 ?a) (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_129914_lr-rev] (Vec (* 0 ?a) (* ?b 0)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129920_lr-rev] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129921_lr-rev] (Vec (* ?b 0) (* 0 ?a)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129922_lr] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_129923_lr] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_129924_lr] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec 0 ?b) (Vec ?b 0))
[ruler_129925_lr] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec ?b 0) (Vec 0 ?b))
[ruler_129926_lr-rev] (Vec (* ?a 0) (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 0 ?b))
[ruler_129927_lr-rev] (Vec (* ?b 0) (* 0 ?a)) => (VecMul (Vec 0 ?a) (Vec ?b 0))
[ruler_129979_lr-rev] (Vec (+ ?a 1) (+ ?b 1)) => (VecAdd (Vec ?a 1) (Vec 1 ?b))
[ruler_129980_lr-rev] (Vec (+ ?b 1) (+ ?a 1)) => (VecAdd (Vec 1 ?a) (Vec ?b 1))
[ruler_130089_lr] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?a) (Vec ?a 0))
[ruler_130090_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?b))
[ruler_130091_lr] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec ?a 0) (Vec 0 ?a))
[ruler_130092_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?a))
[ruler_130093_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?b 0))
[ruler_130094_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec ?a 0) (Vec 0 ?b))
[ruler_130095_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?b))
[ruler_130096_lr] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 0 ?a) (Vec ?a 0))
[ruler_130097_lr] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec ?a 0) (Vec 0 ?a))
[ruler_130098_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 0 ?a) (Vec ?b 0))
[ruler_130099_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?a))
[ruler_130100_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec ?a 0) (Vec 0 ?b))
[ruler_130104_lr-rev] (Vec ?a (* ?b 0)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?a 0))
[ruler_130105_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?b 0))
[ruler_130107_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?a 0))
[ruler_130109_lr-rev] (Vec ?a (* 0 ?b)) => (VecMAC (Vec ?a 0) (Vec 0 ?a) (Vec ?b 0))
[ruler_130111_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?a) (Vec ?b 0))
[ruler_130113_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?a))
[ruler_130114_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?b 0))
[ruler_130116_lr] (Vec (* 0 ?a) ?b) => (VecMAC (Vec 0 ?b) (Vec ?b 0) (Vec 0 ?b))
[ruler_130117_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?b))
[ruler_130119_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?b 0))
[ruler_130120_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?a) (Vec ?b 0))
[ruler_130121_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec ?a 0) (Vec 0 ?b))
[ruler_130122_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?b))
[ruler_130123_lr] (Vec (* ?a 0) ?b) => (VecMAC (Vec 0 ?b) (Vec ?b 0) (Vec 0 ?b))
[ruler_130125_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?a))
[ruler_130126_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?a 0))
[ruler_130128_lr-rev] (Vec (* ?b 0) ?a) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?a 0))
[ruler_130129_lr] (Vec (* 0 ?a) ?b) => (VecMAC (Vec 0 ?b) (Vec 0 ?b) (Vec ?b 0))
[ruler_130130_lr] (Vec (* ?a 0) ?b) => (VecMAC (Vec 0 ?b) (Vec 0 ?b) (Vec ?b 0))
[ruler_130131_lr-rev] (Vec (* 0 ?b) ?a) => (VecMAC (Vec 0 ?a) (Vec ?a 0) (Vec 0 ?b))
[ruler_131295_lr] (VecMul (Vec 1 ?a) (Vec ?b 0)) => (Vec ?b 0)
[ruler_131296_lr] (VecMul (Vec ?a 0) (Vec 1 ?b)) => (Vec ?a 0)
[ruler_131297_lr] (VecMul (Vec ?a 1) (Vec 0 ?b)) => (Vec 0 ?b)
[ruler_131298_lr] (VecMul (Vec 0 ?a) (Vec ?b 1)) => (Vec 0 ?a)
[ruler_131299_lr-rev] (Vec ?a (+ 1 ?b)) => (VecAdd (Vec ?a 1) (Vec 0 ?b))
[ruler_131300_lr-rev] (Vec ?b (+ 1 ?a)) => (VecAdd (Vec 0 ?a) (Vec ?b 1))
[ruler_131303_lr-rev] (Vec (+ 1 ?b) ?a) => (VecAdd (Vec 1 ?a) (Vec ?b 0))
[ruler_131304_lr-rev] (Vec (+ 1 ?a) ?b) => (VecAdd (Vec ?a 0) (Vec 1 ?b))
[ruler_131305_lr-rev] (Vec ?b (+ ?a 1)) => (VecAdd (Vec 0 ?a) (Vec ?b 1))
[ruler_131306_lr-rev] (Vec ?a (+ ?b 1)) => (VecAdd (Vec ?a 1) (Vec 0 ?b))
[ruler_131307_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 0 ?a) (Vec 1 ?b))
[ruler_131308_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 0 ?a) (Vec 1 ?b))
[ruler_131309_lr-rev] (Vec 0 (* ?b ?a)) => (VecMul (Vec 1 ?a) (Vec 0 ?b))
[ruler_131310_lr-rev] (Vec 0 (* ?a ?b)) => (VecMul (Vec 1 ?a) (Vec 0 ?b))
[ruler_131311_lr-rev] (Vec (+ ?b 1) ?a) => (VecAdd (Vec 1 ?a) (Vec ?b 0))
[ruler_131312_lr] (Vec (* ?a 0) ?b) => (VecMul (Vec ?b 1) (Vec 0 ?b))
[ruler_131313_lr] (Vec (* 0 ?a) ?b) => (VecMul (Vec ?b 1) (Vec 0 ?b))
[ruler_131314_lr-rev] (Vec 1 (+ ?a ?b)) => (VecAdd (Vec 1 ?a) (Vec 0 ?b))
[ruler_131315_lr-rev] (Vec 1 (+ ?a ?b)) => (VecAdd (Vec 0 ?a) (Vec 1 ?b))
[ruler_131316_lr-rev] (Vec 1 (+ ?b ?a)) => (VecAdd (Vec 1 ?a) (Vec 0 ?b))
[ruler_131317_lr-rev] (Vec 1 (+ ?b ?a)) => (VecAdd (Vec 0 ?a) (Vec 1 ?b))
[ruler_131318_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 0) (Vec ?b 1))
[ruler_131319_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 0) (Vec ?b 1))
[ruler_131320_lr-rev] (Vec (* ?b ?a) 0) => (VecMul (Vec ?a 1) (Vec ?b 0))
[ruler_131321_lr-rev] (Vec (* ?a ?b) 0) => (VecMul (Vec ?a 1) (Vec ?b 0))
[ruler_131322_lr-rev] (Vec ?a (* ?b 0)) => (VecMul (Vec ?a 0) (Vec 1 ?b))
[ruler_131323_lr-rev] (Vec (+ ?b ?a) 1) => (VecAdd (Vec ?a 0) (Vec ?b 1))
[ruler_131324_lr-rev] (Vec (+ ?a ?b) 1) => (VecAdd (Vec ?a 0) (Vec ?b 1))
[ruler_131325_lr-rev] (Vec (+ ?b ?a) 1) => (VecAdd (Vec ?a 1) (Vec ?b 0))
[ruler_131326_lr-rev] (Vec (+ ?a ?b) 1) => (VecAdd (Vec ?a 1) (Vec ?b 0))
[ruler_131327_lr] (Vec ?a (* ?b 0)) => (VecMul (Vec 1 ?a) (Vec ?a 0))
[ruler_131328_lr] (Vec ?a (* ?b 0)) => (VecMul (Vec ?a 0) (Vec 1 ?a))
[ruler_131329_lr-rev] (Vec ?b (* ?a 0)) => (VecMul (Vec 1 ?a) (Vec ?b 0))
[ruler_131333_lr] (Vec ?a (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 1 ?a))
[ruler_131334_lr-rev] (Vec ?b (* 0 ?a)) => (VecMul (Vec 1 ?a) (Vec ?b 0))
[ruler_131335_lr] (Vec ?a (* 0 ?b)) => (VecMul (Vec 1 ?a) (Vec ?a 0))
[ruler_131337_lr-rev] (Vec ?a (* 0 ?b)) => (VecMul (Vec ?a 0) (Vec 1 ?b))
[ruler_131338_lr-rev] (Vec (+ ?a 1) ?b) => (VecAdd (Vec ?a 0) (Vec 1 ?b))
[ruler_131339_lr-rev] (Vec (* 0 ?a) ?b) => (VecMul (Vec ?a 1) (Vec 0 ?b))
[ruler_131341_lr-rev] (Vec (* ?a 0) ?b) => (VecMul (Vec ?a 1) (Vec 0 ?b))
[ruler_131342_lr-rev] (Vec (* ?b 0) ?a) => (VecMul (Vec 0 ?a) (Vec ?b 1))
[ruler_131343_lr-rev] (Vec (* 0 ?b) ?a) => (VecMul (Vec 0 ?a) (Vec ?b 1))
[ruler_131345_lr] (Vec (* 0 ?a) ?b) => (VecMul (Vec 0 ?b) (Vec ?b 1))
[ruler_131346_lr] (Vec (* ?a 0) ?b) => (VecMul (Vec 0 ?b) (Vec ?b 1))
[ruler_131446_lr-rev] (Vec (+ 1 ?b) ?a) => (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?a))
[ruler_131447_lr-rev] (Vec (+ 1 ?b) ?a) => (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?b 0))
[ruler_131448_lr-rev] (Vec (+ 1 ?b) ?a) => (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?b))
[ruler_131449_lr-rev] (Vec (+ 1 ?b) ?a) => (VecMAC (Vec 1 ?a) (Vec 1 ?a) (Vec ?b 0))
[ruler_131450_lr-rev] (Vec (+ ?a ?b) 1) => (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?b 0))
[ruler_131451_lr-rev] (Vec (+ ?a ?b) 1) => (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?b))
[ruler_131452_lr-rev] (Vec (+ ?a ?b) 1) => (VecMAC (Vec ?a 1) (Vec 1 ?a) (Vec ?b 0))
[ruler_131453_lr-rev] (Vec (+ ?a ?b) 1) => (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?a))
[ruler_131454_lr-rev] (Vec 0 (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?b 1))
[ruler_131455_lr-rev] (Vec 0 (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?b))
[ruler_131456_lr-rev] (Vec 0 (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec ?a 1) (Vec 0 ?b))
[ruler_131457_lr-rev] (Vec 0 (+ ?a ?b)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?a 1))
[ruler_131464_lr-rev] (Vec ?a (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?b 1))
[ruler_131465_lr-rev] (Vec ?a (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?a 1))
[ruler_131466_lr-rev] (Vec ?a (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 0 ?b))
[ruler_131467_lr-rev] (Vec ?a (+ ?b 1)) => (VecMAC (Vec ?a 1) (Vec ?a 1) (Vec 0 ?b))
[ruler_131472_lr-rev] (Vec 0 (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?b))
[ruler_131473_lr-rev] (Vec 0 (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec ?a 1) (Vec 0 ?b))
[ruler_131474_lr-rev] (Vec 0 (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?b 1))
[ruler_131475_lr-rev] (Vec 0 (+ ?b ?a)) => (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?a 1))
[ruler_131476_lr-rev] (Vec (+ ?b ?a) 0) => (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?b 0))
[ruler_131477_lr-rev] (Vec (+ ?b ?a) 0) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?a))
[ruler_131478_lr-rev] (Vec (+ ?b ?a) 0) => (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?b))
[ruler_131479_lr-rev] (Vec (+ ?b ?a) 0) => (VecMAC (Vec ?a 0) (Vec 1 ?a) (Vec ?b 0))
[ruler_131480_lr-rev] (Vec 1 (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?a 1))
[ruler_131481_lr-rev] (Vec 1 (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?b 1))
[ruler_131482_lr-rev] (Vec 1 (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?b))
[ruler_131483_lr-rev] (Vec 1 (+ ?a ?b)) => (VecMAC (Vec 1 ?a) (Vec ?a 1) (Vec 0 ?b))
[ruler_131486_lr-rev] (Vec (+ ?b ?a) 1) => (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?b))
[ruler_131487_lr-rev] (Vec (+ ?b ?a) 1) => (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?b 0))
[ruler_131488_lr-rev] (Vec (+ ?b ?a) 1) => (VecMAC (Vec ?a 1) (Vec 1 ?a) (Vec ?b 0))
[ruler_131489_lr-rev] (Vec (+ ?b ?a) 1) => (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?a))
[ruler_131490_lr-rev] (Vec (+ ?b 1) ?a) => (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?a))
[ruler_131491_lr-rev] (Vec (+ ?b 1) ?a) => (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?b))
[ruler_131492_lr-rev] (Vec (+ ?b 1) ?a) => (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?b 0))
[ruler_131493_lr-rev] (Vec (+ ?b 1) ?a) => (VecMAC (Vec 1 ?a) (Vec 1 ?a) (Vec ?b 0))
[ruler_132456_lr] (Vec (* ?a 0) (Vec ?b 1)) => (Vec 0 (Vec ?b 1))
[ruler_132457_lr] (Vec (Vec ?a 1) (* ?b 0)) => (Vec (Vec ?a 1) 0)
[ruler_132458_lr] (Vec (* ?a 0) (Vec 1 ?b)) => (Vec 0 (Vec 1 ?b))
[ruler_132459_lr] (Vec (Vec 1 ?a) (* ?b 0)) => (Vec (Vec 1 ?a) 0)
[ruler_132460_lr] (Vec (* ?a 0) (+ 1 ?b)) => (Vec 0 (+ 1 ?b))
[ruler_132461_lr] (Vec (+ 1 ?a) (* ?b 0)) => (Vec (+ 1 ?a) 0)
[ruler_132462_lr] (Vec (+ ?a 1) (* ?b 0)) => (Vec (+ ?a 1) 0)
[ruler_132463_lr] (Vec (+ ?a 1) (* 0 ?b)) => (Vec (+ ?a 1) 0)
[ruler_132464_lr] (Vec (* ?a 0) (+ ?b 1)) => (Vec 0 (+ ?b 1))
[ruler_132465_lr] (Vec (* 0 ?a) (+ ?b 1)) => (Vec 0 (+ ?b 1))
[ruler_133594_lr-rev] (* ?a 1) => ?a
[ruler_133595_lr-rev] (+ ?a 0) => ?a
[ruler_133657_lr-rev] (Vec 0 (* ?a 0)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_133658_lr-rev] (Vec 0 (* ?a 0)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_133659_lr-rev] (Vec (* ?a 0) 0) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_133660_lr-rev] (Vec (* ?a 0) 0) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_133661_lr-rev] (Vec 0 (* 0 ?a)) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_133662_lr-rev] (Vec (* 0 ?a) 0) => (VecMul (Vec 0 ?a) (Vec ?a 0))
[ruler_133663_lr-rev] (Vec 0 (* 0 ?a)) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[ruler_133664_lr-rev] (Vec (* 0 ?a) 0) => (VecMul (Vec ?a 0) (Vec 0 ?a))
[vec-neg] (Vec (neg ?a) (neg ?b)) => (VecNeg (Vec ?a ?b))
[vec-neg0-l] (Vec 0 (neg ?b)) => (VecNeg (Vec 0 ?b))
[vec-neg0-r] (Vec (neg ?a) 0) => (VecNeg (Vec ?a 0))
[litvec] <opaque>
#+end_example

#+begin_src python :var r0=r0 :var r1=r1
rules0 = r0.split("\n")[1:]
rules1 = r1.split("\n")[1:]

rules0val = map(lambda x: x.split(" ", 1)[-1], rules0)
rules1val = map(lambda x: x.split(" ", 1)[-1], rules1)

return list(map(lambda x: [x], set(rules0val) - set(rules1val)))
#+end_src

#+RESULTS:
| (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 1 ?a) (Vec 0 ?c))    |
| (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a 1) (Vec 0 ?b))    |
| (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec 1 ?a) (Vec ?c 0))    |
| (VecMAC (Vec 0 ?b) (Vec ?a 1) (Vec ?c 0)) => (VecMul (Vec ?a ?b) (Vec ?c 1))   |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 0 ?c)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))   |
| (VecMAC (Vec ?b 0) (Vec 0 ?c) (Vec 1 ?a)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))   |
| (VecMAC (Vec ?b 0) (Vec 1 ?a) (Vec 0 ?c)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))   |
| (VecMAC (Vec ?a 0) (Vec 0 ?c) (Vec 1 ?b)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))   |
| (VecMAC (Vec 0 ?b) (Vec ?c 1) (Vec ?a 0)) => (VecMul (Vec ?a ?b) (Vec ?c 1))   |
| (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a ?b) (Vec ?c 0))   |
| (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?a 0) (Vec ?c 0))    |
| (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecMul (Vec ?c 1) (Vec 1 ?a))    |
| (VecAdd (VecAdd ?a ?b) (VecMul ?c ?d)) => (VecAdd ?a (VecMAC ?b ?c ?d))        |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 0 ?a) (Vec ?b 1))    |
| (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?a) (Vec 1 ?b))   |
| (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?c) (Vec ?a 1))    |
| (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 0)) => (VecAdd (Vec ?a 0) (Vec ?d ?b))  |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecMul (Vec ?b 1) (Vec 1 ?a))    |
| (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 1 ?a) (Vec ?a 0))    |
| (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?b) (Vec ?a 1))   |
| (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?a) (Vec ?c ?b))   |
| (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec 1 ?a) (Vec ?b 0))    |
| (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 0 ?d)) => (VecAdd (Vec ?a 0) (Vec 0 ?b))   |
| (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?d)) => (VecAdd (Vec ?a ?b) (Vec ?c 0))  |
| (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?a 0) (Vec ?c 1))    |
| (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 0) (Vec ?a 1))    |
| (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 0 ?c)) => (VecMul (Vec 1 ?c) (Vec ?a 1))    |
| (VecMAC (Vec 1 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec 1 ?a))    |
| (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec 0 ?c)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))   |
| (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c 0) (Vec ?a ?b))   |
| (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?a 0) (Vec 1 ?c))    |
| (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?c) (Vec 0 ?a))    |
| (VecMAC (Vec 0 ?c) (Vec ?a 0) (Vec ?b 0)) => (VecMul (Vec ?a 1) (Vec ?b ?c))   |
| (VecMAC (Vec 0 ?b) (Vec ?a 0) (Vec ?c 0)) => (VecMul (Vec ?a ?b) (Vec ?c 1))   |
| (VecMAC (Vec ?b 0) (Vec 0 ?a) (Vec 0 ?c)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))   |
| (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?a) (Vec 1 ?b))    |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 1)) => (VecMul (Vec ?a 1) (Vec 1 ?b))    |
| (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?a 1) (Vec ?b 0))    |
| (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?c) (Vec ?a 1))   |
| (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?d)) => (VecAdd (Vec ?a 0) (Vec ?c ?b))  |
| (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?a) (Vec 0 ?b))    |
| (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?a) (Vec 0 ?c))    |
| (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 1 ?c) (Vec ?a 0))    |
| (VecMAC (Vec 0 ?b) (Vec ?a 0) (Vec ?c 1)) => (VecMul (Vec ?a ?b) (Vec ?c 1))   |
| (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?b) (Vec 1 ?a))   |
| (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 0) (Vec 0 ?a))    |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?c 1) (Vec 0 ?a))    |
| (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 1 ?c) (Vec 0 ?a))    |
| (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?a 0) (Vec ?b 0))    |
| (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 1)) => (VecAdd (Vec ?a ?c) (Vec 0 ?b))  |
| (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec 0 ?a) (Vec ?b ?c))   |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?a 0) (Vec 1 ?c))    |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 1 ?c) (Vec ?a 0))    |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?a 0) (Vec 1 ?b))    |
| (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec ?a 1) (Vec 0 ?c))    |
| (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?a) (Vec 1 ?c))   |
| (VecMAC (Vec 0 ?b) (Vec ?c 0) (Vec ?a 0)) => (VecMul (Vec ?a ?b) (Vec ?c 1))   |
| (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b 1) (Vec ?a ?c))   |
| (VecAdd (VecAdd ?a ?b) (VecMul ?c ?d)) => (VecMAC (VecAdd ?a ?b) ?c ?d)        |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?d)) => (VecMul (Vec 1 ?b) (Vec ?a ?d))  |
| (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 0) (Vec 1 ?a))    |
| (VecMAC (Vec 0 ?c) (Vec ?b 0) (Vec ?a 1)) => (VecMul (Vec ?a 1) (Vec ?b ?c))   |
| (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?a 0) (Vec ?b ?c))   |
| (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 1 ?a) (Vec 0 ?b))    |
| (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a 0) (Vec ?c ?b))   |
| (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?b) (Vec ?a 0))   |
| (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?c) (Vec 1 ?a))   |
| (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 0)) => (VecMul (Vec ?d ?a) (Vec ?b 1))  |
| (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?d)) => (VecMul (Vec 1 ?d) (Vec ?a ?c))  |
| (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?d)) => (VecMul (Vec 1 ?c) (Vec ?a ?d))  |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?d)) => (VecMul (Vec ?b 1) (Vec ?c ?a))  |
| (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?a ?c) (Vec ?b 0))   |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?d)) => (VecMul (Vec 1 ?d) (Vec ?a ?b))  |
| (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?a) (Vec 0 ?c))   |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?d)) => (VecMul (Vec ?b ?a) (Vec ?c 1))  |
| (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 0)) => (VecMul (Vec 1 ?a) (Vec ?c 1))    |
| (VecMAC (Vec 0 ?c) (Vec ?b 0) (Vec ?a 0)) => (VecMul (Vec ?a 1) (Vec ?b ?c))   |
| (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec ?a ?c))   |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 1 ?a) (Vec ?a 0))    |
| (VecMAC (Vec ?a 0) (Vec 1 ?c) (Vec 0 ?b)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))   |
| (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?d)) => (VecAdd (Vec ?a ?b) (Vec 0 ?d))  |
| (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?a) (Vec 1 ?c))    |
| (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec 0 ?a))    |
| (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?b 1) (Vec 0 ?a))    |
| (VecMAC (Vec 0 ?c) (Vec ?a 0) (Vec ?b 1)) => (VecMul (Vec ?a 1) (Vec ?b ?c))   |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?d)) => (VecMul (Vec ?a ?d) (Vec 1 ?b))  |
| (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?d)) => (VecAdd (Vec ?a ?d) (Vec 0 ?b))  |
| (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a ?b) (Vec ?c 1))   |
| (VecMAC (Vec 0 ?b) (Vec ?c 0) (Vec ?a 1)) => (VecMul (Vec ?a ?b) (Vec ?c 1))   |
| (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?a 1) (Vec ?c 0))    |
| (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 0 ?c)) => (VecMul (Vec ?a 1) (Vec 1 ?c))    |
| (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 1)) => (VecAdd (Vec 0 ?b) (Vec ?a ?c))  |
| (VecMAC (Vec ?b 0) (Vec 0 ?c) (Vec 0 ?a)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))   |
| (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?d)) => (VecAdd (Vec ?c 0) (Vec ?a ?b))  |
| (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 1 ?d)) => (VecAdd (Vec ?a ?b) (Vec ?c ?d)) |
| (VecAdd ?a (VecMul ?b ?c)) => (VecMAC ?a ?b ?c)                                |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec ?a 0))    |
| (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?c) (Vec ?a 0))    |
| (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec 1 ?a) (Vec ?c ?b))   |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 0 ?a) (Vec ?a 1))    |
| (VecMAC (Vec 0 ?c) (Vec ?a 1) (Vec ?b 0)) => (VecMul (Vec ?a 1) (Vec ?b ?c))   |
| (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?b) (Vec 0 ?a))   |
| (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?d)) => (VecAdd (Vec 0 ?b) (Vec ?a ?d))  |
| (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 0)) => (VecAdd (Vec ?d 0) (Vec ?a ?b))  |
| (VecMAC (Vec ?a 1) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec ?a 1))    |
| (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?a 1) (Vec ?c ?b))   |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?b 1) (Vec 0 ?a))    |
| (VecMAC (Vec ?a 0) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 0) (Vec ?a 0))    |
| (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?a 0) (Vec ?b 1))    |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 0 ?a) (Vec ?c 1))    |
| (VecMAC (Vec 1 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec 1 ?b) (Vec ?c ?a))   |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecMul (Vec 1 ?a) (Vec ?b 1))    |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?a 0) (Vec 1 ?a))    |
| (VecAdd (VecMul ?a ?b) (VecMul ?c ?d)) => (VecMAC (VecMul ?a ?b) ?c ?d)        |
| (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec 1 ?a) (Vec ?b ?c))   |
| (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec ?c ?a))   |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?d)) => (VecMul (Vec ?c 1) (Vec ?b ?a))  |
| (VecMAC (Vec ?a 0) (Vec 0 ?c) (Vec 0 ?b)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))   |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 1 ?b) (Vec ?a 0))    |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec 0 ?a))    |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec 1 ?c)) => (VecMul (Vec ?a ?b) (Vec 1 ?c))   |
| (VecMAC (Vec ?b 0) (Vec 1 ?c) (Vec 0 ?a)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))   |
| (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec 0 ?c) (Vec ?b ?a))   |
| (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 0)) => (VecAdd (Vec ?d ?b) (Vec ?a 0))  |
| (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 1)) => (VecAdd (Vec ?a ?b) (Vec 0 ?c))  |
| (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?a 0) (Vec 1 ?b))    |
| (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 0)) => (VecAdd (Vec ?a 0) (Vec 0 ?b))   |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c ?d)) => (VecMul (Vec ?a ?b) (Vec 1 ?d))  |
| (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec ?a 0) (Vec 1 ?a))    |
| (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 0 ?a) (Vec ?b 1))    |
| (VecMAC (Vec ?a ?b) (Vec ?c 0) (Vec 1 ?d)) => (VecAdd (Vec ?c ?b) (Vec ?a 0))  |
| (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec 1 ?c) (Vec ?b ?a))   |
| (VecMAC (Vec 1 ?a) (Vec ?b 1) (Vec 0 ?c)) => (VecAdd (Vec 0 ?c) (Vec 1 ?a))    |
| (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c 1) (Vec ?a ?b))   |
| (VecMAC (Vec ?a ?b) (Vec ?c 1) (Vec 0 ?d)) => (VecAdd (Vec 0 ?d) (Vec ?a ?b))  |
| (VecMAC (Vec ?a 0) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?c) (Vec ?a 0))   |
| (VecMAC (Vec ?a ?b) (Vec 0 ?c) (Vec ?d 1)) => (VecAdd (Vec 0 ?c) (Vec ?a ?b))  |
| (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec ?a 1))    |
| (VecMAC (Vec 0 ?a) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?b ?c) (Vec 0 ?a))   |
| (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?a 1) (Vec ?b ?c))   |
| (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 0 ?b) (Vec 1 ?a))    |
| (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?d)) => (VecMul (Vec ?a ?d) (Vec 1 ?c))  |
| (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec ?c 1) (Vec 0 ?a))    |
| (VecMAC (Vec ?a ?b) (Vec 1 ?c) (Vec ?d 0)) => (VecAdd (Vec ?a ?b) (Vec ?d 0))  |
| (VecMAC (Vec ?a 1) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 1) (Vec ?a 0))    |
| (VecMAC (Vec ?a 0) (Vec ?b ?c) (Vec 0 ?d)) => (VecMul (Vec ?a ?c) (Vec 1 ?d))  |
| (VecMAC (Vec ?a 1) (Vec 1 ?b) (Vec ?c 0)) => (VecAdd (Vec ?c 1) (Vec ?a 0))    |
| (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 0 ?a) (Vec ?a 1))    |
| (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 0 ?c)) => (VecMul (Vec 1 ?b) (Vec ?a 0))    |
| (VecMAC (Vec ?a 0) (Vec 0 ?b) (Vec ?c 1)) => (VecMul (Vec 1 ?b) (Vec ?a 1))    |
| (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 0)) => (VecMul (Vec ?b 1) (Vec ?d ?a))  |
| (VecMAC (Vec 0 ?a) (Vec 1 ?b) (Vec ?c 1)) => (VecAdd (Vec ?c ?a) (Vec 0 ?b))   |
| (VecMAC (Vec 0 ?c) (Vec ?b 1) (Vec ?a 0)) => (VecMul (Vec ?a 1) (Vec ?b ?c))   |
| (VecMAC (Vec 0 ?a) (Vec 0 ?b) (Vec ?c 0)) => (VecMul (Vec 0 ?a) (Vec ?c 1))    |
| (VecMAC (Vec ?a 1) (Vec ?b 1) (Vec 1 ?c)) => (VecAdd (Vec ?a ?c) (Vec ?b 1))   |
| (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 0)) => (VecMul (Vec ?b ?a) (Vec ?d 1))  |
| (VecMAC (Vec 0 ?a) (Vec ?b 0) (Vec ?c ?d)) => (VecMul (Vec ?c ?a) (Vec ?b 1))  |
| (VecMAC (Vec 0 ?a) (Vec ?b ?c) (Vec ?d 0)) => (VecMul (Vec ?d 1) (Vec ?b ?a))  |
| (VecMAC (Vec 1 ?a) (Vec 0 ?b) (Vec ?c 1)) => (VecAdd (Vec 1 ?b) (Vec 0 ?a))    |
| (VecMAC (Vec ?a 0) (Vec ?b 0) (Vec 1 ?c)) => (VecAdd (Vec ?b 0) (Vec ?a 0))    |
| (VecMAC (Vec ?b 0) (Vec 0 ?a) (Vec 1 ?c)) => (VecMul (Vec 1 ?a) (Vec ?b ?c))   |

* Proving the phase effect
:PROPERTIES:
:header-args: :session graphics :colnames yes :width 600 :height 600
:END:

Load csv file

#+begin_src R :results none
library(tidyverse)
theme_set(theme_minimal())

data <- read.csv("log-t2-0.out")
## data <- read.csv("log-handwritten.out")
#+end_src

#+begin_src R
data %>%
  ## filter(iteration == 0) %>%
  filter(diff_cost > 0) %>%
  filter(cd > 0) %>%
  select(iteration, name, cd, n_apps, diff_cost, aft_size)
  ## distinct(name)
#+end_src

#+RESULTS:
| iteration | name                |    cd | n_apps |          diff_cost | aft_size |
|-----------+---------------------+-------+--------+--------------------+----------|
|         0 | +_binop_or_zero_vec | 102.8 |      4 |   3.79900000000009 |      613 |
|         1 | litvec              | 0.099 |      2 |  0.197999999999979 |      961 |
|         1 | +_binop_or_zero_vec | 102.8 |     66 |   3.79899999999998 |     1324 |
|         2 | litvec              | 0.099 |     10 |  0.197999999999979 |     2412 |
|         2 | *_binop_or_zero_vec | 102.8 |    613 |             21.796 |     5846 |
|         2 | vec-mac             | 106.7 |   5603 |                  1 |    12030 |
|         3 | litvec              | 0.099 |     35 |  0.197999999999979 |    17260 |
|         3 | vec-mac-add-mul     |     1 |   2814 |   6.99800000000005 |    20362 |
|         3 | *_binop_or_zero_vec | 102.8 |   7045 |            114.693 |    49748 |
|         3 | vec-mac             | 106.7 |  89322 |                  1 |   137280 |
|         4 | litvec              | 0.099 |     12 | 0.0989999999999895 |   153883 |
|         4 | vec-mac-add-mul     |     1 |  60957 |                  2 |   164343 |
|         4 | *_binop_or_zero_vec | 102.8 |  12566 |            103.792 |   241662 |
|         5 | *_binop_or_zero_vec | 102.8 |  15746 |            183.259 |   637463 |
|         6 | vec-mac-add-mul     |     1 | 116380 |   5.00200000000001 |  1055817 |
|         6 | neg_unop            | 102.9 |   2010 |   1.20299999999997 |  1058626 |
|         7 | *_binop_or_zero_vec | 102.8 |   6221 |            102.998 |  1262105 |

#+begin_src R :result :results graphics file :file cost.png
g <- data %>%
  ggplot(aes(x = 1:nrow(data))) + geom_line(aes(y = aft_cost), color="red") +
  geom_point(aes(y = cd,
                 size = n_apps,
                 color = n_apps,
                 alpha = n_apps)) +
  scale_color_gradient(low = "gray", high = "red", na.value = NA) +
  scale_size(range = c(0, 5)) +
  scale_alpha(range = c(0.3, 1))

## add vertical iteration lines
d <- nrow(data %>% filter(iteration == 0))
for (i in 1:max(data %>% select(iteration))) {
  g <- g + geom_vline(xintercept = i * d, linetype = "dotted")
}

g
#+end_src

#+RESULTS:
[[file:cost.png]]

#+begin_src R :result :results graphics file :file cost-by-size.png
g <- data %>%
  ggplot(aes(x = aft_size)) + geom_line(aes(y = aft_cost), color="red") +
  geom_point(aes(x = aft_size,
                 y = cd,
                 size = n_apps,
                 color = n_apps)) 

# add vertical iteration lines
for (i in 1:max(data %>% select(iteration))) {
  g <- g + geom_vline(xintercept = min(data %>%
                                       filter(iteration == i) %>%
                                       select(aft_size)),
                      linetype = "dotted")
}

g
#+end_src

#+RESULTS:
[[file:cost-by-size.png]]

#+begin_src R
#  :results graphics file :file hist.png
data %>%
  filter(diff_cost > 0) %>%
  select(iteration, name) ## %>%
  ## ggplot(aes(x = iteration)) + geom_histogram(bins = max(data %>% select(iteration)))
#+end_src

#+RESULTS:
| iteration | name                |
|-----------+---------------------|
|         0 | +_binop_or_zero_vec |
|         1 | litvec              |
|         1 | +_binop_or_zero_vec |
|         2 | litvec              |
|         2 | *_binop_or_zero_vec |
|         2 | vec-mac             |
|         3 | litvec              |
|         3 | vec-mac-add-mul     |
|         3 | *_binop_or_zero_vec |
|         3 | vec-mac             |
|         4 | litvec              |
|         4 | vec-mac-add-mul     |
|         4 | *_binop_or_zero_vec |
|         5 | *_binop_or_zero_vec |
|         6 | vec-mac-add-mul     |
|         6 | neg_unop            |
|         7 | *_binop_or_zero_vec |

I think the question is less whether the phase distinction exists, but whether or not imposing the phase distinction has a impact on the effectiveness of rule applications.

The phase distinction definitely exists in the sense that "compiling" rules need to apply before "optimization" rules. But this might not be happening program wide. This is necessarily true for "sub-expressions" but maybe less true for the entire program.

That being said, I think you do see some of this effect happening naturally. Higher cost differential rules apply during the middle phases of compilation.

But the question is what if we force this distinction.

* Experiment with scalability of Ruler (timeout ablation of rule generation)
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

** Configuration

#+begin_src json :results file silent :file experiments/time-conf.json
{
    "compile_command": "cargo build --release --manifest-path src/dios-egraphs/Cargo.toml",
    "base_command": "src/dios-egraphs/target/release/dios-egraphs",
    "extra": "--timeout 3900 --no-dup-vars",
    "benchmarks": ["q-prod"],
    "-comment": ["2d-conv", "mat-mul"],
    "input_template": "{}-out/spec.rkt",
    "timeout": 4000,
    "percent_cpus": 0.15,
    "parameters": [	
	{
	"name": "rules",
	"flag": "--rules",
	"args": [
	    "time-ablation-var4/rules-t-60.json",
	    "time-ablation-var4/rules-t-600.json",
	    "time-ablation-var4/rules-t-6000.json",
	    "time-ablation-var4/rules-t-60000.json",
	    "time-ablation-var4/rules-t-100000.json",
	    "time-ablation-var4/rules-t-200000.json"
	]
    },
	{
	"name": "cost-filter",
	"flag": "--cost-filter",
	"args": [0.0, 5.0]
    },
	{
	"name": "sub-prog",
	"flag": "--sub-prog",
	"args": []
    }
    ]
}
#+end_src

** Command to run

#+begin_src shell :dir (magit-toplevel) :results output
tmux new-session -d -s exp
tmux send-keys 'cd diospyros' ENTER
tmux send-keys './experiments/testbed.py experiments/time-conf.json experiments/ruler-time-ablation-var4-v3' ENTER
#+end_src

** Extract data

#+begin_src shell :dir (magit-toplevel) :results output
cd experiments
./extract.py time-conf.json ruler-time-ablation-var4-v2 ruler-time-ablation-var4-v2.csv
#+end_src

#+RESULTS:

** Exploration
:PROPERTIES:
:header-args: :session *graphics* :colnames yes
:END:

#+begin_src R :results none
library(tidyverse)
#+end_src

#+begin_src R :results value
read.csv("ruler-time-ablation-var4-v3.csv") %>%
  ## filter(rules == "time-ablation/rules-t-200000.json") %>%
  ## filter(is.na(cost.filter)) %>%
  filter(cost.filter == 5) %>%
  ## filter(split.phase == "auto") %>%
  filter(sub.prog == "False") %>%
  filter(bench == "q-prod") %>%
  filter(variable == "cost" | variable == "xtime" | variable == "phase_2_n") %>%
  select(id, rules, cost.filter, variable, value)
#+end_src

#+RESULTS:
| id | rules                                  | cost.filter | variable  |   value |
|----+----------------------------------------+-------------+-----------+---------|
|  3 | time-ablation-var4/rules-t-60.json     |           5 | cost      | 406.359 |
|  3 | time-ablation-var4/rules-t-60.json     |           5 | phase_2_n |       5 |
|  9 | time-ablation-var4/rules-t-600.json    |           5 | cost      | 406.359 |
|  9 | time-ablation-var4/rules-t-600.json    |           5 | phase_2_n |       5 |
| 15 | time-ablation-var4/rules-t-6000.json   |           5 | cost      | 406.359 |
| 15 | time-ablation-var4/rules-t-6000.json   |           5 | phase_2_n |     283 |
| 21 | time-ablation-var4/rules-t-60000.json  |           5 | cost      | 406.359 |
| 21 | time-ablation-var4/rules-t-60000.json  |           5 | phase_2_n |     391 |
| 27 | time-ablation-var4/rules-t-100000.json |           5 | cost      | 406.359 |
| 27 | time-ablation-var4/rules-t-100000.json |           5 | phase_2_n |       6 |
| 33 | time-ablation-var4/rules-t-200000.json |           5 | cost      | 406.359 |
| 33 | time-ablation-var4/rules-t-200000.json |           5 | phase_2_n |       6 |
| 39 |                                        |           5 | cost      |         |
| 39 |                                        |           5 | phase_2_n |         |

#+name: ablation6
| id | rules                             | cost.filter | variable  |   value |
|----+-----------------------------------+-------------+-----------+---------|
|  3 | time-ablation/rules-t-60.json     |           5 | cost      | 314.765 |
|  3 | time-ablation/rules-t-60.json     |           5 | phase_2_n |      17 |
|  9 | time-ablation/rules-t-600.json    |           5 | cost      | 316.359 |
|  9 | time-ablation/rules-t-600.json    |           5 | phase_2_n |       5 |
| 15 | time-ablation/rules-t-6000.json   |           5 | cost      | 316.359 |
| 15 | time-ablation/rules-t-6000.json   |           5 | phase_2_n |       5 |
| 21 | time-ablation/rules-t-60000.json  |           5 | cost      |  81.058 |
| 21 | time-ablation/rules-t-60000.json  |           5 | phase_2_n |     254 |
| 27 | time-ablation/rules-t-100000.json |           5 | cost      | 316.359 |
| 27 | time-ablation/rules-t-100000.json |           5 | phase_2_n |       5 |
| 33 | time-ablation/rules-t-200000.json |           5 | cost      | 316.359 |
| 33 | time-ablation/rules-t-200000.json |           5 | phase_2_n |       6 |
| 39 |                                   |           5 | cost      |         |
| 39 |                                   |           5 | phase_2_n |         |

* Number of rules per ruleset

#+begin_src shell :dir (magit-toplevel) :results table :colnames '("timeout" "rules" "0-filt" "5-filt")
function f() {
    echo $(cat "time-ablation/rules-t-$1.json" | jq '.eqs | length')
}

echo "60\t" $(f 60) "\t" 23 "\t" 17
echo "600\t" $(f 600) "\t" 11 "\t" 5
echo "6000\t" $(f 6000) "\t" 17 "\t" 5
echo "60000\t" $(f 60000) "\t" 390 "\t" 255
echo "100000\t" $(f 100000) "\t" 41 "\t" 5
echo "200000\t" $(f 200000) "\t" 48 "\t" 6
#+end_src

#+RESULTS:
| timeout | rules | 0-filt | 5-filt |
|---------+-------+--------+--------|
|      60 |  2908 |     23 |     17 |
|     600 |  1729 |     11 |      5 |
|    6000 |  2334 |     17 |      5 |
|   60000 | 97482 |    390 |    255 |
|  100000 |  2511 |     41 |      5 |
|  200000 |  2484 |     48 |      6 |

| timeout | rules | 0-filt | 5-filt |
|---------+-------+--------+--------|
|      60 |   107 |     23 |     17 |
|     600 |   270 |     11 |      5 |
|    6000 | 60651 |     17 |      5 |
|   60000 | 93399 |    390 |    255 |
|  100000 |  1619 |     41 |      5 |
|  200000 |  2187 |     48 |      6 |

* Run ruler with increased vector size

#+begin_src emacs-lisp :dir (magit-toplevel) :results value
(let* ((cmd '("RUST_LOG=info" "cargo" "run" "--manifest-path ruler/Cargo.toml"
	      "--release" "--bin"
	      "dios" "--" "synth"
	      "--dios-config" "configs/vec4_baseline.json"
	      "--variables" "4"
	      "--iters" "2"
	      "--vector-size" "2" ;; VECTOR_SIZE
	      "--eqsat-iter-limit" "2"
	      "--eqsat-time-limit" "30"
	      "--num-fuzz" "6"
	      "--abs-timeout" "60"
	      "--outfile" "vec/test.json"))
       (addr "18.189.44.151")
       )
  (s-join " " cmd)
  ;; (async-shell-command (s-join " " cmd))
  ;; (shell-command-to-string (format "./sync.sh %s" addr))
  ;; (shell-command-to-string (format "ssh ubuntu@%s tmux new -d -s vec4"
  ;; 				   addr))
  ;; (shell-command-to-string (format "ssh ubuntu@%s \"tmux send '%s' ENTER\""
  ;; 				   addr
  ;; 				   "cd diospyros"))
  ;; (shell-command-to-string (format "ssh ubuntu@%s \"tmux send '%s' ENTER\""
  ;; 				   addr
  ;; 				   (s-join " " cmd)))
  )
#+end_src

#+RESULTS:
: RUST_LOG=info cargo run --manifest-path ruler/Cargo.toml --release --bin dios -- synth --dios-config configs/vec4_baseline.json --variables 4 --iters 2 --vector-size 2 --eqsat-iter-limit 2 --eqsat-time-limit 30 --num-fuzz 6 --abs-timeout 60 --outfile vec/test.json

#+begin_src emacs-lisp :dir (magit-toplevel) :results value
(let* ((cmd '("RUST_LOG=info" "cargo" "run"
	      "--manifest-path src/dios-egraphs/Cargo.toml"
	      "--release"
	      "--"
	      "q-prod-out/spec.rkt"
	      "--rules" "t2.json"
	      "--timeout 3900 --no-dup-vars"
	      "--split-phase syntax"
	      ;; "--dump-rules"
	      "--dry-run" ">/dev/null"
	      )))
       ;; (s-join " " cmd)
  (async-shell-command (s-join " " cmd))
  )
#+end_src

#+RESULTS:
: #<window 183 on *Async Shell Command*>

** Looking at the rules generated from a 300,000 sec ruler run with Vec size 3

Here's the config that I used.

#+begin_src json
{
    "constants": [
        {
        "type": "int",
        "value": 0
    },
        {
        "type": "int",
        "value": 1
    }
    ],
    "seed_rules": [],
    "binops": [
        "+"
    ],
    "use_vector": true,
    "vector_binops": [
        "+"
    ],
    "vector_mac": false
}
#+end_src

And the command that I ran was:

#+begin_src shell
RUST_LOG=info cargo run --manifest-path ruler/Cargo.toml --release --bin dios -- synth --dios-config configs/vec4_baseline.json --variables 6 --iters 2 --vector-size 3 --eqsat-iter-limit 3 --eqsat-time-limit 60 --num-fuzz 6 --abs-timeout 300000 --outfile vec/test.json
#+end_src

Let's see how our phase splitter splits the rules. How many compile rules did we manage to generate?

#+begin_src async-shell :dir (magit-toplevel) :results none
RUST_LOG=info cargo run --manifest-path src/dios-egraphs/Cargo.toml --release -- \
      q-prod-out/spec.rkt \
      --rules experiments/vec3_long.json \
      --timeout 10 --no-dup-vars \
      --split-phase syntax \
      --dump-rules \
      --dry-run >/dev/null
#+end_src

#+RESULTS:
: #<window 39 on *Async Shell Command*>

* Syntax phase splitting vs. Cost function phase splitting
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

** Ablation configuration

#+begin_src json :results file silent :file experiments/phase-split-conf.json
{
    "compile_command": "cargo build --release --manifest-path src/dios-egraphs/Cargo.toml",
    "base_command": "src/dios-egraphs/target/release/dios-egraphs",
    "extra": "--timeout 3900 --no-dup-vars --rules t2.json",
    "benchmarks": ["q-prod"],
    "-comment": ["2d-conv", "mat-mul"],
    "input_template": "{}-out/spec.rkt",
    "timeout": 4000,
    "percent_cpus": 0.15,
    "parameters": [	
	{
	"name": "cost-filter",
	"flag": "--cost-filter",
	"args": [0.0, 5.0]
    },
	{
	"name": "split-phase",
	"flag": "--split-phase",
	"args": ["auto", "syntax"]
    }
    ]
}
#+end_src

** Start experiment

#+begin_src emacs-lisp :results none
(let* ((addr "3.15.142.125")
       (cmd '("./experiments/testbed.py"
	      "experiments/phase-split-conf.json"
	      "experiments/phase-split-results")))
  (shell-command-to-string (format "./sync.sh %s" addr))
  (shell-command-to-string (format "ssh ubuntu@%s tmux new -d -s exp"
				   addr))
  ;; enter directory
  (shell-command-to-string (format "ssh ubuntu@%s \"tmux send '%s' ENTER\""
				   addr
				   "cd diospyros"))
  ;; run command
  (shell-command-to-string (format "ssh ubuntu@%s \"tmux send '%s' ENTER\""
				   addr
				   (s-join " " cmd))))
#+end_src

#+begin_src emacs-lisp :results none
(let* ((addr "3.15.142.125"))
  (async-shell-command
   (format "rsync -rvP ubuntu@%s:~/diospyros/experiments/phase-split-results ./experiments"
	   addr)))
#+end_src

** Extract data

#+begin_src shell :dir (magit-toplevel) :results output
cd experiments
./extract.py phase-split-conf.json phase-split-results phase-split-results.csv
#+end_src

#+RESULTS:

** Exploration
:PROPERTIES:
:header-args: :session *phase-split* :colnames yes
:END:

#+begin_src R :results none
library(tidyverse)
#+end_src

#+begin_src R :results value
read.csv("phase-split-results.csv") %>%
  ## filter(split.phase == "auto") %>%
  filter(variable == "cost" | variable == "time" | variable == "xphase_2_n") %>%
  select(id, cost.filter, split.phase, variable, value)
#+end_src

#+RESULTS:
| id | cost.filter | split.phase | variable |              value |
|----+-------------+-------------+----------+--------------------|
|  0 |           0 | auto        | time     | 4.1946446895599365 |
|  0 |           0 | auto        | cost     |  69.87199999999999 |
|  1 |           0 | syntax      | time     |  7.315228223800659 |
|  1 |           0 | syntax      | cost     |  69.87199999999999 |
|  2 |           0 |             | time     | 204.98621225357056 |
|  2 |           0 |             | cost     |  55.87199999999999 |
|  3 |           5 | auto        | time     | 4.1221020221710205 |
|  3 |           5 | auto        | cost     |  74.58600000000001 |
|  4 |           5 | syntax      | time     |  4.164104223251343 |
|  4 |           5 | syntax      | cost     |  74.58600000000001 |
|  5 |           5 |             | time     |  4.192599773406982 |
|  5 |           5 |             | cost     |  74.58600000000001 |
|  6 |             | auto        | time     |         Timed out. |
|  6 |             | auto        | cost     |               -1.0 |
|  7 |             | syntax      | time     | 122.82920742034912 |
|  7 |             | syntax      | cost     |            600.556 |
|  8 |             |             | time     | 3908.2780978679657 |
|  8 |             |             | cost     |  597.0640000000001 |

* Testing variable duplication option in ruler
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

Config:
#+begin_src json :results file silent :file configs/test.json
{
    "constants": [],
    "seed_rules": [],
    "binops": ["+", "*"],
    "use_vector": true,
    "vector_binops": ["+", "*"],
    "vector_mac": true,
    "variable_duplication": false
}
#+end_src

#+begin_src async-shell :results silent
RUST_LOG=info cargo run --manifest-path ruler/Cargo.toml \
	--release --bin dios -- \
	synth \
	--dios-config configs/test.json \
	--variables 6 \
	--iters 2 \
	--vector-size 3 \
	--eqsat-iter-limit 3 \
	--eqsat-time-limit 30 \
	--num-fuzz 6 \
	--abs-timeout 60 \
	--outfile vec/test.json
#+end_src

variable_duplication: false
#+begin_example
(VecMul ?a (VecMul ?b ?c)) <=> (VecMul (VecMul ?a ?b) ?c)
(VecAdd ?a (VecAdd ?b ?c)) <=> (VecAdd (VecAdd ?a ?b) ?c)
(+ ?a (+ ?b ?c)) <=> (+ (+ ?a ?b) ?c)
(* ?a (* ?b ?c)) <=> (* (* ?a ?b) ?c)
(VecMul (VecNeg ?a) (VecMul ?b ?c)) <=> (VecMul (VecMul ?a ?b) (VecNeg ?c))
(VecMul ?a (VecAdd ?b ?c)) <=> (VecAdd (VecMul ?a ?b) (VecMul ?c ?a))
(VecMul ?a (VecAdd ?b ?c)) <=> (VecAdd (VecMul ?a ?b) (VecMul ?a ?c))
(+ (* ?a ?b) (* ?a ?c)) <=> (* ?a (+ ?b ?c))
(+ (* ?a ?b) (* ?c ?a)) <=> (* ?a (+ ?b ?c))
(VecMul ?a (VecMul ?b (VecMul ?c ?a))) <=> (VecMul ?a (VecMul ?b (VecMul ?a ?c)))
(VecAdd ?a (VecAdd ?b (VecAdd ?c ?a))) <=> (VecAdd ?a (VecAdd (VecAdd ?b ?a) ?c))
(VecAdd ?a (VecAdd ?b (VecAdd ?b ?c))) <=> (VecAdd ?a (VecAdd (VecAdd ?b ?c) ?b))
(VecMul ?a (VecMul ?b (VecMul ?c ?b))) <=> (VecMul ?a (VecMul ?b (VecMul ?b ?c)))
(* ?a (* ?b (* ?c ?a))) <=> (* ?a (* ?b (* ?a ?c)))
(+ (+ ?a ?b) (+ ?c ?a)) <=> (+ (+ ?a ?b) (+ ?a ?c))
(VecMul (VecAdd ?a ?b) (VecAdd ?c ?a)) <=> (VecMul (VecAdd ?a ?b) (VecAdd ?a ?c))
(VecAdd ?a (VecAdd ?b (VecMul ?a ?c))) <=> (VecAdd (VecAdd ?a ?b) (VecMul ?c ?a))
(VecMul (VecAdd ?a ?b) (VecMul ?c ?a)) <=> (VecMul (VecAdd ?a ?b) (VecMul ?a ?c))
(VecMul (VecAdd ?a ?b) (VecMul ?c ?b)) <=> (VecMul (VecAdd ?a ?b) (VecMul ?b ?c))
(VecMul ?a (VecMul ?b (VecAdd ?c ?a))) <=> (VecMul ?a (VecMul ?b (VecAdd ?a ?c)))
(VecMul (VecAdd ?a ?b) (VecAdd ?c ?b)) <=> (VecMul (VecAdd ?a ?b) (VecAdd ?b ?c))
(Vec (VecAdd ?a ?b) (VecAdd ?c ?a)) <=> (Vec (VecAdd ?a ?b) (VecAdd ?a ?c))
(VecAdd (VecMul ?a ?b) (VecMul ?c ?b)) <=> (VecAdd (VecMul ?a ?b) (VecMul ?b ?c))
(VecAdd (VecMul ?a ?b) (VecAdd ?c ?b)) <=> (VecAdd (VecMul ?a ?b) (VecAdd ?b ?c))
(Vec (Vec ?a ?b) (VecAdd ?c ?a)) <=> (Vec (Vec ?a ?b) (VecAdd ?a ?c))
(VecAdd ?a (VecAdd ?b (VecMul ?c ?b))) <=> (VecAdd ?a (VecAdd ?b (VecMul ?b ?c)))
(VecAdd (VecMul ?a ?b) (VecAdd ?c ?a)) <=> (VecAdd (VecMul ?a ?b) (VecAdd ?a ?c))
(VecMul ?a (VecMul ?b (VecAdd ?c ?b))) <=> (VecMul ?a (VecMul ?b (VecAdd ?b ?c)))
(Vec (Vec ?a ?b) (VecMul ?c ?b)) <=> (Vec (Vec ?a ?b) (VecMul ?b ?c))
(Vec (Vec ?a ?b) (VecAdd ?c ?b)) <=> (Vec (Vec ?a ?b) (VecAdd ?b ?c))
(Vec (VecAdd ?a ?b) (VecAdd ?c ?b)) <=> (Vec (VecAdd ?a ?b) (VecAdd ?b ?c))
(Vec (VecMul ?a ?b) (VecMul ?c ?b)) <=> (Vec (VecMul ?a ?b) (VecMul ?b ?c))
(Vec (Vec ?a ?b) (VecMul ?c ?a)) <=> (Vec (Vec ?a ?b) (VecMul ?a ?c))
(Vec (VecMul ?a ?b) (VecMul ?c ?a)) <=> (Vec (VecMul ?a ?b) (VecMul ?a ?c))
(+ (* ?a ?b) (* ?c ?b)) <=> (+ (* ?a ?b) (* ?b ?c))
(Vec (+ ?a ?b) (+ ?c ?b)) <=> (Vec (+ ?a ?b) (+ ?b ?c))
(Vec (+ ?a ?b) (+ ?c ?a)) <=> (Vec (+ ?a ?b) (+ ?a ?c))
(+ (+ ?a ?b) (* ?c ?a)) <=> (+ (+ ?a ?b) (* ?a ?c))
(+ (* ?a ?b) (+ ?c ?b)) <=> (+ (* ?a ?b) (+ ?b ?c))
(+ (* ?a ?b) (+ ?c ?a)) <=> (+ (* ?a ?b) (+ ?a ?c))
(* (+ ?a ?b) (* ?c ?b)) <=> (* (* (+ ?a ?b) ?b) ?c)
(* ?a (* ?b (+ ?c ?a))) <=> (* (* ?a ?b) (+ ?a ?c))
(* (+ ?a ?b) (* ?c ?a)) <=> (* (+ ?a ?b) (* ?a ?c))
(Vec (* ?a ?b) (* ?c ?b)) <=> (Vec (* ?a ?b) (* ?b ?c))
(Vec (* ?a ?b) (* ?c ?a)) <=> (Vec (* ?a ?b) (* ?a ?c))
(* (+ ?a ?b) (+ ?c ?a)) <=> (* (+ ?a ?b) (+ ?a ?c))
(* (+ ?a ?b) (+ ?c ?b)) <=> (* (+ ?a ?b) (+ ?b ?c))
(Vec (Vec ?a ?b) (* ?c ?b)) <=> (Vec (Vec ?a ?b) (* ?b ?c))
(Vec (Vec ?a ?b) (* ?c ?a)) <=> (Vec (Vec ?a ?b) (* ?a ?c))
(Vec (Vec ?a ?b) (+ ?c ?b)) <=> (Vec (Vec ?a ?b) (+ ?b ?c))
(Vec (Vec ?a ?b) (+ ?c ?a)) <=> (Vec (Vec ?a ?b) (+ ?a ?c))
(Vec (* ?a ?b) (+ ?c ?b)) <=> (Vec (* ?a ?b) (+ ?b ?c))
(Vec (* ?a ?b) (+ ?c ?a)) <=> (Vec (* ?a ?b) (+ ?a ?c))
(Vec (VecMul ?a ?b) (VecAdd ?c ?b)) <=> (Vec (VecMul ?a ?b) (VecAdd ?b ?c))
(Vec (VecAdd ?a ?b) (VecMul ?c ?a)) <=> (Vec (VecAdd ?a ?b) (VecMul ?a ?c))
(Vec (VecMul ?a ?b) (VecAdd ?c ?a)) <=> (Vec (VecMul ?a ?b) (VecAdd ?a ?c))
(Vec (VecAdd ?a ?b) (VecMul ?c ?b)) <=> (Vec (VecAdd ?a ?b) (VecMul ?b ?c))
(VecAdd (Vec ?a ?b) (Vec ?b ?c)) <=> (Vec (+ ?a ?b) (+ ?b ?c))
(Vec (+ ?a ?b) (* ?c ?b)) <=> (Vec (+ ?a ?b) (* ?b ?c))
(VecMul (Vec ?a ?b) (Vec ?b ?c)) <=> (Vec (* ?a ?b) (* ?b ?c))
(Vec (+ ?a ?b) (* ?c ?a)) <=> (Vec (+ ?a ?b) (* ?a ?c))
(VecMul (Vec ?a ?b) (Vec 1 ?c)) <=> (Vec ?a (* ?b ?c))
(VecAdd (Vec ?a 0) (Vec ?b ?c)) <=> (Vec (+ ?a ?b) ?c)
(VecAdd (Vec ?a ?b) (Vec 0 ?c)) <=> (Vec ?a (+ ?b ?c))
(VecMul (Vec ?a 1) (Vec ?b ?c)) <=> (Vec (* ?a ?b) ?c)
(* 0 (* (* ?a ?b) ?c)) <=> (* (* 0 ?a) (+ ?b ?c))
(VecAdd (Vec ?a ?b) (Vec 1 ?c)) <=> (Vec (+ 1 ?a) (+ ?b ?c))
(VecMul (Vec ?a ?b) (Vec 0 ?c)) <=> (Vec (* 0 ?a) (* ?b ?c))
(VecAdd (Vec ?a 1) (Vec ?b ?c)) <=> (Vec (+ ?a ?b) (+ 1 ?c))
(VecMul (Vec ?a 0) (Vec ?b ?c)) <=> (Vec (* ?a ?b) (* 0 ?c))
(VecMul ?a (VecNeg ?b)) <=> (VecMul (VecNeg ?a) ?b)
(VecNeg (VecMul ?a ?b)) <=> (VecMul (VecNeg ?a) ?b)
(VecMul ?a ?b) <=> (VecMul (VecNeg ?a) (VecNeg ?b))
(VecNeg (VecAdd ?a ?b)) <=> (VecAdd (VecNeg ?a) (VecNeg ?b))
(VecAdd ?a (VecAdd ?b ?a)) <=> (VecAdd (VecAdd ?a ?a) ?b)
(VecMul ?a (VecMul ?b ?a)) <=> (VecMul ?a (VecMul ?a ?b))
(VecMul ?a (VecAdd ?b ?a)) <=> (VecMul ?a (VecAdd ?a ?b))
(VecAdd ?a (VecMul ?b ?a)) <=> (VecAdd ?a (VecMul ?a ?b))
(Vec ?a (VecMul ?b ?a)) <=> (Vec ?a (VecMul ?a ?b))
(VecAdd ?a (VecMul ?a ?b)) <=> (VecAdd (VecMul ?a ?b) ?a)
(VecMul ?a (VecAdd ?b ?a)) <=> (VecMul (VecAdd ?a ?b) ?a)
(Vec ?a (VecAdd ?b ?a)) <=> (Vec ?a (VecAdd ?a ?b))
(VecAdd (VecNeg ?a) (VecAdd ?a ?b)) <=> (VecAdd (VecAdd ?a ?b) (VecNeg ?a))
(VecAdd ?a (VecAdd ?b (VecNeg ?a))) <=> (VecAdd (VecNeg ?a) (VecAdd ?b ?a))
(Vec (VecNeg ?a) (VecAdd ?b ?a)) <=> (Vec (VecNeg ?a) (VecAdd ?a ?b))
(+ ?a (+ ?b (* ?a ?b))) <=> (+ (+ (* ?a ?b) ?b) ?a)
(VecAdd ?a (VecAdd ?b (VecMul ?a ?b))) <=> (VecAdd (VecAdd (VecMul ?a ?b) ?b) ?a)
(+ ?a ?b) <=> (+ ?a (+ ?b (* 0 ?a)))
(VecMul (Vec ?a ?b) (Vec ?a 1)) <=> (Vec (* ?a ?a) ?b)
(VecAdd (Vec ?a ?b) (Vec ?a 0)) <=> (Vec (+ ?a ?a) ?b)
(Vec (Vec ?a ?b) 0) <=> (Vec (Vec ?a ?b) (* 0 ?b))
(Vec (* ?a ?b) 0) <=> (Vec (* ?a ?b) (* 0 ?a))
(Vec (* ?a ?b) 0) <=> (Vec (* ?a ?b) (* 0 ?b))
(Vec 0 (* ?a ?b)) <=> (Vec (* 0 ?a) (* ?a ?b))
(VecMul (Vec ?a ?b) (Vec 0 0)) <=> (VecMul (Vec 0 ?a) (Vec ?b 0))
(Vec (Vec ?a ?b) 0) <=> (Vec (Vec ?a ?b) (* 0 ?a))
(Vec 0 (Vec ?a ?b)) <=> (Vec (* 0 ?a) (Vec ?a ?b))
(Vec (+ ?a ?b) 0) <=> (Vec (+ ?a ?b) (* 0 ?a))
(* (+ ?a ?b) (+ 1 ?a)) <=> (* (+ 1 ?a) (+ ?a ?b))
(VecMul (Vec 1 ?a) (Vec ?b 1)) <=> (VecAdd (Vec 0 ?a) (Vec ?b 0))
(VecAdd (Vec ?a ?b) (Vec ?a 1)) <=> (Vec (+ ?a ?a) (+ 1 ?b))
(VecAdd ?a (VecNeg ?a)) <=> (VecAdd (VecNeg ?a) ?a)
?a <=> (* ?a 1)
?a <=> (+ 0 ?a)
?a <=> (* 1 ?a)
?a <=> (+ ?a 0)
(* ?a 0) <=> (* 0 ?a)
(+ ?a 1) <=> (+ 1 ?a)
(Vec 0 (Vec 0 ?a)) <=> (Vec (* 0 ?a) (Vec 0 ?a))
(Vec 0 (Vec 1 ?a)) <=> (Vec (* 0 ?a) (Vec 1 ?a))
Learned 110 rules in 18.197596591
#+end_example

variable duplication: true
#+begin_example
Learned 144 rules in 26.543639944
(VecAdd ?a (VecAdd ?b ?c)) <=> (VecAdd (VecAdd ?a ?b) ?c)
(VecMul ?a (VecMul ?b ?c)) <=> (VecMul (VecMul ?a ?b) ?c)
(+ ?a (+ ?b ?c)) <=> (+ (+ ?a ?b) ?c)
(* ?a (* ?b ?c)) <=> (* (* ?a ?b) ?c)
(VecMul ?a (VecMul ?b (VecNeg ?c))) <=> (VecMul (VecNeg ?a) (VecMul ?b ?c))
(+ (* ?a ?b) (* ?a ?c)) <=> (* ?a (+ ?b ?c))
(+ (* ?a ?b) (* ?c ?a)) <=> (* ?a (+ ?b ?c))
(VecMul ?a (VecAdd ?b ?c)) <=> (VecAdd (VecMul ?a ?b) (VecMul ?c ?a))
(VecMul ?a (VecAdd ?b ?c)) <=> (VecAdd (VecMul ?a ?b) (VecMul ?a ?c))
(VecAdd ?a (VecAdd ?b (VecAdd ?c ?a))) <=> (VecAdd ?a (VecAdd ?b (VecAdd ?a ?c)))
(VecMul ?a (VecMul ?b (VecMul ?a ?c))) <=> (VecMul ?a (VecMul ?a (VecMul ?b ?c)))
(VecAdd ?a (VecAdd ?b (VecAdd ?c ?b))) <=> (VecAdd (VecAdd ?a ?b) (VecAdd ?b ?c))
(VecMul ?a (VecMul ?b (VecMul ?c ?a))) <=> (VecMul ?a (VecMul ?a (VecMul ?b ?c)))
(VecMul ?a (VecMul ?b (VecMul ?c ?b))) <=> (VecMul ?a (VecMul (VecMul ?b ?b) ?c))
(VecAdd ?a (VecAdd ?b (VecAdd ?c ?a))) <=> (VecAdd ?a (VecAdd ?a (VecAdd ?b ?c)))
(+ ?a (+ ?b (+ ?c ?a))) <=> (+ ?a (+ (+ ?a ?b) ?c))
(Vec (VecMul ?a ?b) (VecMul ?c ?b)) <=> (Vec (VecMul ?a ?b) (VecMul ?b ?c))
(Vec (Vec ?a ?b) (VecAdd ?c ?a)) <=> (Vec (Vec ?a ?b) (VecAdd ?a ?c))
(Vec (Vec ?a ?b) (VecAdd ?c ?b)) <=> (Vec (Vec ?a ?b) (VecAdd ?b ?c))
(Vec (Vec ?a ?b) (VecMul ?c ?a)) <=> (Vec (Vec ?a ?b) (VecMul ?a ?c))
(Vec (Vec ?a ?b) (VecMul ?c ?b)) <=> (Vec (Vec ?a ?b) (VecMul ?b ?c))
(Vec (VecMul ?a ?b) (VecMul ?c ?a)) <=> (Vec (VecMul ?a ?b) (VecMul ?a ?c))
(Vec (VecAdd ?a ?b) (VecAdd ?c ?a)) <=> (Vec (VecAdd ?a ?b) (VecAdd ?a ?c))
(Vec (VecAdd ?a ?b) (VecAdd ?c ?b)) <=> (Vec (VecAdd ?a ?b) (VecAdd ?b ?c))
(Vec (* ?a ?b) (* ?c ?a)) <=> (Vec (* ?a ?b) (* ?a ?c))
(Vec (* ?a ?b) (* ?c ?b)) <=> (Vec (* ?a ?b) (* ?b ?c))
(Vec (Vec ?a ?b) (* ?c ?a)) <=> (Vec (Vec ?a ?b) (* ?a ?c))
(Vec (+ ?a ?b) (+ ?c ?a)) <=> (Vec (+ ?a ?b) (+ ?a ?c))
(Vec (+ ?a ?b) (+ ?c ?b)) <=> (Vec (+ ?a ?b) (+ ?b ?c))
(Vec (Vec ?a ?b) (+ ?c ?b)) <=> (Vec (Vec ?a ?b) (+ ?b ?c))
(Vec (Vec ?a ?b) (* ?c ?b)) <=> (Vec (Vec ?a ?b) (* ?b ?c))
(Vec (Vec ?a ?b) (+ ?c ?a)) <=> (Vec (Vec ?a ?b) (+ ?a ?c))
(+ (* ?a ?b) (+ ?c ?a)) <=> (+ (* ?a ?b) (+ ?a ?c))
(+ (* ?a ?b) (* ?c ?b)) <=> (+ (* ?a ?b) (* ?b ?c))
(VecAdd (VecMul ?a ?b) (VecAdd ?c ?b)) <=> (VecAdd (VecMul ?a ?b) (VecAdd ?b ?c))
(VecAdd ?a (VecAdd ?b (VecMul ?c ?a))) <=> (VecAdd ?a (VecAdd ?b (VecMul ?a ?c)))
(VecMul ?a (VecMul ?b (VecAdd ?c ?a))) <=> (VecMul ?a (VecMul ?b (VecAdd ?a ?c)))
(VecAdd (VecMul ?a ?b) (VecMul ?c ?b)) <=> (VecAdd (VecMul ?a ?b) (VecMul ?b ?c))
(VecMul (VecAdd ?a ?b) (VecAdd ?c ?a)) <=> (VecMul (VecAdd ?a ?b) (VecAdd ?a ?c))
(VecMul ?a (VecMul ?b (VecAdd ?c ?c))) <=> (VecMul (VecAdd ?a ?a) (VecMul ?b ?c))
(VecMul ?a (VecMul ?b (VecAdd ?c ?b))) <=> (VecMul ?a (VecMul ?b (VecAdd ?b ?c)))
(VecMul (VecAdd ?a ?b) (VecMul ?c ?a)) <=> (VecMul (VecAdd ?a ?b) (VecMul ?a ?c))
(VecAdd (VecMul ?a ?b) (VecAdd ?c ?a)) <=> (VecAdd (VecMul ?a ?b) (VecAdd ?a ?c))
(VecMul (VecAdd ?a ?b) (VecAdd ?c ?b)) <=> (VecMul (VecAdd ?a ?b) (VecAdd ?b ?c))
(VecAdd ?a (VecAdd ?b (VecMul ?c ?b))) <=> (VecAdd ?a (VecAdd ?b (VecMul ?b ?c)))
(VecMul (VecAdd ?a ?b) (VecMul ?c ?b)) <=> (VecMul (VecAdd ?a ?b) (VecMul ?b ?c))
(* (+ ?a ?b) (+ ?c ?a)) <=> (* (+ ?a ?b) (+ ?a ?c))
(* (+ ?a ?b) (+ ?c ?b)) <=> (* (+ ?a ?b) (+ ?b ?c))
(* ?a (* ?b (+ ?c ?a))) <=> (* ?a (* ?b (+ ?a ?c)))
(* (+ ?a ?b) (* ?c ?b)) <=> (* (+ ?a ?b) (* ?b ?c))
(* (+ ?a ?b) (* ?c ?a)) <=> (* (+ ?a ?b) (* ?a ?c))
(+ (* ?a ?b) (+ ?c ?b)) <=> (+ (* ?a ?b) (+ ?b ?c))
(+ ?a (+ ?b (* ?a ?c))) <=> (+ (+ ?a ?b) (* ?c ?a))
(* ?a (* ?b (+ ?c ?c))) <=> (* (+ ?a ?a) (* ?b ?c))
(Vec (VecAdd ?a ?b) (VecMul ?c ?b)) <=> (Vec (VecAdd ?a ?b) (VecMul ?b ?c))
(Vec (VecMul ?a ?b) (VecAdd ?c ?b)) <=> (Vec (VecMul ?a ?b) (VecAdd ?b ?c))
(Vec (VecAdd ?a ?b) (VecMul ?c ?a)) <=> (Vec (VecAdd ?a ?b) (VecMul ?a ?c))
(Vec (VecMul ?a ?b) (VecAdd ?c ?a)) <=> (Vec (VecMul ?a ?b) (VecAdd ?a ?c))
(VecMul (Vec ?a ?a) (Vec ?b ?c)) <=> (Vec (* ?a ?b) (* ?c ?a))
(VecMul (Vec ?a ?b) (Vec ?b ?c)) <=> (Vec (* ?a ?b) (* ?b ?c))
(Vec (+ ?a ?b) (* ?c ?b)) <=> (Vec (+ ?a ?b) (* ?b ?c))
(Vec (+ ?a ?b) (* ?c ?a)) <=> (Vec (+ ?a ?b) (* ?a ?c))
(VecAdd (Vec ?a ?b) (Vec ?a ?c)) <=> (Vec (+ ?a ?a) (+ ?b ?c))
(VecAdd (Vec ?a ?a) (Vec ?b ?c)) <=> (Vec (+ ?a ?b) (+ ?c ?a))
(VecAdd (Vec ?a ?b) (Vec ?b ?c)) <=> (Vec (+ ?a ?b) (+ ?b ?c))
(Vec (* ?a ?b) (+ ?c ?a)) <=> (Vec (* ?a ?b) (+ ?a ?c))
(Vec (* ?a ?b) (+ ?c ?b)) <=> (Vec (* ?a ?b) (+ ?b ?c))
(VecMul (Vec ?a ?b) (Vec ?a ?c)) <=> (Vec (* ?a ?a) (* ?b ?c))
(VecMul (Vec ?a 1) (Vec ?b ?c)) <=> (Vec (* ?a ?b) ?c)
(VecAdd (Vec ?a 0) (Vec ?b ?c)) <=> (Vec (+ ?a ?b) ?c)
(* 0 (+ (+ ?a ?b) ?c)) <=> (* 0 (* ?a (+ ?b ?c)))
(* (* ?a ?b) (* 0 ?c)) <=> (* (* ?a 0) (+ ?b ?c))
(VecMul (Vec ?a 0) (Vec ?b ?c)) <=> (Vec (* ?a ?b) (* 0 ?c))
(VecAdd (Vec ?a ?b) (Vec 1 ?c)) <=> (Vec (+ 1 ?a) (+ ?b ?c))
(VecAdd (Vec ?a 1) (Vec ?b ?c)) <=> (Vec (+ ?a ?b) (+ 1 ?c))
(VecMul (Vec ?a ?b) (Vec 0 ?c)) <=> (Vec (* 0 ?a) (* ?b ?c))
(VecNeg (VecMul ?a ?b)) <=> (VecMul ?a (VecNeg ?b))
(VecMul ?a (VecNeg ?b)) <=> (VecMul (VecNeg ?a) ?b)
(VecMul ?a ?b) <=> (VecMul ?a (VecNeg (VecNeg ?b)))
(VecNeg (VecAdd ?a ?b)) <=> (VecAdd (VecNeg ?a) (VecNeg ?b))
(VecMul ?a (VecMul ?b ?a)) <=> (VecMul ?a (VecMul ?a ?b))
(VecAdd ?a (VecAdd ?b ?a)) <=> (VecAdd ?a (VecAdd ?a ?b))
(Vec ?a (VecMul ?b ?a)) <=> (Vec ?a (VecMul ?a ?b))
(Vec ?a (VecAdd ?b ?a)) <=> (Vec ?a (VecAdd ?a ?b))
(VecMul ?a (VecAdd ?b ?a)) <=> (VecMul ?a (VecAdd ?a ?b))
(VecMul ?a (VecAdd ?b ?b)) <=> (VecMul (VecAdd ?a ?a) ?b)
(VecMul ?a (VecAdd ?b ?a)) <=> (VecMul (VecAdd ?a ?b) ?a)
(VecAdd ?a (VecMul ?b ?a)) <=> (VecAdd ?a (VecMul ?a ?b))
(VecAdd ?a (VecMul ?b ?a)) <=> (VecAdd (VecMul ?a ?b) ?a)
(VecAdd (VecNeg ?a) (VecAdd ?a ?b)) <=> (VecAdd (VecAdd ?a ?b) (VecNeg ?a))
(VecAdd ?a (VecAdd ?b (VecNeg ?a))) <=> (VecAdd (VecNeg ?a) (VecAdd ?b ?a))
(Vec (VecNeg ?a) (VecMul ?b ?a)) <=> (Vec (VecNeg ?a) (VecMul ?a ?b))
(Vec (VecNeg ?a) (VecAdd ?b ?a)) <=> (Vec (VecNeg ?a) (VecAdd ?a ?b))
(VecAdd (VecNeg ?a) (VecMul ?b ?a)) <=> (VecAdd (VecNeg ?a) (VecMul ?a ?b))
(VecAdd (VecNeg ?a) (VecMul ?b ?a)) <=> (VecAdd (VecMul ?a ?b) (VecNeg ?a))
(VecMul (VecAdd ?a ?b) ?b) <=> (VecAdd (VecMul ?a ?b) (VecMul ?b ?b))
(+ (* ?a ?b) (* ?b ?b)) <=> (* (+ ?a ?b) ?b)
(+ ?a (+ ?b (* ?a ?a))) <=> (+ (* ?a ?a) (+ ?b ?a))
(VecAdd ?a (VecAdd ?b (VecMul ?a ?a))) <=> (VecAdd (VecMul ?a ?a) (VecAdd ?b ?a))
(VecMul (Vec ?a ?b) (Vec ?b ?a)) <=> (VecMul (Vec ?a ?a) (Vec ?b ?b))
(VecAdd (Vec ?a ?b) (Vec ?b ?a)) <=> (VecAdd (Vec ?a ?a) (Vec ?b ?b))
(VecAdd (Vec ?a ?b) (Vec ?a ?a)) <=> (VecAdd (Vec ?a ?a) (Vec ?a ?b))
(VecMul (Vec ?a ?b) (Vec ?a ?a)) <=> (VecMul (Vec ?a ?a) (Vec ?a ?b))
(VecAdd (Vec ?a 0) (Vec 0 ?b)) <=> (Vec ?a ?b)
(VecMul (Vec ?a 1) (Vec 1 ?b)) <=> (Vec ?a ?b)
(Vec (Vec ?a ?b) 0) <=> (Vec (Vec ?a ?b) (* 0 ?a))
(Vec 0 (Vec ?a ?b)) <=> (Vec (* 0 ?a) (Vec ?a ?b))
(Vec (Vec ?a ?b) 0) <=> (Vec (Vec ?a ?b) (* 0 ?b))
(Vec (+ ?a ?b) 0) <=> (Vec (+ ?a ?b) (* 0 ?a))
(VecMul (Vec ?a 0) (Vec ?b ?b)) <=> (VecMul (Vec ?a 0) (Vec ?b ?a))
(VecMul (Vec ?a ?a) (Vec ?b 0)) <=> (VecMul (Vec ?a 0) (Vec ?b 0))
(VecMul (Vec ?a ?b) (Vec ?b 0)) <=> (VecMul (Vec ?a 0) (Vec ?b ?a))
(VecMul (Vec ?a 0) (Vec ?b ?a)) <=> (VecMul (Vec ?a 0) (Vec ?b 0))
(VecAdd (Vec ?a ?a) (Vec ?b 0)) <=> (VecAdd (Vec ?a 0) (Vec ?b ?a))
(VecAdd (Vec ?a ?b) (Vec 0 ?a)) <=> (VecAdd (Vec 0 ?a) (Vec ?a ?b))
(VecAdd (Vec ?a ?a) (Vec 0 ?b)) <=> (VecAdd (Vec 0 ?a) (Vec ?a ?b))
(VecMul (Vec ?a ?b) (Vec 0 ?a)) <=> (VecMul (Vec 0 ?a) (Vec 0 ?b))
(VecMul (Vec ?a ?a) (Vec 0 ?b)) <=> (VecMul (Vec 0 ?a) (Vec 0 ?b))
(VecMul (Vec 0 ?a) (Vec ?a ?b)) <=> (VecMul (Vec 0 ?a) (Vec 0 ?b))
(VecMul (Vec 0 ?a) (Vec ?b ?b)) <=> (VecMul (Vec 0 ?a) (Vec 0 ?b))
(VecAdd (Vec ?a ?a) (Vec 1 ?b)) <=> (VecAdd (Vec 1 ?a) (Vec ?a ?b))
(VecAdd (Vec ?a ?b) (Vec 1 ?a)) <=> (VecAdd (Vec 1 ?a) (Vec ?a ?b))
(VecMul (Vec ?a 0) (Vec 0 ?b)) <=> (VecMul (Vec 0 ?a) (Vec ?b 0))
(VecMul (Vec ?a ?b) (Vec 1 ?a)) <=> (VecMul (Vec 1 ?a) (Vec ?a ?b))
(VecAdd (Vec ?a ?b) (Vec ?b 1)) <=> (VecAdd (Vec ?a 1) (Vec ?b ?b))
(VecMul (Vec ?a ?b) (Vec ?b 1)) <=> (VecMul (Vec ?a 1) (Vec ?b ?b))
(VecAdd (Vec ?a ?a) (Vec ?b 1)) <=> (VecAdd (Vec ?a 1) (Vec ?b ?a))
(VecMul (Vec ?a ?a) (Vec ?b 1)) <=> (VecMul (Vec ?a 1) (Vec ?b ?a))
(VecMul (Vec 1 ?a) (Vec ?b 1)) <=> (VecAdd (Vec 0 ?a) (Vec ?b 0))
(VecMul (Vec 1 ?a) (Vec 0 ?b)) <=> (VecMul (Vec 0 ?a) (Vec 0 ?b))
(VecMul (Vec ?a 1) (Vec ?b 0)) <=> (VecMul (Vec ?a 0) (Vec ?b 0))
(VecMul (Vec ?a 0) (Vec ?b 1)) <=> (VecMul (Vec ?a 0) (Vec ?b 0))
(VecMul (Vec 0 ?a) (Vec 1 ?b)) <=> (VecMul (Vec 0 ?a) (Vec 0 ?b))
(VecAdd (Vec ?a 1) (Vec ?b 0)) <=> (VecAdd (Vec ?a 0) (Vec ?b 1))
(VecAdd ?a (VecNeg ?a)) <=> (VecAdd (VecNeg ?a) ?a)
(VecNeg (VecNeg ?a)) <=> (VecAdd ?a (VecAdd ?a (VecNeg ?a)))
?a <=> (* 1 ?a)
?a <=> (+ ?a 0)
?a <=> (* ?a 1)
?a <=> (+ 0 ?a)
(* ?a 0) <=> (* 0 ?a)
(+ ?a 1) <=> (+ 1 ?a)
(Vec 0 (Vec 0 ?a)) <=> (Vec (* 0 ?a) (Vec 0 ?a))
(Vec 0 (Vec 1 ?a)) <=> (Vec (* 0 ?a) (Vec 1 ?a))
Learned 144 rules in 26.543639944
#+end_example

* Scalability Assessment

I want to run a pretty simple ablation that varies =variable_duplication= + one other factor.

** Ablate by number of binops
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

*** Generate Configs

Generate configs with different =variable_duplication= and =ops= and =vec_ops= increasing from =["\+"]= to
=["+", "-", "*", "/"]=.

#+begin_src python :results silent
import json
import os 
from pathlib import Path

ops = ["+", "-", "*", "/"]

for vd in [True, False]:
    for n in range(len(ops)):
        config = {
            "constants": [],
            "seed_rules": [],
            "binops": ops[:n+1],
            "use_vector": True,
            "vector_binops": ops[:n+1],
            "vector_mac": True,
            "variable_duplication": vd
        }
        p = Path("variable_dup_abl_n_ops")
        p.mkdir(exist_ok=True)
        with (p / f"{n+1}-vd-{vd}.json").open("w") as f:
            json.dump(config, f, indent=4)
#+end_src

*** Ruler ablation script

#+begin_src shell :tangle "../ruler/config-ablation.sh"
#!/usr/bin/env bash

function run() {
    echo "Starting $1"
    RUST_LOG=info cargo run --manifest-path ruler/Cargo.toml \
	    --release --bin \
	    dios -- synth \
	    --dios-config "variable_dup_abl_n_ops/$1.json" \
	    --variables 4 \
	    --iters 2 \
	    --vector-size 2 \
	    --eqsat-iter-limit 3 \
	    --eqsat-time-limit 120 \
	    --num-fuzz 6 \
	    --abs-timeout 6000 \
	    --outfile "variable_dup_abl_n_ops/rules-$1.json" \
	    >"variable_dup_abl_n_ops/$1.out" \
	    2>"variable_dup_abl_n_ops/$1.err" || true
    echo "Finished $1"
    sleep 5
}

rm variable_dup_abl_n_ops/rules-*.json

run "1-vd-False" || true
run "1-vd-True" || true
run "2-vd-False" || true
run "2-vd-True" || true
run "3-vd-False" || true
run "3-vd-True" || true
run "4-vd-False" || true
run "4-vd-True" || true
#+end_src

*** Run the experiment

#+begin_src emacs-lisp :dir (magit-toplevel)
(let* ((addr "3.21.40.48"))
  ;; sync files
  (shell-command-to-string
   (format "./sync.sh %s" addr))
  ;; start remote tmux session
  (shell-command-to-string
   (format "ssh ubuntu@%s \"tmux new -d -s abl\""
	   addr))
  ;; start the script
  (shell-command-to-string
   (format "ssh ubuntu@%s \"tmux send -t abl '%s' ENTER\""
	   addr
	   "cd ~/diospyros && chmod +x ./ruler/config-ablation.sh && ./ruler/config-ablation.sh")))
#+end_src

#+RESULTS:

#+begin_src async-shell :dir (magit-toplevel)
rm variable_dup_abl_n_ops/rules-*.json
rsync -rvp ubuntu@3.21.40.48:~/diospyros/variable_dup_abl_n_ops .
#+end_src

#+RESULTS:
: #<window 548 on *Async Shell Command*>

3-true ran out of memory on machine with 512 gb ram (only 500 show up on htop)

*** Debugging n_ops=4

#+begin_src async-shell :dir (magit-toplevel)
RUST_LOG=info RUST_BACKTRACE=1 \
	cargo run --manifest-path ruler/Cargo.toml \
	--release --bin \
	dios -- synth \
	--dios-config "variable_dup_abl_n_ops/4-vd-True.json" \
	--variables 4 \
	--iters 2 \
	--vector-size 2 \
	--eqsat-iter-limit 3 \
	--eqsat-time-limit 30 \
	--num-fuzz 10 \
	--abs-timeout 60 \
	--outfile "variable_dup_abl_n_ops/4-vd-True.json"
#+end_src

#+RESULTS:
: #<window 473 on *Async Shell Command*>

I think the problem was in =vecs_eq= where I was being too permissive with letting things through.

*** Make a pretty plot

First we gotta make a table of the data. Let's do that in python.

#+begin_src python :dir (magit-toplevel) :results value :colnames '("n-ops" "var-dup" "time")
import json
from pathlib import Path

exp = Path("variable_dup_abl_n_ops/")
# print(exp.glob("rules-*"))
table = []
for p in exp.glob("rules-*"):
    data = json.load(p.open("r"))
    name = data["params"]["dios_config"].split("/")[1].split(".")[0]
    n_ops = int(name.split("-")[0])
    vd = name.split("-")[2]
    table.append([n_ops, vd, data["time"]])

# manual values
table.append([3, "True", 0.0]) # ran out of memory

return table
#+end_src

#+name: n_ops_var_dup
#+RESULTS:
| n-ops | var-dup |               time |
|-------+---------+--------------------|
|     2 | True    |        9.644385274 |
|     4 | False   |      299.545796437 |
|     1 | False   |        0.712207227 |
|     2 | False   | 3.0734577180000002 |
|     3 | False   |        5.052720378 |
|     1 | True    |        1.924957563 |

#+header: :var data=n_ops_var_dup
#+header: :file variable_dup_abl_n_ops/n_ops.png
#+begin_src R :session *n_ops* :colnames yes :results graphics file 
library(tidyverse)

data %>%
  ggplot(aes(x = n.ops, y = time, group = var.dup, color = var.dup)) +
  geom_line() +
  geom_point()
#+end_src

#+RESULTS:
[[file:../variable_dup_abl_n_ops/n_ops.png]]

** Ablate by number of binops (shorter eqsat phase)
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

*** Generate Configs

Generate configs with different =variable_duplication= and =ops= and =vec_ops= increasing from =["\+"]= to
=["+", "-", "*", "/"]=.

#+begin_src python :results silent
import json
import os 
from pathlib import Path

ops = ["+", "-", "*", "/"]

for vd in [True, False]:
    for n in range(len(ops)):
        config = {
            "constants": [],
            "seed_rules": [],
            "binops": ops[:n+1],
            "use_vector": True,
            "vector_binops": ops[:n+1],
            "vector_mac": True,
            "variable_duplication": vd
        }
        p = Path("experiments/vd_dup_abl_n_ops_short_eqsat")
        p.mkdir(exist_ok=True)
        with (p / f"{n+1}-vd-{vd}.json").open("w") as f:
            json.dump(config, f, indent=4)
#+end_src

*** Ruler ablation script

#+header: :shebang #!/usr/bin/env bash
#+begin_src shell :tangle "vd_dup_abl_n_ops_short_eqsat/ablation.sh" :mkdirp yes
function run() {
    echo "Starting $1"
    RUST_LOG=info cargo run --manifest-path ruler/Cargo.toml \
	    --release --bin \
	    dios -- synth \
	    --dios-config "experiments/vd_dup_abl_n_ops_short_eqsat/$1.json" \
	    --variables 4 \
	    --iters 2 \
	    --vector-size 2 \
	    --eqsat-iter-limit 2 \
	    --eqsat-time-limit 30 \
	    --num-fuzz 6 \
	    --abs-timeout 60000 \
	    --outfile "experiments/vd_dup_abl_n_ops_short_eqsat/rules-$1.json" \
	    >"experiments/vd_dup_abl_n_ops_short_eqsat/$1.out" \
	    2>"experiments/vd_dup_abl_n_ops_short_eqsat/$1.err" || true
    echo "Finished $1"
    sleep 5
}

rm -f experiments/vd_dup_abl_n_ops_short_eqsat/rules-*.json

run "1-vd-False" || true
run "2-vd-False" || true
run "3-vd-False" || true
run "4-vd-False" || true
run "1-vd-True" || true
run "2-vd-True" || true
run "3-vd-True" || true
run "4-vd-True" || true
#+end_src

*** Run the experiment

#+begin_src emacs-lisp :dir (magit-toplevel)
(let* ((addr "3.12.85.30"))
  ;; sync files
  (shell-command-to-string
   (format "./sync.sh %s" addr))
  ;; start remote tmux session
  (shell-command-to-string
   (format "ssh ubuntu@%s \"tmux new -d -s abl\""
	   addr))
  ;; start the script
  (shell-command-to-string
   (format "ssh ubuntu@%s \"tmux send -t abl '%s' ENTER\""
	   addr
	   "cd ~/diospyros && ./experiments/vd_dup_abl_n_ops_short_eqsat/ablation.sh")))
#+end_src

#+RESULTS:

#+begin_src async-shell :dir (magit-toplevel)
# rm experiments/vd_dup_abl_n_ops_short_eqsat/rules-*.json
rsync -rvp ubuntu@3.12.85.30:~/diospyros/experiments/vd_dup_abl_n_ops_short_eqsat \
      ./experiments
#+end_src

#+RESULTS:
: #<window 17 on *Async Shell Command*>

*** Make a pretty plot

First we gotta make a table of the data. Let's do that in python.

#+begin_src python :dir (magit-toplevel) :results value :colnames '("n-ops" "var-dup" "time")
import json
from pathlib import Path

exp = Path("experiments/vd_dup_abl_n_ops_short_eqsat")
# print(exp.glob("rules-*"))
table = []
for p in exp.glob("rules-*"):
    data = json.load(p.open("r"))
    name = data["params"]["dios_config"].split("/")[2].split(".")[0]
    n_ops = int(name.split("-")[0])
    vd = name.split("-")[2]
    table.append([n_ops, vd, data["time"]])

return table
#+end_src

#+name: n_ops_var_dup_short
#+RESULTS:
| n-ops | var-dup |         time |
|-------+---------+--------------|
|     3 | False   |  5.306232725 |
|     1 | True    |  2.067974486 |
|     2 | True    | 11.463658914 |
|     3 | True    | 49.021542695 |
|     1 | False   |  0.723772171 |
|     2 | False   |  3.315880664 |

#+header: :var data=n_ops_var_dup_short
#+header: :file experiments/vd_dup_abl_n_ops_short_eqsat/n_ops.png
#+begin_src R :session *n_ops_short* :colnames yes :results graphics file 
library(tidyverse)

data %>%
  ggplot(aes(x = n.ops, y = time, group = var.dup, color = var.dup)) +
  geom_line() +
  geom_point()
#+end_src

#+RESULTS:
[[file:vd_dup_abl_n_ops_short_eqsat/n_ops.png]]

** Ablate by vector size (n_ops=2, short)
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

I'll use just two ops first to make things faster.

*** Generate Configs

Generate configs that vary =variable_duplication= and vector size. The operations use the ops =["+", "*"]=.

#+begin_src python :dir (magit-toplevel) :results silent
import json
import os 
from pathlib import Path

ops = ["+", "*"]

for vd in [True, False]:
    config = {
        "constants": [],
        "seed_rules": [],
        "binops": ops,
        "use_vector": True,
        "vector_binops": ops,
        "vector_mac": True,
        "variable_duplication": vd
    }
    p = Path("experiments/vd_abl_n_op2_vec_size_short")
    p.mkdir(exist_ok=True)
    with (p / f"vd-{vd}.json").open("w") as f:
        json.dump(config, f, indent=4)
#+end_src

*** Ablation script

#+header: :shebang #!/usr/bin/env bash
#+begin_src shell :tangle "../experiments/vd_abl_n_op2_vec_size_short/ablation.sh" :mkdirp yes
function run() {
    echo "Starting vec-$2-vd-$1"
    RUST_LOG=info cargo run --manifest-path ruler/Cargo.toml \
	    --release --bin \
	    dios -- synth \
	    --dios-config "experiments/vd_abl_n_op2_vec_size_short/vd-$1.json" \
	    --variables $((2*$2)) \
	    --iters 2 \
	    --vector-size $2 \
	    --eqsat-iter-limit 2 \
	    --eqsat-time-limit 30 \
	    --num-fuzz 10 \
	    --abs-timeout 60000 \
	    --outfile "experiments/vd_abl_n_op2_vec_size_short/rules-vec-$2-$1.json" \
	    >"experiments/vd_abl_n_op2_vec_size_short/vec-$2-vd-$1.out" \
	    2>"experiments/vd_abl_n_op2_vec_size_short/vec-$2-vd-$1.err" || true
    echo "Finished vec-$2-vd-$1"
    sleep 1
}

rm experiments/vd_abl_n_op2_vec_size_short/rules-*.json

run False 2 || true
run False 3 || true
run False 4 || true
run False 8 || true
run True 2 || true
run True 3 || true
run True 4 || true
run True 8 || true
#+end_src

*** Run experiment

#+begin_src emacs-lisp :dir (magit-toplevel)
(let* ((addr "3.12.85.30"))
  ;; sync files
  (shell-command-to-string
   (format "./sync.sh %s" addr))
  ;; start remote tmux session
  (shell-command-to-string
   (format "ssh ubuntu@%s \"tmux new -d -s vec-abl\""
	   addr))
  ;; start the script
  (shell-command-to-string
   (format "ssh ubuntu@%s \"tmux send -t vec-abl '%s' ENTER\""
	   addr
	   "cd ~/diospyros && ./experiments/vd_abl_n_op2_vec_size_short/ablation.sh")))
#+end_src

#+RESULTS:

#+begin_src async-shell :dir (magit-toplevel)
# rm -f experiments/vd_abl_n_op2_vec_size_short/rules-*.json
rsync -rvp ubuntu@3.12.85.30:~/diospyros/experiments/vd_abl_n_op2_vec_size_short \
      experiments/
#+end_src

#+RESULTS:
: #<window 935 on *Async Shell Command*>

*** Make a pretty plot

First we gotta make a table of the data. Let's do that in python.

#+begin_src python :dir (magit-toplevel) :results value :colnames '("vec-size" "var-dup" "time")
import json
from pathlib import Path

exp = Path("experiments/vd_abl_n_op2_vec_size_short")
table = []
for p in exp.glob("rules-*"):
    data = json.load(p.open("r"))
    name = data["params"]["dios_config"].split("/")[2].split(".")[0]
    n_vec = data["params"]["vector_size"]
    vd = name.split("-")[1]
    table.append([n_vec, vd, data["time"]])

return table
#+end_src

#+name: n_vec_var_dup_short
#+RESULTS:
| vec-size | var-dup |            time |
|----------+---------+-----------------|
|        2 | True    |     4.577382064 |
|        2 | False   |     2.672174319 |
|        3 | False   |   591.774395683 |
|        4 | False   | 70211.169333964 |

#+header: :var data=n_vec_var_dup_short
#+header: :file experiments/vd_abl_n_op2_vec_size_short/n_vec.png
#+begin_src R :session *n_vec* :colnames yes :results graphics file 
library(tidyverse)

data %>%
  ggplot(aes(x = vec.size, y = time, group = var.dup, color = var.dup)) +
  geom_line() +
  geom_point()
#+end_src

#+RESULTS:
[[file:vd_abl_n_op2_vec_size_short/n_vec.png]]

** Ablate by vector size (n_ops=2)
:PROPERTIES:
:header-args: :dir (magit-toplevel)
:END:

I'll use just two ops first to make things faster.

*** Generate Configs

Generate configs that vary =variable_duplication= and vector size. The operations use the ops =["+", "*"]=.

#+begin_src python :dir (magit-toplevel) :results silent
import json
import os 
from pathlib import Path

ops = ["+", "*"]

for vd in [True, False]:
    config = {
        "constants": [],
        "seed_rules": [],
        "binops": ops,
        "use_vector": True,
        "vector_binops": ops,
        "vector_mac": True,
        "variable_duplication": vd
    }
    p = Path("vd_abl_n_op2_vec_size")
    p.mkdir(exist_ok=True)
    with (p / f"vd-{vd}.json").open("w") as f:
        json.dump(config, f, indent=4)
#+end_src

*** Ablation script

#+begin_src shell :tangle "../vd_abl_n_op2_vec_size/ablation.sh" :mkdirp t
#!/usr/bin/env bash

function run() {
    echo "Starting vec-$2-vd-$1"
    RUST_LOG=info cargo run --manifest-path ruler/Cargo.toml \
	    --release --bin \
	    dios -- synth \
	    --dios-config "vd_abl_n_op2_vec_size/vd-$1.json" \
	    --variables $((2*$2)) \
	    --iters 2 \
	    --vector-size $2 \
	    --eqsat-iter-limit 3 \
	    --eqsat-time-limit 120 \
	    --num-fuzz 10 \
	    --abs-timeout 60000 \
	    --outfile "vd_abl_n_op2_vec_size/rules-vec-$2-$1.json" \
	    >"vd_abl_n_op2_vec_size/vec-$2-vd-$1.out" \
	    2>"vd_abl_n_op2_vec_size/vec-$2-vd-$1.err" || true
    echo "Finished vec-$2-vd-$1"
    sleep 5
}

rm vd_abl_n_op2_vec_size/rules-*.json

# run False 2 || true
# run True 2 || true
# run False 3 || true
run True 3 || true
run False 4 || true
run True 4 || true
run False 8 || true
run True 8 || true
#+end_src

*** Run experiment

#+begin_src emacs-lisp :dir (magit-toplevel)
(let* ((addr "3.21.40.48"))
  ;; sync files
  (shell-command-to-string
   (format "./sync.sh %s" addr))
  ;; start remote tmux session
  (shell-command-to-string
   (format "ssh ubuntu@%s \"tmux new -d -s vec-abl\""
	   addr))
  ;; start the script
  (shell-command-to-string
   (format "ssh ubuntu@%s \"tmux send -t vec-abl '%s' ENTER\""
	   addr
	   "cd ~/diospyros && ./vd_abl_n_op2_vec_size/ablation.sh")))
#+end_src

#+RESULTS:

#+begin_src async-shell :dir (magit-toplevel)
rm -f vd_abl_n_op2_vec_size/rules-*.json
rsync -rvp ubuntu@3.21.40.48:~/diospyros/vd_abl_n_op2_vec_size .
#+end_src

*** Make a pretty plot

First we gotta make a table of the data. Let's do that in python.

#+begin_src python :dir (magit-toplevel) :results value :colnames '("vec-size" "var-dup" "time")
import json
from pathlib import Path

exp = Path("vd_abl_n_op2_vec_size")
table = []
for p in exp.glob("rules-*"):
    data = json.load(p.open("r"))
    name = data["params"]["dios_config"].split("/")[1].split(".")[0]
    n_vec = data["params"]["vector_size"]
    vd = name.split("-")[1]
    table.append([n_vec, vd, data["time"]])

return table
#+end_src

#+name: n_vec_var_dup
#+RESULTS:
| vec-size | var-dup |            time |
|----------+---------+-----------------|
|        4 | True    | 60461.980421054 |
|        4 | False   | 65077.826254017 |

** Ablate by vector size (n_ops=4)
* Testing dios

#+begin_src async-shell :dir (magit-toplevel)
cargo run --release --manifest-path src/dios-egraphs/Cargo.toml \
      -- q-prod-out/spec.rkt \
      --vector-width 2 \
      --rules vec/test2.json \
      --split-phase auto
#+end_src

#+RESULTS:
: #<window 229 on *Async Shell Command*>



Running egg with timeout 360s, width: 2
Input prog:
(Concat
  (Vec
    (+
      (+
        (* (Get aq 3) (Get bq 0))
        (+ (* (Get aq 0) (Get bq 3)) (* (Get aq 1) (Get bq 2))))
      (neg (* (Get aq 2) (Get bq 1))))
    (+
      (+
        (* (Get aq 3) (Get bq 1))
        (+ (* (Get aq 1) (Get bq 3)) (* (Get aq 2) (Get bq 0))))
      (neg (* (Get aq 0) (Get bq 2)))))
  (Concat
    (Vec
      (+
        (+
          (* (Get aq 3) (Get bq 2))
          (+ (* (Get aq 2) (Get bq 3)) (* (Get aq 0) (Get bq 1))))
        (neg (* (Get aq 1) (Get bq 0))))
      (+
        (* (Get aq 3) (Get bq 3))
        (+
          (neg (* (Get aq 0) (Get bq 0)))
          (+ (neg (* (Get aq 1) (Get bq 1))) (neg (* (Get aq 2) (Get bq 2)))))))
    (Concat
      (Vec
        (+
          (Get at 0)
          (+
            (Get bt 0)
            (+
              (+
                (*
                  (Get aq 1)
                  (* 2 (+ (* (Get aq 0) (Get bt 1)) (neg (* (Get aq 1) (Get bt 0))))))
                (neg
                  (*
                    (Get aq 2)
                    (* 2 (+ (* (Get aq 2) (Get bt 0)) (neg (* (Get aq 0) (Get bt 2))))))))
              (*
                (Get aq 3)
                (* 2 (+ (* (Get aq 1) (Get bt 2)) (neg (* (Get aq 2) (Get bt 1)))))))))
        (+
          (Get at 1)
          (+
            (Get bt 1)
            (+
              (+
                (*
                  (Get aq 2)
                  (* 2 (+ (* (Get aq 1) (Get bt 2)) (neg (* (Get aq 2) (Get bt 1))))))
                (neg
                  (*
                    (Get aq 0)
                    (* 2 (+ (* (Get aq 0) (Get bt 1)) (neg (* (Get aq 1) (Get bt 0))))))))
              (*
                (Get aq 3)
                (* 2 (+ (* (Get aq 2) (Get bt 0)) (neg (* (Get aq 0) (Get bt 2))))))))))
      (Vec
        (+
          (Get at 2)
          (+
            (Get bt 2)
            (+
              (+
                (*
                  (Get aq 0)
                  (* 2 (+ (* (Get aq 2) (Get bt 0)) (neg (* (Get aq 0) (Get bt 2))))))
                (neg
                  (*
                    (Get aq 1)
                    (* 2 (+ (* (Get aq 1) (Get bt 2)) (neg (* (Get aq 2) (Get bt 1))))))))
              (*
                (Get aq 3)
                (* 2 (+ (* (Get aq 0) (Get bt 1)) (neg (* (Get aq 1) (Get bt 0)))))))))
        0))))
Retained 4612 rules
Vec([363, 364])
Vec([363, 364])
Vec([208, 285])
Vec([208, 285])
Vec([96, 130])
Vec([96, 130])
Vec([31, 63])
Vec([31, 63])
p: (Vec
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x))))))))
  0)
p: (Vec
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x))))))))
  0)
p: (Vec
  (+
    ?v4
    (+
      ?z
      (+
        (+
          (* ?v1 (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))
          (neg (* ?w (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))
        (* ?v0 (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2))))))))
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))))
p: (Vec
  (+
    ?v4
    (+
      ?z
      (+
        (+
          (* ?v1 (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))
          (neg (* ?w (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))
        (* ?v0 (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2))))))))
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))))
p: (Vec
  (+ (+ (* ?v3 ?x) (+ (* ?y ?v2) (* ?v1 ?z))) (neg (* ?w ?v0)))
  (+ (* ?v3 ?v2) (+ (neg (* ?v1 ?v0)) (+ (neg (* ?w ?z)) (neg (* ?y ?x))))))
p: (Vec
  (+ (+ (* ?v3 ?x) (+ (* ?y ?v2) (* ?v1 ?z))) (neg (* ?w ?v0)))
  (+ (* ?v3 ?v2) (+ (neg (* ?v1 ?v0)) (+ (neg (* ?w ?z)) (neg (* ?y ?x))))))
p: (Vec
  (+ (+ (* ?v3 ?z) (+ (* ?y ?v0) (* ?v1 ?x))) (neg (* ?w ?v2)))
  (+ (+ (* ?v3 ?v2) (+ (* ?v1 ?v0) (* ?w ?z))) (neg (* ?y ?x))))
p: (Vec
  (+ (+ (* ?v3 ?z) (+ (* ?y ?v0) (* ?v1 ?x))) (neg (* ?w ?v2)))
  (+ (+ (* ?v3 ?v2) (+ (* ?v1 ?v0) (* ?w ?z))) (neg (* ?y ?x))))
start:
(Vec
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x))))))))
  0)
searching from the root: [20.04]
(VecAdd
  (Vec ?v3 0)
  (VecAdd
    (Vec ?v2 0)
    (VecMAC
      (VecMAC
        (VecNeg
          (VecMul
            (Vec ?y 1)
            (VecMul
              (Vec 2 1)
              (VecMAC (VecNeg (VecMul (Vec ?z ?z) (Vec ?v1 0))) (Vec ?v2 0) (Vec ?y 1)))))
        (Vec ?w 1)
        (VecMul
          (Vec 2 1)
          (VecMAC (VecNeg (VecMul (Vec ?v2 0) (Vec ?w 1))) (Vec ?x ?x) (Vec ?v1 0))))
      (Vec ?v0 1)
      (VecMul
        (Vec 2 1)
        (VecMAC (VecNeg (VecMul (Vec ?y 1) (Vec ?x 0))) (Vec ?w 1) (Vec ?z 0))))))
start:
(Vec
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x))))))))
  0)
searching from the root: [20.04]
(VecAdd
  (Vec ?v3 0)
  (VecAdd
    (Vec ?v2 0)
    (VecMAC
      (VecMAC
        (VecNeg
          (VecMul
            (Vec ?y 1)
            (VecMul
              (Vec 2 1)
              (VecMAC (VecNeg (VecMul (Vec ?z ?z) (Vec ?v1 0))) (Vec ?v2 0) (Vec ?y 1)))))
        (Vec ?w 1)
        (VecMul
          (Vec 2 1)
          (VecMAC (VecNeg (VecMul (Vec ?v2 0) (Vec ?w 1))) (Vec ?x ?x) (Vec ?v1 0))))
      (Vec ?v0 1)
      (VecMul
        (Vec 2 1)
        (VecMAC (VecNeg (VecMul (Vec ?y 1) (Vec ?x 0))) (Vec ?w 1) (Vec ?z 0))))))
start:
(Vec
  (+
    ?v4
    (+
      ?z
      (+
        (+
          (* ?v1 (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))
          (neg (* ?w (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))
        (* ?v0 (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2))))))))
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))))
searching from the root: [24.040000000000006]
(VecAdd
  (Vec ?v4 ?v3)
  (VecAdd
    (Vec ?z ?v2)
    (VecMAC
      (VecAdd
        (VecMul
          (Vec ?v1 ?w)
          (VecMul
            (Vec 2 2)
            (VecAdd
              (VecMul (Vec ?y ?v1) (Vec ?v2 ?x))
              (VecNeg (VecMul (Vec ?v1 ?w) (Vec ?z ?v2))))))
        (VecNeg
          (VecMul
            (Vec ?w ?y)
            (VecMul
              (Vec 2 2)
              (VecAdd
                (VecMul (Vec ?w ?y) (Vec ?z ?v2))
                (VecNeg (VecMul (Vec ?y ?v1) (Vec ?x ?z))))))))
      (Vec ?v0 ?v0)
      (VecMul
        (Vec 2 2)
        (VecAdd
          (VecMul (Vec ?v1 ?w) (Vec ?x ?z))
          (VecNeg (VecMul (Vec ?w ?y) (Vec ?v2 ?x))))))))
start:
(Vec
  (+
    ?v4
    (+
      ?z
      (+
        (+
          (* ?v1 (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))
          (neg (* ?w (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))
        (* ?v0 (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2))))))))
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))))
searching from the root: [24.040000000000006]
(VecAdd
  (Vec ?v4 ?v3)
  (VecAdd
    (Vec ?z ?v2)
    (VecMAC
      (VecAdd
        (VecMul
          (Vec ?v1 ?w)
          (VecMul
            (Vec 2 2)
            (VecAdd
              (VecMul (Vec ?y ?v1) (Vec ?v2 ?x))
              (VecNeg (VecMul (Vec ?v1 ?w) (Vec ?z ?v2))))))
        (VecNeg
          (VecMul
            (Vec ?w ?y)
            (VecMul
              (Vec 2 2)
              (VecAdd
                (VecMul (Vec ?w ?y) (Vec ?z ?v2))
                (VecNeg (VecMul (Vec ?y ?v1) (Vec ?x ?z))))))))
      (Vec ?v0 ?v0)
      (VecMul
        (Vec 2 2)
        (VecAdd
          (VecMul (Vec ?v1 ?w) (Vec ?x ?z))
          (VecNeg (VecMul (Vec ?w ?y) (Vec ?v2 ?x))))))))
start:
(Vec
  (+ (+ (* ?v3 ?x) (+ (* ?y ?v2) (* ?v1 ?z))) (neg (* ?w ?v0)))
  (+ (* ?v3 ?v2) (+ (neg (* ?v1 ?v0)) (+ (neg (* ?w ?z)) (neg (* ?y ?x))))))
searching from the root: [13.224]
(VecAdd
  (VecMAC
    (VecMAC (VecMul (Vec ?v2 ?v2) (Vec ?y ?v3)) (Vec ?z 0) (Vec ?v1 1))
    (Vec ?v3 1)
    (Vec ?x 0))
  (VecAdd
    (VecAdd
      (VecNeg (VecMul (Vec 0 ?x) (Vec 0 ?y)))
      (VecNeg (VecMul (Vec ?w ?w) (Vec ?v0 ?z))))
    (VecNeg (VecMul (Vec ?v0 ?v0) (Vec 0 ?v1)))))
start:
(Vec
  (+ (+ (* ?v3 ?x) (+ (* ?y ?v2) (* ?v1 ?z))) (neg (* ?w ?v0)))
  (+ (* ?v3 ?v2) (+ (neg (* ?v1 ?v0)) (+ (neg (* ?w ?z)) (neg (* ?y ?x))))))
searching from the root: [13.224]
(VecAdd
  (VecMAC
    (VecMAC (VecMul (Vec ?v2 ?v2) (Vec ?y ?v3)) (Vec ?z 0) (Vec ?v1 1))
    (Vec ?v3 1)
    (Vec ?x 0))
  (VecAdd
    (VecAdd
      (VecNeg (VecMul (Vec 0 ?x) (Vec 0 ?y)))
      (VecNeg (VecMul (Vec ?w ?w) (Vec ?v0 ?z))))
    (VecNeg (VecMul (Vec ?v0 ?v0) (Vec 0 ?v1)))))
start:
(Vec
  (+ (+ (* ?v3 ?z) (+ (* ?y ?v0) (* ?v1 ?x))) (neg (* ?w ?v2)))
  (+ (+ (* ?v3 ?v2) (+ (* ?v1 ?v0) (* ?w ?z))) (neg (* ?y ?x))))
searching from the root: [6.816000000000001]
(VecAdd
  (VecMAC
    (VecMAC (VecMul (Vec ?y ?v1) (Vec ?v0 ?v0)) (Vec ?v1 ?w) (Vec ?x ?z))
    (Vec ?v3 ?v3)
    (Vec ?z ?v2))
  (VecNeg (VecMul (Vec ?w ?y) (Vec ?v2 ?x))))
start:
(Vec
  (+ (+ (* ?v3 ?z) (+ (* ?y ?v0) (* ?v1 ?x))) (neg (* ?w ?v2)))
  (+ (+ (* ?v3 ?v2) (+ (* ?v1 ?v0) (* ?w ?z))) (neg (* ?y ?x))))
searching from the root: [6.816000000000001]
(VecAdd
  (VecMAC
    (VecMAC (VecMul (Vec ?y ?v1) (Vec ?v0 ?v0)) (Vec ?v1 ?w) (Vec ?x ?z))
    (Vec ?v3 ?v3)
    (Vec ?z ?v2))
  (VecNeg (VecMul (Vec ?w ?y) (Vec ?v2 ?x))))
Starting run with 8 rules
Egraph size: 192
Runner report
=============
  Stop reason: Saturated
  Iterations: 2
  Egraph size: 192 nodes, 188 classes, 192 memo
  Rebuilds: 0, 0.00 per iter
  Total time: 0.000283202
    Search:  (0.30) 0.00008411200000000001
    Apply:   (0.60) 0.000170277
    Rebuild: (0.10) 0.000028406999999999998
Stopped after 2 iterations, reason: Some(Saturated)

Cost: 64.592

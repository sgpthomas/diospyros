Running egg with timeout 360s, width: 2
Input prog:
(Concat
  (Vec
    (+
      (+
        (* (Get aq 3) (Get bq 0))
        (+ (* (Get aq 0) (Get bq 3)) (* (Get aq 1) (Get bq 2))))
      (neg (* (Get aq 2) (Get bq 1))))
    (+
      (+
        (* (Get aq 3) (Get bq 1))
        (+ (* (Get aq 1) (Get bq 3)) (* (Get aq 2) (Get bq 0))))
      (neg (* (Get aq 0) (Get bq 2)))))
  (Concat
    (Vec
      (+
        (+
          (* (Get aq 3) (Get bq 2))
          (+ (* (Get aq 2) (Get bq 3)) (* (Get aq 0) (Get bq 1))))
        (neg (* (Get aq 1) (Get bq 0))))
      (+
        (* (Get aq 3) (Get bq 3))
        (+
          (neg (* (Get aq 0) (Get bq 0)))
          (+ (neg (* (Get aq 1) (Get bq 1))) (neg (* (Get aq 2) (Get bq 2)))))))
    (Concat
      (Vec
        (+
          (Get at 0)
          (+
            (Get bt 0)
            (+
              (+
                (*
                  (Get aq 1)
                  (* 2 (+ (* (Get aq 0) (Get bt 1)) (neg (* (Get aq 1) (Get bt 0))))))
                (neg
                  (*
                    (Get aq 2)
                    (* 2 (+ (* (Get aq 2) (Get bt 0)) (neg (* (Get aq 0) (Get bt 2))))))))
              (*
                (Get aq 3)
                (* 2 (+ (* (Get aq 1) (Get bt 2)) (neg (* (Get aq 2) (Get bt 1)))))))))
        (+
          (Get at 1)
          (+
            (Get bt 1)
            (+
              (+
                (*
                  (Get aq 2)
                  (* 2 (+ (* (Get aq 1) (Get bt 2)) (neg (* (Get aq 2) (Get bt 1))))))
                (neg
                  (*
                    (Get aq 0)
                    (* 2 (+ (* (Get aq 0) (Get bt 1)) (neg (* (Get aq 1) (Get bt 0))))))))
              (*
                (Get aq 3)
                (* 2 (+ (* (Get aq 2) (Get bt 0)) (neg (* (Get aq 0) (Get bt 2))))))))))
      (Vec
        (+
          (Get at 2)
          (+
            (Get bt 2)
            (+
              (+
                (*
                  (Get aq 0)
                  (* 2 (+ (* (Get aq 2) (Get bt 0)) (neg (* (Get aq 0) (Get bt 2))))))
                (neg
                  (*
                    (Get aq 1)
                    (* 2 (+ (* (Get aq 1) (Get bt 2)) (neg (* (Get aq 2) (Get bt 1))))))))
              (*
                (Get aq 3)
                (* 2 (+ (* (Get aq 0) (Get bt 1)) (neg (* (Get aq 1) (Get bt 0)))))))))
        0))))
Dropping inapplicable rules: sqrt-1-inv sqrt-1-inv-rev sqrt_unop /_binop_vec
Vec([363, 364])
Vec([363, 364])
Vec([208, 285])
Vec([208, 285])
Vec([96, 130])
Vec([96, 130])
Vec([31, 63])
Vec([31, 63])
p: (Vec
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x))))))))
  0)
p: (Vec
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x))))))))
  0)
p: (Vec
  (+
    ?v4
    (+
      ?z
      (+
        (+
          (* ?v1 (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))
          (neg (* ?w (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))
        (* ?v0 (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2))))))))
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))))
p: (Vec
  (+
    ?v4
    (+
      ?z
      (+
        (+
          (* ?v1 (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))
          (neg (* ?w (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))
        (* ?v0 (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2))))))))
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))))
p: (Vec
  (+ (+ (* ?v3 ?x) (+ (* ?y ?v2) (* ?v1 ?z))) (neg (* ?w ?v0)))
  (+ (* ?v3 ?v2) (+ (neg (* ?v1 ?v0)) (+ (neg (* ?w ?z)) (neg (* ?y ?x))))))
p: (Vec
  (+ (+ (* ?v3 ?x) (+ (* ?y ?v2) (* ?v1 ?z))) (neg (* ?w ?v0)))
  (+ (* ?v3 ?v2) (+ (neg (* ?v1 ?v0)) (+ (neg (* ?w ?z)) (neg (* ?y ?x))))))
p: (Vec
  (+ (+ (* ?v3 ?z) (+ (* ?y ?v0) (* ?v1 ?x))) (neg (* ?w ?v2)))
  (+ (+ (* ?v3 ?v2) (+ (* ?v1 ?v0) (* ?w ?z))) (neg (* ?y ?x))))
p: (Vec
  (+ (+ (* ?v3 ?z) (+ (* ?y ?v0) (* ?v1 ?x))) (neg (* ?w ?v2)))
  (+ (+ (* ?v3 ?v2) (+ (* ?v1 ?v0) (* ?w ?z))) (neg (* ?y ?x))))
start:
(Vec
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x))))))))
  0)
searching from the root: [20.04]
(VecAdd
  (VecMAC
    (VecNeg
      (VecMul
        (Vec 2 1)
        (VecMul
          (Vec ?y 0)
          (VecMAC (VecNeg (VecMul (Vec ?z 1) (Vec ?v1 0))) (Vec ?v2 1) (Vec ?y 1)))))
    (Vec 2 0)
    (VecMul
      (Vec ?w 1)
      (VecMAC (VecNeg (VecMul (Vec ?v2 0) (Vec ?w 1))) (Vec ?v1 1) (Vec ?x 1))))
  (VecMAC
    (VecAdd (Vec ?v3 0) (Vec ?v2 0))
    (Vec 2 0)
    (VecMul
      (Vec ?v0 1)
      (VecMAC (VecNeg (VecMul (Vec ?y 0) (Vec ?x 1))) (Vec ?w 1) (Vec ?z 1)))))
start:
(Vec
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x))))))))
  0)
searching from the root: [20.04]
(VecAdd
  (VecMAC
    (VecNeg
      (VecMul
        (Vec 2 1)
        (VecMul
          (Vec ?y 0)
          (VecMAC (VecNeg (VecMul (Vec ?z 1) (Vec ?v1 0))) (Vec ?v2 1) (Vec ?y 1)))))
    (Vec 2 0)
    (VecMul
      (Vec ?w 1)
      (VecMAC (VecNeg (VecMul (Vec ?v2 0) (Vec ?w 1))) (Vec ?v1 1) (Vec ?x 1))))
  (VecMAC
    (VecAdd (Vec ?v3 0) (Vec ?v2 0))
    (Vec 2 0)
    (VecMul
      (Vec ?v0 1)
      (VecMAC (VecNeg (VecMul (Vec ?y 0) (Vec ?x 1))) (Vec ?w 1) (Vec ?z 1)))))
start:
(Vec
  (+
    ?v4
    (+
      ?z
      (+
        (+
          (* ?v1 (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))
          (neg (* ?w (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))
        (* ?v0 (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2))))))))
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))))
searching from the root: [20.04]
(VecAdd
  (VecMAC
    (VecNeg
      (VecMul
        (Vec 2 ?y)
        (VecMul
          (Vec ?w 2)
          (VecMAC (VecNeg (VecMul (Vec ?y ?v1) (Vec ?x ?z))) (Vec ?z ?v2) (Vec ?w ?y)))))
    (Vec 2 2)
    (VecMul
      (Vec ?v0 ?v0)
      (VecMAC (VecNeg (VecMul (Vec ?w ?y) (Vec ?v2 ?x))) (Vec ?v1 ?w) (Vec ?x ?z))))
  (VecMAC
    (VecAdd (Vec ?v4 ?v3) (Vec ?z ?v2))
    (Vec ?v1 2)
    (VecMul
      (Vec 2 ?w)
      (VecMAC (VecNeg (VecMul (Vec ?z ?v2) (Vec ?v1 ?w))) (Vec ?y ?v1) (Vec ?v2 ?x)))))
start:
(Vec
  (+
    ?v4
    (+
      ?z
      (+
        (+
          (* ?v1 (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))
          (neg (* ?w (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))
        (* ?v0 (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2))))))))
  (+
    ?v3
    (+
      ?v2
      (+
        (+
          (* ?w (* 2 (+ (* ?v1 ?x) (neg (* ?w ?v2)))))
          (neg (* ?y (* 2 (+ (* ?y ?v2) (neg (* ?v1 ?z)))))))
        (* ?v0 (* 2 (+ (* ?w ?z) (neg (* ?y ?x)))))))))
searching from the root: [20.04]
(VecAdd
  (VecMAC
    (VecNeg
      (VecMul
        (Vec 2 ?y)
        (VecMul
          (Vec ?w 2)
          (VecMAC (VecNeg (VecMul (Vec ?y ?v1) (Vec ?x ?z))) (Vec ?z ?v2) (Vec ?w ?y)))))
    (Vec 2 2)
    (VecMul
      (Vec ?v0 ?v0)
      (VecMAC (VecNeg (VecMul (Vec ?w ?y) (Vec ?v2 ?x))) (Vec ?v1 ?w) (Vec ?x ?z))))
  (VecMAC
    (VecAdd (Vec ?v4 ?v3) (Vec ?z ?v2))
    (Vec ?v1 2)
    (VecMul
      (Vec 2 ?w)
      (VecMAC (VecNeg (VecMul (Vec ?z ?v2) (Vec ?v1 ?w))) (Vec ?y ?v1) (Vec ?v2 ?x)))))
start:
(Vec
  (+ (+ (* ?v3 ?x) (+ (* ?y ?v2) (* ?v1 ?z))) (neg (* ?w ?v0)))
  (+ (* ?v3 ?v2) (+ (neg (* ?v1 ?v0)) (+ (neg (* ?w ?z)) (neg (* ?y ?x))))))
searching from the root: [12.223999999999998]
(VecAdd
  (VecAdd
    (VecMAC (VecNeg (VecMul (Vec 1 ?w) (Vec 0 ?z))) (Vec ?z 1) (Vec ?v1 0))
    (VecMAC (VecNeg (VecMul (Vec ?w ?x) (Vec ?v0 ?y))) (Vec ?v2 1) (Vec ?y 0)))
  (VecMAC (VecNeg (VecMul (Vec 1 ?v1) (Vec 0 ?v0))) (Vec ?v3 ?v3) (Vec ?x ?v2)))
start:
(Vec
  (+ (+ (* ?v3 ?x) (+ (* ?y ?v2) (* ?v1 ?z))) (neg (* ?w ?v0)))
  (+ (* ?v3 ?v2) (+ (neg (* ?v1 ?v0)) (+ (neg (* ?w ?z)) (neg (* ?y ?x))))))
searching from the root: [12.223999999999998]
(VecAdd
  (VecAdd
    (VecMAC (VecNeg (VecMul (Vec 1 ?w) (Vec 0 ?z))) (Vec ?z 1) (Vec ?v1 0))
    (VecMAC (VecNeg (VecMul (Vec ?w ?x) (Vec ?v0 ?y))) (Vec ?v2 1) (Vec ?y 0)))
  (VecMAC (VecNeg (VecMul (Vec 1 ?v1) (Vec 0 ?v0))) (Vec ?v3 ?v3) (Vec ?x ?v2)))
start:
(Vec
  (+ (+ (* ?v3 ?z) (+ (* ?y ?v0) (* ?v1 ?x))) (neg (* ?w ?v2)))
  (+ (+ (* ?v3 ?v2) (+ (* ?v1 ?v0) (* ?w ?z))) (neg (* ?y ?x))))
searching from the root: [5.816000000000001]
(VecMAC
  (VecMAC
    (VecMAC (VecNeg (VecMul (Vec ?w ?y) (Vec ?v2 ?x))) (Vec ?v3 ?v0) (Vec ?z ?v1))
    (Vec ?v1 ?v2)
    (Vec ?x ?v3))
  (Vec ?y ?z)
  (Vec ?v0 ?w))
start:
(Vec
  (+ (+ (* ?v3 ?z) (+ (* ?y ?v0) (* ?v1 ?x))) (neg (* ?w ?v2)))
  (+ (+ (* ?v3 ?v2) (+ (* ?v1 ?v0) (* ?w ?z))) (neg (* ?y ?x))))
searching from the root: [5.816000000000001]
(VecMAC
  (VecMAC
    (VecMAC (VecNeg (VecMul (Vec ?w ?y) (Vec ?v2 ?x))) (Vec ?v3 ?v0) (Vec ?z ?v1))
    (Vec ?v1 ?v2)
    (Vec ?x ?v3))
  (Vec ?y ?z)
  (Vec ?v0 ?w))
Starting run with 8 rules
Egraph size: 197
Runner report
=============
  Stop reason: Saturated
  Iterations: 2
  Egraph size: 197 nodes, 193 classes, 197 memo
  Rebuilds: 0, 0.00 per iter
  Total time: 0.00025084
    Search:  (0.31) 0.000077426
    Apply:   (0.58) 0.000146037
    Rebuild: (0.11) 0.000026843
Stopped after 2 iterations, reason: Some(Saturated)
==== Starting Second Phase Optimization ====
Using 0 rules
Improved cost by 0 (58.58600000000001 - 58.58600000000001)

Cost: 58.58600000000001
